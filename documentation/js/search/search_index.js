var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.04,1,0.611]],["body/components/AppComponent.html",[0,0.057,1,0.949,2,0.803,3,0.214,4,0.186,5,0.931,6,0.698,7,0.65,8,0.698,9,0.186,10,2.394,11,0.56,12,1.422,13,1.519,14,1.011,15,1.128,16,4.064,17,1,18,4.753,19,1,20,4.067,21,0.37,22,1,23,1.257,24,4.753,25,1.47,26,4.753,27,0.931,28,3.43,29,3.01,30,4.753,31,1.143,32,2.394,33,2.892,34,1.216,35,4.067,36,1.152,37,0.028,38,0.716,39,0.616,40,4.067,41,1.308,42,2.839,43,1.902,44,0.65,45,0.75,46,1,47,1.074,48,3.15,49,2.839,50,2.839,51,2.839,52,2.839,53,0.564,54,0.304,55,2.101,56,1.707,57,1.882,58,2.101,59,0.214,60,0.337,61,1.231,62,2.839,63,2.839,64,0.862,65,2.839,66,2.101,67,4.067,68,2.696,69,2.445,70,4.067,71,2.696,72,4.753,73,2.857,74,2.839,75,1.576,76,1.561,77,1.561,78,1.561,79,1.789,80,1.276,81,1.42,82,1.548,83,2.394,84,2.839,85,2.237,86,1.437,87,2.839,88,1.346,89,0.924,90,2.839,91,0.865,92,2.445,93,2.394,94,2.394,95,0.862,96,0.862,97,2.839,98,2.839,99,1.064,100,1.914,101,2.696,102,2.101,103,1.328,104,1.231,105,1.781,106,1.707,107,2.101,108,1.143,109,1.143,110,1.231,111,1.707,112,2.237,113,2.839,114,1.437,115,1.707,116,1.324,117,2.839,118,2.857,119,1.525,120,1.525,121,1.882,122,0.992,123,1.882,124,2.394,125,2.839,126,2.394,127,2.394,128,2.394,129,2.839,130,2.839,131,2.394,132,2.839,133,1.328,134,0.519,135,0.931,136,1,137,0.441,138,1.276,139,0.698,140,0.698,141,0.519,142,0.604,143,1.169,144,0.519,145,0.698,146,0.519,147,1,148,0.519,149,0.698,150,0.519,151,0.698,152,0.519,153,0.698,154,0.519,155,0.519,156,0.743,157,0.698,158,0.479,159,1,160,0.519,161,0.698,162,0.519,163,0.519,164,0.698,165,0.698,166,0.519,167,0.65,168,0.698,169,0.519,170,0.519,171,0.698,172,0.519,173,0.698,174,0.479,175,0.479,176,0.698,177,0.479,178,0.65,179,0.698,180,0.016,181,0.016]],["title/modules/AppModule.html",[182,1.253,183,2.215]],["body/modules/AppModule.html",[1,1.221,3,0.288,4,0.25,9,0.25,15,0.752,37,0.028,53,0.781,54,0.534,59,0.288,60,0.452,64,1.157,73,2.992,134,0.696,142,0.811,180,0.02,181,0.02,182,1.865,183,4.399,184,1.928,185,1.782,186,3.672,187,3.672,188,3.532,189,2.526,190,3.213,191,3.213,192,3.213,193,3.213,194,3.213,195,3.437,196,3.758,197,3.298,198,2.526,199,2.096,200,3.811,201,3.682,202,3.682,203,3.811,204,3.213,205,2.291,206,2.82,207,3.811,208,2.992,209,3.811,210,3.213,211,4.976,212,3.213,213,3.811,214,2.82,215,2.82,216,3.811,217,2.82,218,2.82,219,2.82,220,2.526,221,3.811,222,4.976,223,3.532,224,3.682,225,3.811,226,4.196,227,3.213,228,4.976,229,1.865,230,3.811,231,3.811,232,3.811,233,2.526,234,3.811,235,3.213,236,2.526,237,1.535,238,2.82,239,2.526,240,3.811,241,3.811]],["title/directives/AuthDirective.html",[137,0.52,175,0.564]],["body/directives/AuthDirective.html",[3,0.3,4,0.261,9,0.261,11,0.785,12,1.088,21,0.518,22,1.258,25,1.126,27,1.171,31,1.601,34,1.27,36,1.126,37,0.028,38,0.667,39,0.607,41,1.294,44,0.91,45,1.35,46,0.978,47,1.05,53,0.607,54,0.426,59,0.3,60,0.472,61,1.723,137,0.96,167,0.91,174,0.671,175,0.863,180,0.02,181,0.02,220,2.635,223,3.589,242,3.352,243,5.208,244,2.487,245,3.589,246,2.217,247,3.976,248,3.021,249,6.43,250,6.43,251,5.114,252,5.114,253,3.976,254,3.976,255,5.114,256,4.313,257,2.451,258,2.942,259,2.635,260,3.352,261,2.635,262,3.976,263,3.976,264,3.352,265,2.942,266,3.352,267,3.352,268,4.313,269,3.976,270,3.976,271,2.942,272,3.976,273,3.976,274,3.352,275,2.942,276,3.976,277,3.976,278,3.976,279,3.976]],["title/components/AvailablePlacesComponent.html",[0,0.04,141,0.611]],["body/components/AvailablePlacesComponent.html",[0,0.052,1,0.446,2,0.718,3,0.184,4,0.16,5,0.558,6,0.6,7,0.558,8,0.6,9,0.16,11,0.481,12,1.396,13,1.489,14,0.519,15,0.718,17,0.895,19,0.895,21,0.318,22,0.895,23,1.321,25,1.03,27,0.833,31,0.982,33,2.84,34,1.277,36,1.03,37,0.028,38,0.673,39,0.666,41,0.558,44,0.996,45,0.961,46,1.187,47,1.274,53,0.642,54,0.261,57,1.616,58,1.804,59,0.184,60,0.289,61,1.057,64,0.74,73,1.466,75,1.105,76,1.341,77,1.341,78,1.341,79,0.794,80,1.332,82,0.794,88,0.69,89,0.794,91,0.519,105,0.914,116,0.794,119,0.914,120,0.914,133,1.14,134,0.446,135,0.833,136,0.895,137,0.379,138,1.187,139,0.6,140,0.6,141,0.882,142,1.296,143,1.071,144,0.446,145,0.6,146,0.446,147,0.895,148,0.446,149,0.6,150,0.446,151,0.6,152,0.446,153,0.6,154,0.446,155,0.446,156,0.665,157,0.6,158,0.412,159,0.895,160,0.446,161,0.6,162,0.446,163,0.446,164,1.477,165,0.6,166,0.446,167,0.558,168,0.6,169,0.446,170,0.446,171,0.6,172,0.446,173,0.6,174,0.412,175,0.412,176,0.6,177,0.412,178,0.558,179,0.6,180,0.014,181,0.014,182,0.914,217,1.804,220,2.412,223,3.256,229,0.914,233,1.616,236,3.199,237,1.753,238,1.804,239,1.616,244,2.26,245,2.902,258,1.804,275,1.804,280,3.083,281,4.509,282,4.509,283,1.804,284,1.841,285,2.885,286,3.221,287,2.692,288,3.67,289,2.885,290,4.354,291,3.821,292,3.256,293,4.353,294,2.902,295,3.068,296,2.056,297,3.068,298,2.438,299,2.438,300,3.638,301,2.984,302,2.438,303,2.056,304,2.533,305,2.056,306,2.056,307,2.056,308,3.068,309,2.438,310,2.438,311,1.616,312,2.692,313,2.056,314,2.056,315,2.056,316,1.057,317,1.616,318,2.056,319,1.804,320,1.804,321,3.67,322,2.692,323,2.056,324,1.804,325,1.804,326,1.804,327,2.056,328,2.056,329,2.056,330,2.438,331,1.466,332,2.438,333,3.068,334,2.056,335,1.616,336,2.056,337,1.804,338,1.804,339,2.056,340,2.056,341,2.438,342,2.056,343,2.056,344,2.056,345,3.221,346,1.804,347,2.692,348,3.068,349,3.068,350,2.692,351,2.056,352,1.466,353,1.616]],["title/components/CardComponent.html",[0,0.04,144,0.611]],["body/components/CardComponent.html",[0,0.068,1,0.717,2,1.001,3,0.296,4,0.257,5,0.898,6,0.964,7,0.898,8,0.964,9,0.257,11,0.774,12,1.467,13,1.572,14,0.834,15,0.774,17,1.247,19,1.247,23,0.898,37,0.027,38,0.733,53,0.465,54,0.42,59,0.296,60,0.465,80,1.382,91,0.834,95,1.191,96,1.191,111,2.358,134,0.717,135,1.16,136,1.247,137,0.61,138,1.461,139,0.964,140,0.964,141,0.717,142,0.834,143,1.382,144,1.085,145,0.964,146,0.717,147,1.247,148,0.717,149,0.964,150,0.717,151,0.964,152,0.717,153,0.964,154,0.717,155,0.717,156,0.927,157,0.964,158,0.662,159,1.247,160,0.717,161,0.964,162,0.717,163,0.717,164,0.964,165,0.964,166,0.717,167,0.898,168,0.964,169,0.717,170,0.717,171,0.964,172,0.717,173,0.964,174,0.662,175,0.662,176,0.964,177,0.662,178,0.898,179,0.964,180,0.02,181,0.02,354,3.306,355,4.737,356,5.618,357,5.069,358,3.048,359,1.579,360,1.579,361,1.7,362,1.579,363,3.921,364,2.902]],["title/modules/ComponentsModule.html",[182,1.253,208,2.01]],["body/modules/ComponentsModule.html",[3,0.21,4,0.182,5,0.637,9,0.182,37,0.028,53,0.782,54,0.298,57,2.656,59,0.21,60,0.33,134,0.508,141,1.158,144,1.158,146,1.158,148,1.158,150,1.158,152,1.158,154,1.037,155,1.158,158,1.069,160,1.158,162,1.158,163,1.158,166,1.037,169,1.158,170,1.158,172,1.158,180,0.016,181,0.016,182,1.042,184,1.407,185,1.3,186,3.114,187,1.843,188,1.672,189,3.114,195,3.121,197,2.656,198,1.843,199,1.529,201,2.965,202,2.965,208,4.182,210,2.345,281,2.058,282,2.058,365,2.345,366,2.345,367,2.781,368,2.345,369,2.781,370,2.781,371,2.781,372,2.781,373,2.781,374,2.781,375,2.781,376,2.058,377,2.781,378,2.965,379,2.781,380,2.058,381,2.781,382,2.781,383,2.058,384,4.007,385,3.611,386,2.965,387,2.781,388,4.007,389,2.058,390,2.058,391,2.781,392,2.058,393,2.058,394,2.058,395,2.781,396,2.781]],["title/components/ErrorModalComponent.html",[0,0.04,146,0.611]],["body/components/ErrorModalComponent.html",[0,0.059,1,0.544,2,0.83,3,0.225,4,0.195,5,0.681,6,0.732,7,0.681,8,0.732,9,0.195,11,0.587,12,1.429,13,1.527,14,0.633,15,0.587,17,1.034,19,1.034,21,0.388,23,1.419,25,0.843,27,0.963,31,1.198,32,2.509,33,2.937,34,1.128,36,0.843,37,0.028,38,0.691,39,0.578,41,0.963,44,0.681,45,0.786,46,1.034,47,1.11,53,0.499,54,0.319,59,0.225,60,0.353,61,1.29,75,1.763,76,2.682,77,2.682,78,2.682,79,1.369,80,1.2,81,1.703,82,1.943,88,1.191,89,1.726,91,0.633,95,1.277,96,0.904,99,1.115,100,1.694,103,1.391,104,1.29,105,1.576,108,1.198,109,1.198,110,1.29,112,1.636,116,1.588,119,1.576,120,1.576,122,1.039,133,1.966,134,0.544,135,0.963,136,1.034,137,0.463,138,1.304,139,0.732,140,0.732,141,0.544,142,0.633,143,1.2,144,0.544,145,0.732,146,0.969,147,1.034,148,0.544,149,0.732,150,0.544,151,0.732,152,0.544,153,0.732,154,0.544,155,0.544,156,0.769,157,0.732,158,0.502,159,1.034,160,0.544,161,0.732,162,0.544,163,0.544,164,0.732,165,0.732,166,0.544,167,0.681,168,0.732,169,0.544,170,0.544,171,0.732,172,0.544,173,0.732,174,0.502,175,0.502,176,0.732,177,0.502,178,0.681,179,0.732,180,0.017,181,0.017,246,1.823,257,2.114,352,2.932,359,1.198,360,1.198,361,1.29,362,1.198,394,4.138,397,3.706,398,2.509,399,4.113,400,4.113,401,3.546,402,5.301,403,4.715,404,2.615,405,4.205,406,2.975,407,2.975,408,2.975,409,2.975,410,4.205,411,1.506,412,2.509,413,2.975,414,4.205,415,1.972,416,1.972,417,1.789,418,1.636,419,1.506,420,1.506,421,2.128,422,2.975,423,2.202,424,2.975,425,1.506,426,2.975,427,1.198,428,2.975,429,2.975,430,1.789,431,2.975]],["title/injectables/ErrorService.html",[33,1.691,432,1.691]],["body/injectables/ErrorService.html",[3,0.33,4,0.287,9,0.287,14,0.931,21,0.571,22,1.337,23,1.353,25,1.24,27,1.244,33,2.75,34,1.315,36,1.24,37,0.028,38,0.571,39,0.645,41,1.353,44,1.244,45,1.632,46,1.337,47,1.435,53,0.645,54,0.469,59,0.33,60,0.519,156,0.994,180,0.022,181,0.022,244,2.381,316,1.898,397,4.214,403,3.691,432,2.75,433,3.239,434,3.691,435,5.912,436,6.183,437,5.436,438,4.378,439,5.436,440,4.378,441,5.912,442,4.378,443,3.918,444,5.436,445,4.378,446,3.691,447,4.378,448,4.378]],["title/components/FavoritePlacesComponent.html",[0,0.04,148,0.611]],["body/components/FavoritePlacesComponent.html",[0,0.052,1,0.444,2,0.717,3,0.183,4,0.159,5,0.556,6,0.598,7,0.556,8,0.598,9,0.159,11,0.48,12,1.395,13,1.488,14,0.517,15,0.717,17,0.893,19,0.893,21,0.317,22,0.893,23,1.319,25,1.028,27,0.831,31,0.979,33,2.837,34,1.276,36,1.028,37,0.028,38,0.673,39,0.665,41,0.556,44,0.995,45,0.958,46,1.185,47,1.272,53,0.642,54,0.261,57,1.611,58,1.798,59,0.183,60,0.288,61,1.053,64,0.738,73,1.461,75,1.102,76,1.337,77,1.337,78,1.337,79,0.791,80,1.331,82,0.791,88,0.688,89,0.791,91,0.517,105,0.911,116,0.791,119,0.911,120,0.911,133,1.136,134,0.444,135,0.831,136,0.893,137,0.378,138,1.185,139,0.598,140,0.598,141,0.444,142,0.772,143,1.069,144,0.444,145,0.598,146,0.444,147,0.893,148,0.881,149,1.475,150,0.444,151,0.598,152,0.444,153,0.598,154,0.444,155,0.444,156,0.663,157,0.598,158,0.41,159,0.893,160,0.444,161,0.598,162,0.444,163,0.444,164,1.475,165,0.598,166,0.444,167,0.556,168,0.598,169,0.444,170,0.444,171,0.598,172,0.444,173,0.598,174,0.41,175,0.41,176,0.598,177,0.41,178,0.556,179,0.598,180,0.014,181,0.014,182,0.911,217,1.798,220,2.406,223,3.253,229,0.911,233,1.611,236,3.194,237,1.75,238,1.798,239,1.611,244,2.258,245,2.897,258,1.798,275,1.798,280,3.081,283,1.798,284,1.837,285,2.88,286,3.215,287,2.686,288,3.663,289,2.88,290,4.349,291,3.816,292,3.253,294,2.897,296,2.049,297,2.049,301,2.981,303,2.049,304,2.53,305,2.049,306,2.049,307,2.049,308,3.061,311,1.611,312,2.686,313,2.049,314,2.049,315,2.049,316,1.053,317,1.611,318,2.049,319,1.798,320,1.798,321,3.663,322,2.686,323,2.049,324,1.798,325,1.798,326,1.798,327,2.049,328,2.049,329,2.049,331,1.461,333,3.061,334,2.049,335,1.611,336,2.049,337,1.798,338,1.798,339,2.049,340,2.049,342,2.049,343,2.049,345,3.215,346,1.798,347,2.686,348,3.061,349,3.061,350,2.686,351,2.049,352,1.461,353,1.611,389,4.505,390,4.505,449,4.345,450,3.63,451,3.63,452,2.43,453,2.43,454,3.63,455,2.43,456,2.43,457,3.63,458,2.43,459,2.43,460,2.43,461,2.049]],["title/components/HeaderComponent.html",[0,0.04,150,0.611]],["body/components/HeaderComponent.html",[0,0.062,1,0.598,2,0.887,3,0.247,4,0.215,5,0.749,6,0.805,7,0.749,8,0.805,9,0.215,11,0.646,12,1.443,13,1.544,14,0.696,15,1.143,16,4.087,17,1.105,19,1.105,23,0.749,37,0.027,38,0.669,53,0.388,54,0.351,59,0.247,60,0.388,75,1.558,79,1.799,80,1.557,81,1.143,85,1.8,88,1.564,89,1.671,91,0.696,95,1.365,96,1.365,99,1.227,100,1.81,101,2.169,103,1.53,104,1.419,105,1.923,109,1.318,112,2.471,116,1.671,119,1.684,120,1.684,121,2.169,122,2.022,123,2.169,131,2.759,133,1.53,134,0.598,135,1.029,136,1.105,137,0.509,138,1.359,139,0.805,140,0.805,141,0.598,142,0.696,143,1.262,144,0.598,145,0.805,146,0.598,147,1.105,148,0.598,149,0.805,150,1.01,151,0.805,152,0.598,153,0.805,154,0.598,155,0.598,156,0.821,157,0.805,158,0.552,159,1.105,160,0.598,161,0.805,162,0.598,163,0.598,164,0.805,165,0.805,166,0.598,167,0.749,168,0.805,169,0.598,170,0.598,171,0.805,172,0.598,173,0.805,174,0.552,175,0.552,176,0.805,177,0.552,178,0.749,179,0.805,180,0.018,181,0.018,359,1.318,360,1.318,361,1.419,362,1.318,411,1.656,427,1.81,430,1.967,462,2.759,463,5.524,464,5.132,465,4.494,466,5.524,467,5.524,468,4.494,469,3.789,470,3.789,471,4.494,472,4.494,473,1.967,474,2.759,475,3.273,476,2.759,477,3.273,478,3.273,479,2.274,480,2.169,481,4.494,482,2.421,483,1.656,484,2.421,485,4.494,486,3.273,487,2.169,488,2.421,489,2.759,490,2.421,491,2.169,492,2.421,493,2.759,494,1.8,495,3.273]],["title/interfaces/Lesson.html",[69,2.01,496,1.449]],["body/interfaces/Lesson.html",[3,0.374,4,0.325,9,0.325,21,0.646,22,1.441,37,0.027,38,0.841,39,0.74,41,1.563,43,3.015,59,0.374,69,3.522,180,0.023,181,0.023,496,2.147,497,2.979,498,4.177,499,5.437]],["title/components/LessonComponent.html",[0,0.04,152,0.611]],["body/components/LessonComponent.html",[0,0.06,1,0.568,2,0.856,3,0.235,4,0.204,5,0.712,6,0.765,7,0.712,8,0.765,9,0.204,11,0.614,12,1.436,13,1.535,14,0.661,15,0.856,16,2.3,17,1.067,19,1.067,21,0.405,23,0.712,27,0.993,28,4.556,29,3.209,34,1.209,37,0.027,38,0.651,39,0.641,44,0.712,45,0.821,53,0.514,54,0.333,59,0.235,60,0.369,64,0.944,68,3.31,69,3.852,75,1.517,79,1.012,80,1.398,81,1.514,82,1.759,85,1.709,88,1.228,91,0.661,95,1.317,96,0.944,99,1.165,100,1.252,105,1.165,108,1.252,109,1.252,110,1.88,114,1.573,116,1.012,119,1.165,120,1.625,122,1.744,134,0.568,135,0.993,136,1.067,137,0.483,138,1.329,139,0.765,140,0.765,141,0.568,142,0.661,143,1.228,144,0.568,145,0.765,146,0.568,147,1.067,148,0.568,149,0.765,150,0.568,151,0.765,152,0.988,153,0.765,154,0.568,155,0.568,156,0.913,157,0.765,158,0.525,159,1.067,160,0.568,161,0.765,162,0.568,163,0.568,164,0.765,165,0.765,166,0.568,167,0.712,168,0.765,169,0.568,170,0.568,171,0.765,172,0.568,173,0.765,174,0.525,175,0.525,176,0.765,177,0.525,178,0.712,179,0.765,180,0.017,181,0.017,229,2.025,246,1.88,257,1.347,359,1.252,360,1.252,361,1.347,362,1.252,419,1.573,420,1.573,425,1.573,473,1.869,482,2.3,483,1.573,487,2.06,488,2.3,489,2.621,491,2.06,494,1.709,500,2.621,501,4.994,502,4.336,503,4.994,504,2.607,505,4.994,506,2.194,507,3.108,508,3.657,509,3.108,510,3.002,511,3.108,512,3.108,513,3.108,514,3.108,515,2.607,516,3.108,517,2.874,518,3.108,519,3.108,520,3.108,521,4.336,522,3.108,523,2.06,524,3.108,525,3.108,526,1.709,527,1.869,528,3.108,529,2.385,530,3.108,531,3.108,532,3.108,533,3.108,534,2.06,535,3.108,536,2.3]],["title/components/ModalComponent.html",[0,0.04,154,0.611]],["body/components/ModalComponent.html",[0,0.062,1,0.602,2,0.89,3,0.248,4,0.216,5,0.753,6,0.81,7,0.753,8,0.81,9,0.216,11,0.65,12,1.444,13,1.545,14,0.7,15,0.65,17,1.11,19,1.11,21,0.671,22,1.11,23,0.753,27,1.033,34,0.96,37,0.027,38,0.671,39,0.39,44,0.753,45,1.191,53,0.39,54,0.353,59,0.248,60,0.39,80,1.559,81,1.575,85,1.81,86,1.665,88,0.932,91,0.7,92,1.979,95,0.999,96,0.999,111,1.979,118,2.712,122,1.575,134,0.602,135,1.033,136,1.11,137,0.512,138,1.362,139,0.81,140,0.81,141,0.602,142,0.7,143,1.266,144,0.602,145,0.81,146,0.602,147,1.11,148,0.602,149,0.81,150,0.602,151,0.81,152,0.602,153,0.81,154,1.012,155,0.602,156,0.825,157,0.81,158,0.556,159,1.11,160,0.602,161,0.81,162,0.602,163,0.602,164,0.81,165,0.81,166,0.602,167,0.753,168,0.81,169,0.602,170,0.602,171,0.81,172,0.602,173,0.81,174,0.556,175,0.556,176,0.81,177,0.556,178,0.753,179,0.81,180,0.018,181,0.018,199,1.81,244,2.073,284,2.283,304,2.109,359,1.326,360,1.326,362,1.817,364,2.435,397,3.412,399,4.34,400,4.34,401,3.804,416,2.181,482,2.435,483,2.283,484,2.435,527,1.979,537,2.775,538,4.34,539,5.147,540,4.669,541,3.291,542,4.892,543,2.775,544,4.511,545,3.804,546,3.804,547,3.291,548,2.775,549,3.291,550,2.775,551,3.291,552,4.511,553,3.291,554,2.775,555,3.291,556,2.775,557,3.804,558,4.511,559,3.804,560,1.979,561,1.979,562,2.775,563,3.291,564,2.775,565,3.291,566,3.291,567,3.291,568,3.804,569,2.712,570,3.291,571,2.775,572,3.291]],["title/components/NewRequestComponent.html",[0,0.04,155,0.611]],["body/components/NewRequestComponent.html",[0,0.06,1,0.571,2,0.859,3,0.236,4,0.205,5,0.715,6,0.769,7,0.715,8,0.769,9,0.205,11,0.617,12,1.436,13,1.536,14,0.665,15,0.617,17,1.071,19,1.071,21,0.408,23,0.715,27,0.996,34,0.926,37,0.027,38,0.653,39,0.371,44,0.715,45,0.825,53,0.371,54,0.335,59,0.236,60,0.371,75,1.521,80,1.232,81,1.749,82,1.92,88,1.233,89,1.018,91,0.665,95,1.645,96,1.322,99,1.632,100,2.017,103,2.035,104,1.887,105,1.171,108,1.753,109,1.259,111,1.879,114,2.203,115,2.617,120,1.171,122,1.52,134,0.571,135,0.996,136,1.071,137,0.486,138,1.332,139,0.769,140,0.769,141,0.571,142,0.665,143,1.232,144,0.571,145,0.769,146,0.571,147,1.071,148,0.571,149,0.769,150,0.571,151,0.769,152,0.571,153,0.769,154,0.571,155,0.99,156,1.16,157,0.769,158,0.528,159,1.071,160,0.571,161,0.769,162,0.571,163,0.571,164,1.232,165,0.769,166,0.571,167,0.715,168,0.769,169,0.571,170,0.571,171,0.769,172,0.571,173,0.769,174,0.528,175,0.528,176,0.769,177,0.528,178,0.715,179,0.769,180,0.017,181,0.017,280,2.534,301,1.582,353,2.885,358,2.617,359,1.259,360,1.259,361,1.355,362,1.259,364,2.313,385,2.885,386,4.363,411,1.582,415,2.072,416,2.072,417,1.879,418,1.719,419,1.582,420,1.582,421,1.582,423,2.313,425,1.582,427,1.259,430,1.879,473,1.879,474,2.635,490,2.313,504,2.617,510,3.011,515,2.617,526,1.719,529,1.719,573,2.635,574,4.567,575,5.009,576,4.353,577,5.416,578,4.802,579,3.125,580,3.125,581,3.125,582,4.353,583,2.885,584,4.353,585,4.353,586,3.67,587,4.353,588,3.125,589,3.125,590,3.125,591,2.635,592,2.072,593,2.072,594,1.879,595,1.879,596,2.635,597,2.635,598,3.125,599,3.125]],["title/components/NewTaskComponent.html",[0,0.04,158,0.564]],["body/components/NewTaskComponent.html",[0,0.052,1,0.436,2,0.707,3,0.18,4,0.156,5,0.546,6,0.587,7,0.546,8,0.587,9,0.156,11,0.471,12,1.392,13,1.484,14,0.508,15,0.471,17,0.881,19,0.881,21,0.311,22,0.881,23,0.546,25,0.676,27,0.82,31,0.961,34,1.22,36,0.676,37,0.028,38,0.623,39,0.637,41,1.172,43,2.01,44,0.546,45,0.63,46,1.175,47,1.261,53,0.51,54,0.256,59,0.18,60,0.283,61,1.035,75,1.451,79,1.815,80,1.442,81,1.668,82,1.867,85,1.313,88,1.449,89,1.555,91,0.508,92,3.231,95,1.451,96,1.088,99,1.611,100,1.731,103,1.675,104,1.553,108,0.961,109,0.961,110,1.035,114,1.208,115,1.435,116,0.777,121,1.582,122,1.251,123,1.582,134,0.436,135,0.82,136,0.881,137,0.371,138,1.175,139,0.587,140,0.587,141,0.436,142,0.508,143,1.057,144,0.436,145,0.587,146,0.436,147,0.881,148,0.436,149,0.587,150,0.436,151,0.587,152,0.436,153,0.587,154,0.436,155,0.436,156,1.092,157,0.587,158,0.806,159,0.881,160,0.436,161,0.587,162,0.436,163,0.436,164,0.587,165,0.587,166,0.436,167,0.546,168,0.587,169,0.436,170,0.436,171,0.587,172,0.436,173,0.587,174,0.403,175,0.403,176,0.587,177,0.403,178,0.546,179,0.587,180,0.014,181,0.014,205,1.435,229,1.342,237,1.443,244,1.443,246,1.553,248,2.719,256,3.02,257,1.035,259,1.582,264,3.02,289,2.849,304,1.675,317,1.582,358,1.435,359,1.443,360,1.443,361,1.863,362,1.443,376,4.338,404,2.01,415,1.582,417,1.435,418,1.313,419,1.208,420,1.208,421,1.812,425,1.812,427,0.961,430,1.435,479,2.719,494,1.313,504,2.153,506,1.208,510,2.584,515,2.153,517,1.582,523,1.582,526,1.97,527,1.435,529,1.97,534,2.374,550,2.013,560,1.435,561,1.435,578,3.625,583,2.374,592,1.582,593,1.582,594,1.435,595,2.584,600,4.944,601,2.013,602,2.393,603,3.625,604,3.02,605,4.299,606,4.299,607,4.299,608,4.028,609,2.364,610,1.766,611,3.181,612,3.534,613,4.7,614,3.582,615,2.387,616,2.387,617,2.387,618,2.387,619,2.387,620,2.387,621,2.387,622,2.387,623,2.387,624,3.02,625,2.387,626,2.387,627,2.584,628,2.387,629,3.181,630,2.387,631,1.313,632,1.116,633,2.387,634,2.387,635,2.387,636,3.625,637,4.299,638,1.582,639,2.387,640,2.013,641,2.013,642,1.766,643,2.387,644,2.387,645,2.013,646,1.766,647,1.766,648,2.387,649,2.387,650,2.013,651,2.387,652,2.387,653,2.387,654,2.387,655,1.766,656,1.582,657,2.387]],["title/interfaces/NewTaskData.html",[496,1.449,658,2.01]],["body/interfaces/NewTaskData.html",[3,0.348,4,0.302,9,0.302,21,0.601,22,1.379,37,0.027,39,0.765,41,1.592,43,2.154,59,0.456,180,0.022,181,0.022,404,3.016,496,2.431,497,2.769,602,2.154,609,2.533,627,3.878,629,4.656,631,3.547,632,2.154,658,3.372,659,3.053,660,2.533,661,2.533,662,2.533,663,3.053]],["title/components/NotFoundComponent.html",[0,0.04,160,0.611]],["body/components/NotFoundComponent.html",[0,0.065,1,0.653,2,0.941,3,0.27,4,0.234,5,0.818,6,0.879,7,0.818,8,0.879,9,0.234,11,0.705,12,1.455,13,1.558,14,0.76,15,0.705,17,1.173,19,1.173,23,0.818,37,0.027,38,0.7,53,0.424,54,0.383,59,0.27,60,0.424,75,1.448,79,1.163,81,1.665,82,1.943,83,3.013,86,1.808,88,1.351,89,1.163,91,0.76,95,1.085,96,1.085,99,1.339,105,1.339,108,1.439,110,1.549,116,1.553,119,1.788,120,1.339,124,4.021,134,0.653,135,1.092,136,1.173,137,0.556,138,1.409,139,0.879,140,0.879,141,0.653,142,0.76,143,1.32,144,0.653,145,0.879,146,0.653,147,1.173,148,0.653,149,0.879,150,0.653,151,0.879,152,0.653,153,0.879,154,0.653,155,0.653,156,0.872,157,0.879,158,0.603,159,1.173,160,1.047,161,0.879,162,0.653,163,0.653,164,0.879,165,0.879,166,0.653,167,0.818,168,0.879,169,0.653,170,0.653,171,0.879,172,0.653,173,0.879,174,0.603,175,0.603,176,0.879,177,0.603,178,0.818,179,0.879,180,0.019,181,0.019,350,4.637,380,2.644,416,2.368,427,1.439,479,1.808,490,2.644,494,1.965,571,3.013,591,3.013,597,3.013,642,2.644,664,3.013,665,3.013,666,5.368,667,4.769,668,4.769,669,4.238,670,4.021,671,4.769,672,4.769,673,3.573,674,3.573,675,3.573,676,3.529,677,3.573,678,3.013,679,3.573,680,3.573,681,3.573]],["title/interfaces/Place.html",[301,1.691,496,1.449]],["body/interfaces/Place.html",[3,0.353,4,0.307,9,0.307,21,0.61,22,1.393,37,0.027,39,0.79,41,1.539,43,2.959,59,0.353,180,0.022,181,0.022,280,2.369,301,2.866,404,2.959,496,2.029,497,2.814,682,3.947,683,3.947,684,6.328,685,6.328,686,6.328,687,5.664,688,4.364,689,4.681,690,4.681]],["title/components/PlacesComponent.html",[0,0.04,162,0.611]],["body/components/PlacesComponent.html",[0,0.055,1,0.491,2,0.771,3,0.203,4,0.176,5,0.895,6,0.661,7,0.615,8,0.661,9,0.176,11,0.53,12,1.413,13,1.508,14,0.572,15,0.53,17,0.961,19,0.961,21,0.51,23,0.615,25,1.107,27,0.895,34,1.076,36,1.107,37,0.027,38,0.701,39,0.637,41,0.895,44,0.895,45,0.709,46,0.661,47,0.709,53,0.464,54,0.288,59,0.203,60,0.319,64,0.816,75,1.399,76,1.477,77,1.477,78,1.477,79,1.272,80,1.587,81,1.609,82,0.875,86,1.359,88,1.305,89,1.5,91,0.572,95,1.703,96,1.632,99,1.465,100,1.574,101,1.781,102,1.988,106,2.35,107,1.988,108,1.574,109,1.082,110,1.694,112,2.149,114,1.359,116,0.875,122,1.365,126,3.884,127,2.265,128,2.265,134,0.491,135,0.895,136,0.961,137,0.418,138,1.244,139,0.661,140,0.661,141,0.491,142,0.572,143,1.133,144,0.491,145,0.661,146,0.491,147,0.961,148,0.491,149,0.661,150,0.491,151,0.661,152,0.491,153,0.661,154,0.491,155,0.491,156,0.842,157,0.661,158,0.454,159,0.961,160,0.491,161,0.661,162,0.925,163,0.491,164,1.424,165,0.661,166,0.491,167,0.615,168,0.661,169,0.491,170,0.491,171,0.661,172,0.491,173,0.661,174,0.454,175,0.454,176,0.661,177,0.454,178,0.615,179,0.661,180,0.015,181,0.015,199,2.149,229,1.465,246,1.694,257,1.694,280,2.72,286,3.408,287,2.892,295,3.295,301,3.241,311,1.781,352,1.615,359,2.037,360,2.037,361,1.164,362,1.574,411,1.359,418,1.477,421,2.56,423,1.988,427,1.082,479,1.359,480,1.781,483,2.72,484,2.892,487,1.781,488,1.988,494,2.149,504,2.35,506,1.978,510,2.769,515,2.35,523,1.781,527,2.35,536,1.988,556,2.265,557,2.265,559,2.265,560,1.615,561,2.35,562,2.265,564,3.295,569,2.35,646,1.988,650,2.265,656,1.781,688,3.053,691,2.265,692,3.908,693,4.606,694,2.686,695,2.686,696,3.908,697,2.686,698,3.908,699,2.686,700,2.686,701,2.686,702,3.908,703,2.686,704,2.686,705,2.686,706,2.686,707,2.686,708,2.686,709,2.686,710,2.686,711,2.265,712,2.686,713,5.058,714,3.908,715,3.908,716,3.908,717,3.908,718,3.908,719,2.686,720,3.908,721,2.686,722,2.686,723,2.686,724,2.686,725,1.781,726,2.686,727,2.686]],["title/components/PlacesContainerComponent.html",[0,0.04,163,0.611]],["body/components/PlacesContainerComponent.html",[0,0.064,1,0.64,2,0.929,3,0.264,4,0.23,5,0.802,6,0.861,7,0.802,8,0.861,9,0.23,11,0.691,12,1.453,13,1.555,14,0.745,15,0.691,17,1.157,19,1.157,21,0.457,23,0.802,34,0.745,37,0.027,38,0.693,39,0.415,41,0.802,46,0.861,47,0.925,53,0.415,54,0.376,59,0.264,60,0.415,75,1.429,76,1.926,77,1.926,78,1.926,79,1.532,80,1.397,82,1.14,88,1.333,89,1.532,91,0.745,95,1.429,96,1.064,104,1.518,105,1.313,112,1.926,116,1.14,119,1.313,120,1.313,122,1.223,133,1.638,134,0.64,135,1.077,136,1.157,137,0.545,138,1.397,139,0.861,140,0.861,141,0.64,142,0.745,143,1.307,144,0.64,145,0.861,146,0.64,147,1.157,148,0.64,149,0.861,150,0.64,151,0.861,152,0.64,153,0.861,154,0.64,155,0.64,156,0.86,157,0.861,158,0.591,159,1.157,160,0.64,161,0.861,162,0.64,163,1.038,164,1.559,165,0.861,166,0.64,167,0.802,168,0.861,169,0.64,170,0.64,171,0.861,172,0.64,173,1.307,174,0.591,175,0.591,176,0.861,177,0.591,178,0.802,179,0.861,180,0.019,181,0.019,229,1.764,246,2.04,257,2.04,280,2.381,352,2.106,353,2.321,392,3.482,393,3.482,404,2.772,411,1.772,427,1.411,483,1.772,494,1.926,506,2.381,554,2.953,647,2.591,728,2.591,729,4.481,730,3.968,731,3.502,732,2.953,733,3.502,734,3.502]],["title/interceptors/RemoteA16Interceptor.html",[196,2.01,735,2.818]],["body/interceptors/RemoteA16Interceptor.html",[3,0.338,4,0.294,9,0.294,21,0.584,25,1.269,27,1.262,34,0.953,36,1.269,37,0.028,38,0.584,39,0.531,44,1.026,53,0.708,54,0.48,59,0.338,60,0.531,64,1.361,180,0.022,181,0.022,196,3.591,212,3.778,214,4.08,215,4.08,237,1.804,284,2.267,316,1.942,331,3.591,432,2.79,443,3.959,670,3.778,736,4.48,737,4.649,738,3.778,739,5.514,740,5.514,741,6.233,742,6.233,743,4.48,744,5.514,745,5.514,746,4.48,747,5.514,748,4.48,749,5.514,750,4.48,751,4.48,752,4.48,753,4.48,754,4.48]],["title/directives/SafeLinkDirective.html",[137,0.52,177,0.564]],["body/directives/SafeLinkDirective.html",[3,0.312,4,0.271,9,0.271,11,0.816,12,1.115,13,0.946,21,0.539,25,1.485,27,1.2,31,1.665,34,1.225,36,1.485,37,0.028,38,0.684,39,0.683,41,1.2,44,0.946,45,1.091,46,1.017,47,1.091,53,0.49,54,0.443,59,0.312,60,0.49,61,1.792,64,1.255,137,0.895,174,0.698,177,0.885,178,1.2,180,0.021,181,0.021,237,2.319,246,2.273,257,1.792,261,2.739,542,5.107,755,5.107,756,4.481,757,3.485,758,5.243,759,4.421,760,4.133,761,5.243,762,5.243,763,5.243,764,5.758,765,4.133,766,3.485,767,4.133,768,3.485,769,4.133,770,4.133,771,4.133,772,4.133,773,5.243,774,4.133,775,3.485,776,3.058,777,6.056,778,5.243,779,5.243,780,5.243,781,5.243,782,4.133]],["title/modules/SharedModule.html",[182,1.253,195,1.838]],["body/modules/SharedModule.html",[3,0.314,4,0.272,9,0.272,37,0.028,53,0.77,54,0.446,59,0.314,60,0.493,134,0.76,175,1.141,177,1.141,180,0.021,181,0.021,182,1.558,184,2.103,185,1.943,186,3.826,187,2.754,188,2.498,189,3.826,195,3.734,197,3.487,198,2.754,199,2.285,201,3.075,202,3.893,204,4.868,205,2.498,756,3.075,783,3.504,784,3.504,785,3.504,786,4.064,787,4.156,788,5.773,789,3.504,790,5.773,791,3.075,792,4.156,793,4.156,794,4.156,795,4.156]],["title/components/SimpleFormComponent.html",[0,0.04,166,0.611]],["body/components/SimpleFormComponent.html",[0,0.05,1,0.414,2,0.679,3,0.171,4,0.148,5,0.518,6,0.557,7,0.518,8,0.557,9,0.148,11,0.447,12,1.382,13,1.473,14,0.482,15,0.447,17,0.847,19,0.847,21,0.295,22,0.847,23,0.518,25,1.179,27,0.788,34,1.121,36,0.641,37,0.028,38,0.606,39,0.494,44,0.953,45,1.321,46,0.557,47,0.909,53,0.494,54,0.243,59,0.171,60,0.269,64,0.688,75,1.6,79,1.881,80,1.574,81,1.747,82,1.95,86,1.146,88,1.317,89,1.356,91,0.482,95,1.6,96,1.264,99,1.743,100,2.121,103,1.059,104,0.982,108,0.912,109,1.386,110,2.283,114,1.742,115,2.069,116,1.356,118,1.362,119,0.849,122,1.454,133,1.609,134,0.414,135,0.788,136,0.847,137,0.352,138,1.144,139,0.557,140,0.557,141,0.414,142,0.482,143,1.024,144,0.414,145,0.557,146,0.414,147,0.847,148,0.414,149,0.557,150,0.414,151,0.557,152,0.414,153,0.557,154,0.414,155,0.414,156,0.629,157,0.557,158,0.382,159,0.847,160,0.414,161,0.557,162,0.414,163,0.414,164,0.557,165,0.557,166,0.85,167,1.291,168,0.557,169,0.414,170,0.414,171,0.557,172,0.414,173,0.557,174,0.382,175,0.382,176,0.557,177,0.382,178,0.518,179,0.557,180,0.014,181,0.014,237,1.386,244,1.677,284,1.742,285,2.759,289,2.759,292,3.167,294,2.796,304,1.609,316,0.982,317,1.501,322,3.441,331,1.362,338,1.676,345,3.441,346,3.441,358,1.362,359,1.677,360,1.677,361,2.016,362,1.677,378,4.593,411,1.742,412,1.91,418,1.245,419,1.742,420,1.146,421,1.742,425,1.146,427,0.912,476,1.91,479,2.107,480,1.501,483,1.146,491,1.501,492,3.441,526,1.245,527,1.362,529,1.245,534,2.281,538,3.511,540,3.922,543,1.91,548,1.91,560,1.362,561,1.362,568,1.91,569,1.362,595,1.362,608,2.902,638,3.739,640,1.91,641,1.91,642,2.547,645,1.91,647,1.676,655,1.676,656,1.501,676,1.676,725,1.501,791,1.676,796,4.616,797,1.91,798,4.163,799,3.442,800,2.265,801,2.265,802,3.442,803,5.267,804,2.265,805,2.265,806,3.442,807,2.265,808,2.265,809,2.265,810,2.265,811,2.265,812,2.265,813,2.265,814,1.91,815,4.163,816,2.265,817,5.641,818,1.91,819,2.265,820,2.265,821,5.267,822,5.475,823,2.265,824,2.265,825,2.265,826,2.265,827,2.265,828,2.265,829,2.265,830,2.265,831,4.651,832,3.442,833,3.442,834,2.265,835,2.265,836,2.265,837,2.265,838,3.442,839,3.442,840,3.442,841,3.442,842,2.265,843,1.91,844,2.265,845,1.91,846,2.265,847,2.265,848,2.265,849,2.265,850,2.265,851,2.265,852,2.265,853,1.91,854,2.265,855,2.265,856,2.265,857,2.265,858,2.265,859,2.265,860,2.265,861,2.265,862,1.91,863,1.91,864,2.265,865,2.265]],["title/interfaces/Task.html",[496,1.449,602,1.563]],["body/interfaces/Task.html",[3,0.338,4,0.294,9,0.294,21,0.584,22,1.356,37,0.027,39,0.783,41,1.597,43,2.915,59,0.451,180,0.022,181,0.022,404,2.993,496,2.39,497,2.694,602,2.578,609,3.428,627,3.848,629,3.315,631,3.52,632,2.095,658,2.694,659,2.969,660,2.464,661,2.464,662,2.464,663,4.131]],["title/components/TaskComponent.html",[0,0.04,169,0.611]],["body/components/TaskComponent.html",[0,0.057,1,0.215,2,0.622,3,0.089,4,0.077,5,0.608,6,0.653,7,0.608,8,0.653,9,0.077,11,0.232,12,1.227,13,1.294,14,0.755,15,1.116,17,0.497,19,0.497,21,0.153,22,0.497,23,0.269,25,0.752,27,0.462,29,1.494,31,0.473,34,1.173,36,0.572,37,0.028,38,0.463,39,0.563,41,0.949,44,0.887,45,1.156,46,1.02,47,1.208,53,0.374,54,0.126,56,3.434,59,0.089,60,0.492,61,0.509,64,0.957,68,0.779,71,2.902,75,1.329,79,1.156,80,1.266,81,1.239,82,1.638,86,0.595,88,0.892,89,0.658,91,0.25,92,1.214,95,1.078,96,0.806,99,1.181,100,1.429,103,1.242,104,1.151,105,0.995,106,1.214,108,0.813,109,0.813,110,1.151,114,1.344,115,1.596,116,0.865,118,1.596,119,0.757,120,1.181,122,0.41,133,0.55,134,0.215,135,0.462,136,0.775,137,0.552,138,0.775,139,0.289,140,0.289,141,0.215,142,0.882,143,0.653,144,0.215,145,0.289,146,0.215,147,0.497,148,0.215,149,0.289,150,0.215,151,0.289,152,0.215,153,0.289,154,0.215,155,0.215,156,0.895,157,0.289,158,0.198,159,0.497,160,0.215,161,0.289,162,0.215,163,0.215,164,0.653,165,0.289,166,0.215,167,0.269,168,0.289,169,0.576,170,0.215,171,0.289,172,0.215,173,0.775,174,0.7,175,0.198,176,0.289,177,0.198,178,0.269,179,0.289,180,0.008,181,0.008,182,1.452,184,1.022,185,0.944,188,2.33,206,1.494,218,1.494,219,1.494,223,1.895,227,1.703,229,0.995,233,1.339,235,1.703,243,1.703,244,1.561,245,1.895,246,0.875,248,1.961,257,0.509,259,0.779,261,1.76,265,1.494,266,2.657,268,4.003,271,1.494,284,1.022,285,1.76,292,2.134,294,1.895,304,1.242,316,0.509,319,1.494,331,1.214,335,1.339,337,2.867,344,1.703,347,1.494,355,0.991,358,0.707,359,0.813,360,0.813,361,0.875,362,0.813,385,2.749,415,0.779,417,0.707,418,0.646,419,0.595,420,0.595,421,1.022,425,0.595,427,0.473,432,1.022,443,2.568,446,4.242,461,1.703,469,1.703,473,1.214,479,0.595,480,1.76,487,2.089,504,1.214,506,0.595,510,1.596,515,1.214,517,0.779,526,1.111,529,0.646,534,1.339,536,0.87,545,1.703,546,1.703,560,0.707,561,0.707,574,0.991,583,1.339,592,0.779,593,0.779,594,1.596,595,1.214,596,1.703,602,2.14,603,2.239,604,1.703,610,0.87,611,3.513,613,1.703,631,2.131,632,2.047,638,0.779,646,1.494,655,0.87,656,0.779,660,2.281,661,1.111,662,1.46,669,1.494,676,1.494,678,1.703,688,2.089,711,1.703,725,0.779,759,1.703,766,1.703,768,1.703,775,2.657,862,2.239,863,0.991,866,0.991,867,2.655,868,2.655,869,2.655,870,2.655,871,3.549,872,2.655,873,2.655,874,4.003,875,2.02,876,3.151,877,3.151,878,3.151,879,2.655,880,1.175,881,1.175,882,1.175,883,1.175,884,1.175,885,2.02,886,1.175,887,0.991,888,1.175,889,1.175,890,1.175,891,2.02,892,2.02,893,2.02,894,2.02,895,1.175,896,1.175,897,1.175,898,1.175,899,1.175,900,1.175,901,2.02,902,1.175,903,1.175,904,1.175,905,1.175,906,2.02,907,1.175,908,1.703,909,2.493,910,1.175,911,4.576,912,1.175,913,1.175,914,1.175,915,2.657,916,1.175,917,1.175,918,1.175,919,1.175,920,2.02,921,1.175,922,1.175,923,1.703,924,1.175,925,3.268,926,1.175,927,2.239,928,2.993,929,2.657,930,2.239,931,1.175,932,2.02,933,1.175,934,2.02,935,1.703,936,3.875,937,3.151,938,2.02,939,1.703,940,3.691,941,4.378,942,2.02,943,4.378,944,2.02,945,2.02,946,3.151,947,2.02,948,2.02,949,3.151,950,1.703,951,2.02,952,1.494,953,1.703,954,3.151,955,1.703,956,1.703,957,2.867,958,1.703,959,3.151,960,2.02,961,1.703,962,2.02,963,2.867,964,3.513,965,3.151,966,2.02,967,2.02,968,2.02,969,2.02,970,2.02,971,2.02,972,1.175,973,1.175,974,1.703,975,2.02,976,2.02,977,2.02,978,1.703,979,2.02,980,2.02,981,2.657,982,2.02,983,3.151,984,2.02,985,2.02,986,2.02,987,2.02,988,2.657,989,3.691,990,2.02,991,2.02,992,2.02,993,3.875,994,2.02,995,2.02,996,2.02,997,3.151,998,3.875,999,3.151,1000,3.151,1001,2.02,1002,2.02,1003,2.02,1004,2.02,1005,2.02,1006,3.151,1007,3.151,1008,2.02,1009,1.703,1010,2.655,1011,3.151,1012,3.151,1013,2.02,1014,1.175,1015,1.175,1016,1.175,1017,3.151,1018,2.02,1019,2.02,1020,2.02,1021,2.02,1022,2.02,1023,4.378,1024,2.02,1025,3.875,1026,2.02,1027,2.02,1028,1.703,1029,2.02,1030,1.703,1031,2.02,1032,3.151,1033,2.02,1034,2.02,1035,2.02,1036,2.02,1037,2.02,1038,2.02,1039,2.02,1040,3.268,1041,1.703,1042,2.02,1043,2.02,1044,2.02,1045,2.02,1046,2.02,1047,2.02,1048,2.02,1049,2.02,1050,2.02,1051,1.703,1052,2.02,1053,2.02,1054,2.02,1055,3.875,1056,2.02,1057,3.268,1058,3.151,1059,2.02,1060,2.02,1061,2.02,1062,1.703,1063,2.02,1064,3.151,1065,2.02,1066,2.02,1067,2.02,1068,2.02,1069,3.875,1070,2.02,1071,2.02,1072,2.02,1073,2.02,1074,2.02,1075,2.02,1076,2.02,1077,2.02,1078,2.02,1079,3.151,1080,2.02,1081,2.02,1082,4.378,1083,3.875,1084,2.02,1085,3.875,1086,2.02,1087,2.02,1088,2.02,1089,2.02,1090,2.02,1091,2.02,1092,3.151,1093,2.02,1094,2.02,1095,2.02,1096,2.02,1097,1.703,1098,2.02,1099,1.703,1100,2.02,1101,2.02,1102,2.02,1103,2.02,1104,2.02,1105,2.02,1106,2.02,1107,1.175,1108,1.175,1109,1.175,1110,1.175,1111,2.655,1112,0.991,1113,1.175,1114,1.175,1115,1.175,1116,1.175,1117,1.175,1118,1.175,1119,1.175,1120,2.02,1121,1.175,1122,1.175]],["title/injectables/TaskService.html",[248,1.691,432,1.691]],["body/injectables/TaskService.html",[3,0.249,4,0.217,9,0.217,14,0.703,21,0.431,22,1.113,25,1.645,27,1.036,31,2.078,34,1.35,36,1.645,37,0.028,38,0.758,39,0.712,41,1.514,43,2.412,44,1.373,45,1.534,46,1.113,47,1.195,53,0.612,54,0.354,55,2.446,56,1.987,59,0.249,60,0.392,64,1.004,91,1.236,137,0.514,156,0.604,180,0.018,181,0.018,237,1.331,244,2.416,248,2.289,260,2.787,274,2.787,404,1.546,432,1.673,433,2.446,508,4.35,602,2.805,609,3.378,627,1.987,631,2.488,658,3.335,660,3.051,663,2.191,887,3.815,928,4.678,935,2.787,939,2.787,1123,2.787,1124,5.159,1125,4.525,1126,4.525,1127,4.525,1128,5.547,1129,4.525,1130,4.525,1131,4.525,1132,4.525,1133,3.306,1134,4.525,1135,3.306,1136,4.525,1137,3.306,1138,3.306,1139,4.525,1140,3.306,1141,4.525,1142,4.525,1143,3.306,1144,5.159,1145,3.817,1146,3.306,1147,3.306,1148,3.306,1149,3.306,1150,5.159,1151,3.306,1152,4.525,1153,3.306,1154,3.306,1155,3.306,1156,3.306,1157,3.306,1158,5.159,1159,4.525,1160,3.306,1161,3.306,1162,3.306,1163,4.525,1164,3.306]],["title/components/TasksComponent.html",[0,0.04,170,0.611]],["body/components/TasksComponent.html",[0,0.045,1,0.351,2,0.598,3,0.145,4,0.126,5,0.44,6,0.473,7,0.44,8,0.473,9,0.126,11,0.379,12,1.349,13,1.435,14,0.409,15,0.379,17,0.745,19,0.745,21,0.251,22,0.745,23,0.44,25,1.313,27,0.694,31,0.774,34,1.303,36,1.063,37,0.028,38,0.642,39,0.652,41,1.314,44,1.223,45,1.542,46,1.048,47,1.125,48,1.274,53,0.584,54,0.206,55,1.422,56,1.155,59,0.283,60,0.228,61,0.833,64,0.92,66,1.422,68,1.274,75,1.496,79,1.51,80,1.14,81,1.488,82,1.604,85,1.057,86,1.899,88,1.313,89,1.51,91,1.222,94,1.62,95,1.408,96,1.14,99,1.407,100,1.716,101,1.274,102,1.422,103,0.898,104,0.833,105,0.72,106,1.155,107,1.422,108,1.511,109,1.221,110,0.833,111,1.822,112,2.343,116,1.387,119,0.72,120,0.72,121,1.274,122,1.488,123,1.274,134,0.351,135,0.694,136,0.745,137,0.299,138,1.048,139,0.473,140,0.473,141,0.351,142,0.409,143,0.923,144,0.351,145,0.473,146,0.351,147,0.745,148,0.351,149,0.473,150,0.351,151,0.473,152,0.351,153,0.473,154,0.351,155,0.351,156,0.554,157,0.473,158,0.324,159,0.745,160,0.351,161,0.473,162,0.351,163,0.351,164,0.473,165,0.473,166,0.351,167,0.44,168,0.473,169,0.351,170,0.779,171,0.473,172,0.351,173,0.473,174,0.324,175,0.324,176,0.473,177,0.324,178,0.44,179,0.473,180,0.012,181,0.012,205,1.155,229,1.738,237,1.716,244,1.716,245,2.561,246,1.314,248,2.493,257,0.833,259,1.274,261,1.274,292,2.561,294,2.561,304,1.755,316,0.833,411,1.534,419,0.972,420,0.972,421,0.972,425,0.972,427,0.774,430,1.155,473,1.155,479,0.972,483,0.972,491,1.274,492,1.422,493,1.62,506,1.534,517,2.009,523,1.274,526,1.667,529,1.057,592,1.274,593,1.274,594,1.155,595,1.155,602,2.168,609,2.343,610,1.422,611,3.152,612,3.645,624,2.555,632,1.992,636,2.555,661,1.057,662,1.667,725,2.487,732,1.62,908,1.62,923,1.62,925,3.164,927,2.555,929,3.164,930,3.164,1112,1.62,1165,1.422,1166,3.753,1167,3.031,1168,3.753,1169,3.753,1170,3.753,1171,3.753,1172,4.636,1173,3.031,1174,4.26,1175,3.031,1176,4.26,1177,4.26,1178,4.26,1179,4.636,1180,3.031,1181,1.921,1182,1.921,1183,1.921,1184,1.921,1185,3.031,1186,1.921,1187,3.031,1188,1.921,1189,3.031,1190,1.921,1191,4.26,1192,1.921,1193,1.921,1194,1.921,1195,1.921,1196,1.921,1197,1.921,1198,5.499,1199,4.926,1200,1.921,1201,1.921,1202,3.592,1203,3.164,1204,3.164,1205,1.921,1206,1.921,1207,1.921,1208,1.921,1209,1.921,1210,1.921,1211,1.921,1212,1.921,1213,1.921,1214,3.753,1215,1.921,1216,4.26,1217,3.031,1218,1.921,1219,1.921,1220,1.921,1221,4.26,1222,3.753,1223,3.753,1224,1.921,1225,1.921,1226,1.921,1227,1.921,1228,1.921,1229,1.921,1230,3.031,1231,1.422,1232,3.164,1233,1.62,1234,1.62,1235,1.62,1236,1.422,1237,1.62,1238,3.031,1239,3.031,1240,3.031,1241,1.921,1242,1.921,1243,1.921,1244,1.921,1245,1.921,1246,3.031,1247,1.921,1248,1.921,1249,1.921,1250,1.921,1251,1.921,1252,1.921,1253,1.921,1254,1.921,1255,1.921]],["title/components/TasksContainerComponent.html",[0,0.04,172,0.611]],["body/components/TasksContainerComponent.html",[0,0.068,1,0.728,2,1.011,3,0.3,4,0.261,5,0.912,6,0.98,7,0.912,8,0.98,9,0.261,11,0.786,12,1.469,13,1.574,14,0.847,15,0.786,17,1.259,19,1.259,23,0.912,37,0.026,38,0.738,53,0.472,54,0.427,59,0.3,60,0.472,91,1.386,134,0.728,135,1.172,136,1.259,137,0.619,138,1.469,139,0.98,140,0.98,141,0.728,142,0.847,143,1.392,144,0.728,145,0.98,146,0.728,147,1.259,148,0.728,149,0.98,150,0.728,151,0.98,152,0.728,153,0.98,154,0.728,155,0.728,156,0.936,157,0.98,158,0.672,159,1.259,160,0.728,161,0.98,162,0.728,163,0.728,164,0.98,165,0.98,166,0.728,167,0.912,168,0.98,169,0.728,170,0.728,171,0.98,172,1.092,173,1.392,174,0.672,175,0.672,176,0.98,177,0.672,178,0.912,179,0.98,180,0.02,181,0.02,383,2.947,728,2.947,729,4.772,730,4.317,1256,3.358]],["title/pipes/TemperaturePipe.html",[786,2.01,909,2.01]],["body/pipes/TemperaturePipe.html",[3,0.275,4,0.239,9,0.239,11,0.72,25,1.033,27,0.835,34,0.776,36,1.033,37,0.028,38,0.707,39,0.433,41,1.375,44,0.835,46,0.897,47,1.689,53,0.433,54,0.391,59,0.275,60,0.433,64,1.647,180,0.019,181,0.019,229,1.812,284,1.845,304,1.705,569,2.193,688,4.092,786,2.906,818,4.869,845,4.076,874,4.076,909,3.26,915,5.206,1099,3.075,1257,2.699,1258,3.075,1259,5.423,1260,4.834,1261,6.174,1262,6.537,1263,6.396,1264,6.299,1265,3.647,1266,3.647,1267,4.834,1268,3.647,1269,3.647,1270,3.647,1271,3.647,1272,3.647,1273,3.647,1274,3.647,1275,3.647,1276,3.647,1277,5.774,1278,4.834,1279,4.834,1280,5.774,1281,5.423,1282,5.423,1283,3.647]],["title/coverage.html",[1284,3.844]],["body/coverage.html",[0,0.081,1,0.618,9,0.222,10,2.853,33,1.712,37,0.028,39,0.545,48,2.243,69,2.034,80,1.707,137,0.715,141,0.618,144,0.618,146,0.618,148,0.618,150,0.618,152,0.618,154,0.618,155,0.618,156,0.618,158,0.571,160,0.618,162,0.618,163,0.618,166,0.618,169,0.618,170,0.618,172,0.618,175,0.571,177,0.571,180,0.018,181,0.018,196,2.034,214,2.504,215,2.504,224,2.504,242,2.853,248,1.712,271,4.47,280,3.057,281,2.504,282,2.504,283,3.402,301,1.712,354,2.853,376,2.504,378,3.402,380,2.504,383,2.504,386,3.402,389,2.504,390,2.504,392,2.504,393,2.504,394,2.504,397,3.461,398,2.853,432,2.326,434,2.853,462,2.853,496,2.428,498,2.853,500,2.853,537,2.853,573,2.853,600,2.853,601,2.853,602,1.582,658,2.034,659,3.461,660,1.861,664,2.853,665,2.853,682,2.853,683,2.853,691,2.853,728,3.402,735,2.853,737,2.853,738,2.853,755,2.853,756,2.504,757,2.853,776,3.402,786,2.034,796,2.853,797,2.853,866,2.853,909,2.034,1123,2.853,1145,2.504,1165,3.863,1231,2.504,1236,2.504,1256,2.853,1258,2.853,1284,2.853,1285,3.384,1286,3.384,1287,3.384,1288,4.597,1289,2.853,1290,2.853,1291,6.557,1292,3.876,1293,3.876,1294,4.597,1295,4.597,1296,4.597,1297,6.042,1298,4.597,1299,3.384,1300,4.597,1301,4.597,1302,3.384,1303,2.853,1304,3.876,1305,2.853,1306,2.853,1307,2.853,1308,3.384,1309,3.384,1310,3.384]],["title/dependencies.html",[185,1.879,1311,2.355]],["body/dependencies.html",[37,0.027,54,0.539,180,0.023,181,0.023,185,2.352,205,3.024,316,2.18,789,4.242,791,3.722,1312,5.03,1313,6.806,1314,5.03,1315,5.912,1316,4.374,1317,5.03,1318,5.03,1319,5.03,1320,5.03]],["title/index.html",[21,0.364,1321,2.793,1322,2.793]],["body/index.html",[0,0.069,2,0.809,4,0.269,15,1.192,37,0.021,46,1.282,71,2.715,106,2.463,142,0.871,156,0.749,174,0.692,180,0.021,181,0.021,218,3.031,219,3.031,320,3.031,335,2.715,417,3.831,470,3.454,586,3.454,632,1.915,669,3.031,814,4.396,843,3.454,853,5.373,940,3.454,952,3.031,957,3.031,963,3.858,964,4.715,974,4.835,978,3.454,1057,4.835,1062,3.454,1257,3.031,1316,3.031,1323,4.096,1324,5.735,1325,4.096,1326,5.213,1327,6.233,1328,3.454,1329,4.096,1330,5.213,1331,4.096,1332,6.233,1333,4.096,1334,5.213,1335,4.096,1336,4.096,1337,3.454,1338,4.096,1339,4.096,1340,4.096,1341,4.396,1342,5.213,1343,4.096,1344,4.096,1345,3.454,1346,5.735,1347,4.096,1348,4.096,1349,4.096,1350,4.096,1351,4.096,1352,4.096,1353,4.096,1354,4.096,1355,4.096,1356,4.096,1357,4.096,1358,4.096,1359,4.096,1360,5.213,1361,5.735,1362,4.096,1363,4.096,1364,4.096,1365,4.096,1366,5.735,1367,4.096,1368,4.096,1369,4.096,1370,4.096,1371,4.096,1372,4.096,1373,4.096,1374,4.096,1375,4.096,1376,4.096,1377,3.031,1378,4.096]],["title/modules.html",[184,2.307]],["body/modules.html",[37,0.024,180,0.024,181,0.024,183,3.471,184,2.65,195,2.88,208,3.148,1316,4.723,1379,6.383,1380,6.383,1381,6.383]],["title/overview.html",[1377,3.373]],["body/overview.html",[1,1.118,2,0.642,37,0.028,92,2.691,118,1.956,134,0.595,141,1.118,144,1.118,146,1.118,148,1.118,150,1.118,152,1.118,154,0.935,155,1.118,158,1.033,160,1.118,162,1.118,163,1.118,166,0.935,169,1.118,170,1.118,172,1.118,174,0.549,175,1.033,177,1.033,180,0.018,181,0.018,182,1.22,183,4.191,184,1.647,185,1.522,186,2.157,187,2.157,188,1.956,189,2.157,190,2.744,191,2.744,192,2.744,193,2.744,194,2.744,195,3.608,196,3.076,197,2.967,198,2.157,199,1.789,208,4.208,365,2.744,366,2.744,368,2.744,433,2.408,497,1.956,783,2.744,784,2.744,785,2.744,786,3.677,909,1.956,1377,2.408,1382,3.254,1383,3.254,1384,3.254]],["title/properties.html",[22,0.989,1311,2.355]],["body/properties.html",[22,1.324,37,0.026,180,0.024,181,0.024,1328,4.54,1385,5.384]],["title/miscellaneous/typealiases.html",[1386,1.851,1387,4.019]],["body/miscellaneous/typealiases.html",[21,0.688,37,0.026,39,0.625,180,0.024,181,0.024,267,4.446,632,2.466,659,3.495,660,3.341,661,2.9,662,2.9,1386,3.495,1388,5.273]],["title/miscellaneous/variables.html",[1386,1.851,1389,3.389]],["body/miscellaneous/variables.html",[0,0.047,2,0.527,7,0.611,15,1.141,21,0.348,37,0.028,38,0.772,39,0.664,43,3.033,46,1.377,47,1.525,48,2.579,56,3.033,64,1.628,66,1.976,71,3.043,73,1.606,80,1.129,91,0.568,93,4.993,135,0.611,158,0.451,174,0.657,180,0.015,181,0.015,182,1.001,185,1.249,206,2.879,224,2.879,226,2.252,229,1.001,236,1.77,237,1.567,239,1.77,265,1.976,291,1.976,311,1.77,312,1.976,316,1.99,324,1.976,325,1.976,326,1.976,385,3.043,404,2.769,443,2.579,499,4.993,506,1.351,569,1.606,583,1.77,594,1.606,609,3.321,612,2.879,627,3.56,631,3.256,632,2.617,638,1.77,661,1.469,662,1.469,663,3.925,776,3.732,950,3.281,952,1.976,953,2.252,955,2.252,956,2.252,957,1.976,958,2.252,961,2.252,963,1.976,964,1.976,981,3.281,988,3.281,989,3.281,1009,2.252,1028,3.871,1030,2.252,1040,3.871,1041,3.281,1051,3.281,1097,2.252,1145,2.879,1165,1.976,1202,3.281,1203,3.281,1204,3.281,1231,2.879,1232,3.871,1233,2.252,1234,2.252,1235,2.252,1236,2.879,1237,2.252,1257,2.879,1289,2.252,1290,3.281,1292,2.252,1293,3.871,1303,2.252,1304,3.871,1305,2.252,1306,3.281,1307,3.281,1337,2.252,1341,2.252,1345,2.252,1386,1.77,1389,2.252,1390,2.671,1391,3.891,1392,2.671,1393,3.891,1394,2.671,1395,2.671,1396,2.671,1397,2.671,1398,2.671,1399,2.671,1400,2.671,1401,3.891,1402,5.778,1403,3.891,1404,3.891,1405,3.891,1406,3.891,1407,2.671,1408,3.891,1409,3.891,1410,3.891,1411,3.891,1412,2.671,1413,2.671,1414,2.671,1415,2.671,1416,2.671,1417,5.921,1418,5.921,1419,2.671,1420,2.671,1421,2.671,1422,2.671,1423,3.891,1424,2.671,1425,3.891,1426,2.671,1427,2.671,1428,2.671,1429,4.591,1430,2.671,1431,2.671,1432,2.671,1433,2.671,1434,2.671,1435,2.671,1436,2.671,1437,4.591,1438,2.671,1439,2.671,1440,2.671,1441,2.671,1442,2.671,1443,2.671,1444,2.671,1445,2.671,1446,2.671,1447,2.671,1448,2.671,1449,3.891,1450,2.671,1451,2.671]]],"invertedIndex":[["",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"modules/ComponentsModule.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Lesson.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"components/NotFoundComponent.html":{},"interfaces/Place.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"interceptors/RemoteA16Interceptor.html":{},"directives/SafeLinkDirective.html":{},"modules/SharedModule.html":{},"components/SimpleFormComponent.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{},"pipes/TemperaturePipe.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0",{"_index":1385,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":363,"title":{},"body":{"components/CardComponent.html":{}}}],["0.13.0",{"_index":1320,"title":{},"body":{"dependencies.html":{}}}],["0.15",{"_index":710,"title":{},"body":{"components/PlacesComponent.html":{}}}],["0.15rem",{"_index":646,"title":{},"body":{"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{},"components/TaskComponent.html":{}}}],["0.25rem",{"_index":595,"title":{},"body":{"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["0.26",{"_index":555,"title":{},"body":{"components/ModalComponent.html":{}}}],["0.2rem",{"_index":846,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["0.2s",{"_index":712,"title":{},"body":{"components/PlacesComponent.html":{}}}],["0.3",{"_index":534,"title":{},"body":{"components/LessonComponent.html":{},"components/NewTaskComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{}}}],["0.35rem",{"_index":523,"title":{},"body":{"components/LessonComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{},"components/TasksComponent.html":{}}}],["0.375rem",{"_index":680,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["0.3s",{"_index":560,"title":{},"body":{"components/ModalComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{}}}],["0.4",{"_index":423,"title":{},"body":{"components/ErrorModalComponent.html":{},"components/NewRequestComponent.html":{},"components/PlacesComponent.html":{}}}],["0.5",{"_index":838,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["0.5rem",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorModalComponent.html":{},"components/LessonComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["0.6",{"_index":484,"title":{},"body":{"components/HeaderComponent.html":{},"components/ModalComponent.html":{},"components/PlacesComponent.html":{}}}],["0.75rem",{"_index":596,"title":{},"body":{"components/NewRequestComponent.html":{},"components/TaskComponent.html":{}}}],["0.85rem",{"_index":643,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["0.8rem",{"_index":491,"title":{},"body":{"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/SimpleFormComponent.html":{},"components/TasksComponent.html":{}}}],["0.9rem",{"_index":725,"title":{},"body":{"components/PlacesComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["0/1",{"_index":1291,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1308,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1294,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1300,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1296,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1295,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1298,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1297,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1288,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1301,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1299,"title":{},"body":{"coverage.html":{}}}],["000937",{"_index":590,"title":{},"body":{"components/NewRequestComponent.html":{}}}],["021235",{"_index":1248,"title":{},"body":{"components/TasksComponent.html":{}}}],["04207f",{"_index":1118,"title":{},"body":{"components/TaskComponent.html":{}}}],["070b22",{"_index":531,"title":{},"body":{"components/LessonComponent.html":{}}}],["070b3d",{"_index":835,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["071474",{"_index":597,"title":{},"body":{"components/NewRequestComponent.html":{},"components/NotFoundComponent.html":{}}}],["0d373e",{"_index":734,"title":{},"body":{"components/PlacesContainerComponent.html":{}}}],["1",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/ModalComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"overview.html":{}}}],["1.15rem",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["1.25rem",{"_index":430,"title":{},"body":{"components/ErrorModalComponent.html":{},"components/HeaderComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/TasksComponent.html":{}}}],["1.2rem",{"_index":675,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["1.5rem",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{}}}],["100",{"_index":527,"title":{},"body":{"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{},"components/SimpleFormComponent.html":{}}}],["100vh",{"_index":566,"title":{},"body":{"components/ModalComponent.html":{}}}],["10rem",{"_index":528,"title":{},"body":{"components/LessonComponent.html":{}}}],["11193d",{"_index":1107,"title":{},"body":{"components/TaskComponent.html":{}}}],["12",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["12px",{"_index":481,"title":{},"body":{"components/HeaderComponent.html":{}}}],["142020",{"_index":852,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["15",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["15px",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["15rem",{"_index":849,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["16",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{}}}],["16'},{'name",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{}}}],["16.2.0",{"_index":1313,"title":{},"body":{"dependencies.html":{}}}],["16px",{"_index":837,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["17",{"_index":1383,"title":{},"body":{"overview.html":{}}}],["19.2.8",{"_index":1329,"title":{},"body":{"index.html":{}}}],["1e1d20",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/NotFoundComponent.html":{}}}],["1f1c2c",{"_index":709,"title":{},"body":{"components/PlacesComponent.html":{}}}],["1fr",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/PlacesComponent.html":{}}}],["1px",{"_index":361,"title":{},"body":{"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{}}}],["1rem",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["2",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/ModalComponent.html":{},"components/NewTaskComponent.html":{},"components/TaskComponent.html":{},"overview.html":{}}}],["2000",{"_index":894,"title":{},"body":{"components/TaskComponent.html":{}}}],["2025",{"_index":1417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["217",{"_index":718,"title":{},"body":{"components/PlacesComponent.html":{}}}],["23263b",{"_index":836,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["233",{"_index":840,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["250",{"_index":841,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["262521",{"_index":1244,"title":{},"body":{"components/TasksComponent.html":{}}}],["2c3150",{"_index":1116,"title":{},"body":{"components/TaskComponent.html":{}}}],["2c3354",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/TasksComponent.html":{}}}],["2px",{"_index":554,"title":{},"body":{"components/ModalComponent.html":{},"components/PlacesContainerComponent.html":{}}}],["2rem",{"_index":494,"title":{},"body":{"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{}}}],["3",{"_index":1382,"title":{},"body":{"overview.html":{}}}],["3.5rem",{"_index":486,"title":{},"body":{"components/HeaderComponent.html":{}}}],["30rem",{"_index":551,"title":{},"body":{"components/ModalComponent.html":{}}}],["31",{"_index":1418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32",{"_index":1279,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["333552",{"_index":524,"title":{},"body":{"components/LessonComponent.html":{}}}],["334893",{"_index":599,"title":{},"body":{"components/NewRequestComponent.html":{}}}],["35px",{"_index":1112,"title":{},"body":{"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["39",{"_index":901,"title":{},"body":{"components/TaskComponent.html":{}}}],["3b6fde",{"_index":1251,"title":{},"body":{"components/TasksComponent.html":{}}}],["3e0505",{"_index":414,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["3e0808",{"_index":428,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["3fr",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["3px",{"_index":655,"title":{},"body":{"components/NewTaskComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{}}}],["3rem",{"_index":571,"title":{},"body":{"components/ModalComponent.html":{},"components/NotFoundComponent.html":{}}}],["4",{"_index":1384,"title":{},"body":{"overview.html":{}}}],["4.5rem",{"_index":495,"title":{},"body":{"components/HeaderComponent.html":{}}}],["40rem",{"_index":412,"title":{},"body":{"components/ErrorModalComponent.html":{},"components/SimpleFormComponent.html":{}}}],["46.5rem",{"_index":673,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["4px",{"_index":421,"title":{},"body":{"components/ErrorModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["4rem",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["5",{"_index":845,"title":{},"body":{"components/SimpleFormComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["50",{"_index":533,"title":{},"body":{"components/LessonComponent.html":{}}}],["50rem",{"_index":475,"title":{},"body":{"components/HeaderComponent.html":{}}}],["50vh",{"_index":1253,"title":{},"body":{"components/TasksComponent.html":{}}}],["575754",{"_index":1113,"title":{},"body":{"components/TaskComponent.html":{}}}],["594b0e",{"_index":862,"title":{},"body":{"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{}}}],["5c80ce",{"_index":657,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["5d0909",{"_index":422,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["5deg",{"_index":722,"title":{},"body":{"components/PlacesComponent.html":{}}}],["5px",{"_index":1250,"title":{},"body":{"components/TasksComponent.html":{}}}],["5rem",{"_index":591,"title":{},"body":{"components/NewRequestComponent.html":{},"components/NotFoundComponent.html":{}}}],["6",{"_index":832,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["60",{"_index":1242,"title":{},"body":{"components/TasksComponent.html":{}}}],["64;injectable",{"_index":986,"title":{},"body":{"components/TaskComponent.html":{}}}],["64;optional",{"_index":1014,"title":{},"body":{"components/TaskComponent.html":{}}}],["64;self",{"_index":1015,"title":{},"body":{"components/TaskComponent.html":{}}}],["64;skipself",{"_index":1016,"title":{},"body":{"components/TaskComponent.html":{}}}],["65",{"_index":1110,"title":{},"body":{"components/TaskComponent.html":{}}}],["6577dd",{"_index":530,"title":{},"body":{"components/LessonComponent.html":{}}}],["65rem",{"_index":589,"title":{},"body":{"components/NewRequestComponent.html":{}}}],["65vh",{"_index":1241,"title":{},"body":{"components/TasksComponent.html":{}}}],["6px",{"_index":358,"title":{},"body":{"components/CardComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{}}}],["7.8.0",{"_index":1318,"title":{},"body":{"dependencies.html":{}}}],["737fca",{"_index":654,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["758a8a",{"_index":850,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["768px",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/NewTaskComponent.html":{},"components/TasksComponent.html":{}}}],["80rem",{"_index":703,"title":{},"body":{"components/PlacesComponent.html":{}}}],["850f0f",{"_index":431,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["85rem",{"_index":733,"title":{},"body":{"components/PlacesContainerComponent.html":{}}}],["89a3ff",{"_index":851,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["8px",{"_index":483,"title":{},"body":{"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TasksComponent.html":{}}}],["9",{"_index":1278,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["90",{"_index":474,"title":{},"body":{"components/HeaderComponent.html":{},"components/NewRequestComponent.html":{}}}],["90vh",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["9aa4c0",{"_index":648,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["9aa5c0",{"_index":644,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["9bafaf",{"_index":847,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["9ea4e5",{"_index":1108,"title":{},"body":{"components/TaskComponent.html":{}}}],["__actions",{"_index":415,"title":{},"body":{"components/ErrorModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/TaskComponent.html":{}}}],["__back",{"_index":677,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["__button",{"_index":418,"title":{},"body":{"components/ErrorModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{}}}],["__button:disabled",{"_index":864,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["__button:focus",{"_index":716,"title":{},"body":{"components/PlacesComponent.html":{}}}],["__button:hover",{"_index":715,"title":{},"body":{"components/PlacesComponent.html":{}}}],["__control",{"_index":645,"title":{},"body":{"components/NewTaskComponent.html":{},"components/SimpleFormComponent.html":{}}}],["__date",{"_index":1115,"title":{},"body":{"components/TaskComponent.html":{}}}],["__description",{"_index":490,"title":{},"body":{"components/HeaderComponent.html":{},"components/NewRequestComponent.html":{},"components/NotFoundComponent.html":{}}}],["__error",{"_index":859,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["__fallback",{"_index":113,"title":{},"body":{"components/AppComponent.html":{}}}],["__filter",{"_index":1243,"title":{},"body":{"components/TasksComponent.html":{}}}],["__form",{"_index":1119,"title":{},"body":{"components/TaskComponent.html":{}}}],["__group",{"_index":640,"title":{},"body":{"components/NewTaskComponent.html":{},"components/SimpleFormComponent.html":{}}}],["__header",{"_index":592,"title":{},"body":{"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["__image",{"_index":723,"title":{},"body":{"components/PlacesComponent.html":{}}}],["__item",{"_index":707,"title":{},"body":{"components/PlacesComponent.html":{}}}],["__item:nth",{"_index":713,"title":{},"body":{"components/PlacesComponent.html":{}}}],["__label",{"_index":641,"title":{},"body":{"components/NewTaskComponent.html":{},"components/SimpleFormComponent.html":{}}}],["__lessons",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["__list",{"_index":1252,"title":{},"body":{"components/TasksComponent.html":{}}}],["__logo",{"_index":485,"title":{},"body":{"components/HeaderComponent.html":{}}}],["__menu",{"_index":1246,"title":{},"body":{"components/TasksComponent.html":{}}}],["__message",{"_index":429,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["__row",{"_index":842,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["__status",{"_index":1111,"title":{},"body":{"components/TaskComponent.html":{}}}],["__summary",{"_index":1117,"title":{},"body":{"components/TaskComponent.html":{}}}],["__title",{"_index":427,"title":{},"body":{"components/ErrorModalComponent.html":{},"components/HeaderComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["__users",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["_error",{"_index":435,"title":{},"body":{"injectables/ErrorService.html":{}}}],["a.id.localecompare(b.id",{"_index":1227,"title":{},"body":{"components/TasksComponent.html":{}}}],["a16",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"interceptors/RemoteA16Interceptor.html":{},"coverage.html":{}}}],["a16.interceptor",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["a16.interceptor.ts",{"_index":738,"title":{},"body":{"interceptors/RemoteA16Interceptor.html":{},"coverage.html":{}}}],["a16.interceptor.ts:7",{"_index":743,"title":{},"body":{"interceptors/RemoteA16Interceptor.html":{}}}],["a4b3ff",{"_index":598,"title":{},"body":{"components/NewRequestComponent.html":{}}}],["a[appsafelink",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{}}}],["absolute",{"_index":726,"title":{},"body":{"components/PlacesComponent.html":{}}}],["accept",{"_index":970,"title":{},"body":{"components/TaskComponent.html":{}}}],["accessible",{"_index":1089,"title":{},"body":{"components/TaskComponent.html":{}}}],["accessors",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/LessonComponent.html":{},"components/TaskComponent.html":{}}}],["activated",{"_index":1085,"title":{},"body":{"components/TaskComponent.html":{}}}],["activatedroute",{"_index":612,"title":{},"body":{"components/NewTaskComponent.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["activatedroute.parammap.get('lessonid",{"_index":1233,"title":{},"body":{"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["activatedroutesnapshot",{"_index":1202,"title":{},"body":{"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["active",{"_index":529,"title":{},"body":{"components/LessonComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["activepermission",{"_index":1124,"title":{},"body":{"injectables/TaskService.html":{}}}],["actual_component",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{}}}],["adb3cf",{"_index":651,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["adc9ff",{"_index":353,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/NewRequestComponent.html":{},"components/PlacesContainerComponent.html":{}}}],["add",{"_index":636,"title":{},"body":{"components/NewTaskComponent.html":{},"components/TasksComponent.html":{}}}],["adding",{"_index":344,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/TaskComponent.html":{}}}],["addition",{"_index":1018,"title":{},"body":{"components/TaskComponent.html":{}}}],["additional",{"_index":1373,"title":{},"body":{"index.html":{}}}],["address",{"_index":777,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["addtask",{"_index":1125,"title":{},"body":{"injectables/TaskService.html":{}}}],["addtask(task",{"_index":1132,"title":{},"body":{"injectables/TaskService.html":{}}}],["advanced",{"_index":998,"title":{},"body":{"components/TaskComponent.html":{}}}],["afterviewinit",{"_index":538,"title":{},"body":{"components/ModalComponent.html":{},"components/SimpleFormComponent.html":{}}}],["again",{"_index":346,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/SimpleFormComponent.html":{}}}],["alias",{"_index":1302,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":267,"title":{},"body":{"directives/AuthDirective.html":{},"miscellaneous/typealiases.html":{}}}],["align",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/NewRequestComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesContainerComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["allow",{"_index":1041,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["allowed",{"_index":865,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["allows",{"_index":989,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["alt",{"_index":690,"title":{},"body":{"interfaces/Place.html":{}}}],["angular",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["angular/animations",{"_index":1312,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":789,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"interceptors/RemoteA16Interceptor.html":{}}}],["angular/compiler",{"_index":1314,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"modules/ComponentsModule.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"interceptors/RemoteA16Interceptor.html":{},"directives/SafeLinkDirective.html":{},"modules/SharedModule.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{},"pipes/TemperaturePipe.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":791,"title":{},"body":{"modules/SharedModule.html":{},"components/SimpleFormComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1315,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"components/NewTaskComponent.html":{},"modules/SharedModule.html":{},"components/TasksComponent.html":{},"dependencies.html":{}}}],["animation",{"_index":556,"title":{},"body":{"components/ModalComponent.html":{},"components/PlacesComponent.html":{}}}],["another",{"_index":979,"title":{},"body":{"components/TaskComponent.html":{}}}],["ans",{"_index":1441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["antiquewhite",{"_index":1249,"title":{},"body":{"components/TasksComponent.html":{}}}],["api",{"_index":1049,"title":{},"body":{"components/TaskComponent.html":{}}}],["apihost",{"_index":747,"title":{},"body":{"interceptors/RemoteA16Interceptor.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{}}}],["app.component",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.routes",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["app_initializer",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["appauth",{"_index":243,"title":{},"body":{"directives/AuthDirective.html":{},"components/TaskComponent.html":{}}}],["appauth]'},{'name",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appearance",{"_index":955,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":963,"title":{},"body":{"components/TaskComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["applicationstate",{"_index":1038,"title":{},"body":{"components/TaskComponent.html":{}}}],["appmodule",{"_index":183,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approach",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["apps",{"_index":1003,"title":{},"body":{"components/TaskComponent.html":{}}}],["appsafelink",{"_index":759,"title":{},"body":{"directives/SafeLinkDirective.html":{},"components/TaskComponent.html":{}}}],["architects/module",{"_index":313,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["artifacts",{"_index":1353,"title":{},"body":{"index.html":{}}}],["asc",{"_index":1198,"title":{},"body":{"components/TasksComponent.html":{}}}],["ascending",{"_index":1240,"title":{},"body":{"components/TasksComponent.html":{}}}],["assets/dummy",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["assets/mf",{"_index":518,"title":{},"body":{"components/LessonComponent.html":{}}}],["associate",{"_index":1102,"title":{},"body":{"components/TaskComponent.html":{}}}],["associated",{"_index":1106,"title":{},"body":{"components/TaskComponent.html":{}}}],["async",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"miscellaneous/variables.html":{}}}],["atribute",{"_index":770,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["attribute",{"_index":954,"title":{},"body":{"components/TaskComponent.html":{}}}],["attributes",{"_index":959,"title":{},"body":{"components/TaskComponent.html":{}}}],["auth",{"_index":273,"title":{},"body":{"directives/AuthDirective.html":{}}}],["authdirective",{"_index":175,"title":{"directives/AuthDirective.html":{}},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"modules/SharedModule.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authenticated",{"_index":1090,"title":{},"body":{"components/TaskComponent.html":{}}}],["authentication",{"_index":1054,"title":{},"body":{"components/TaskComponent.html":{}}}],["auto",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorModalComponent.html":{},"components/HeaderComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/TasksComponent.html":{}}}],["automatically",{"_index":1337,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["available",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{},"index.html":{}}}],["availableplacescomponent",{"_index":141,"title":{"components/AvailablePlacesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"modules/ComponentsModule.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["avatar",{"_index":499,"title":{},"body":{"interfaces/Lesson.html":{},"miscellaneous/variables.html":{}}}],["avoid",{"_index":812,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["avoids",{"_index":318,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["await",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"miscellaneous/variables.html":{}}}],["b",{"_index":1226,"title":{},"body":{"components/TasksComponent.html":{}}}],["b.id.localecompare(a.id",{"_index":1228,"title":{},"body":{"components/TasksComponent.html":{}}}],["back",{"_index":672,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["backdrop",{"_index":563,"title":{},"body":{"components/ModalComponent.html":{}}}],["background",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorModalComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["balance",{"_index":493,"title":{},"body":{"components/HeaderComponent.html":{},"components/TasksComponent.html":{}}}],["basis",{"_index":962,"title":{},"body":{"components/TaskComponent.html":{}}}],["before",{"_index":1083,"title":{},"body":{"components/TaskComponent.html":{}}}],["behavior",{"_index":956,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["behaviorsubject",{"_index":441,"title":{},"body":{"injectables/ErrorService.html":{}}}],["between",{"_index":594,"title":{},"body":{"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["beyond",{"_index":1001,"title":{},"body":{"components/TaskComponent.html":{}}}],["biding",{"_index":950,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["binding",{"_index":946,"title":{},"body":{"components/TaskComponent.html":{}}}],["block",{"_index":642,"title":{},"body":{"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/SimpleFormComponent.html":{}}}],["bold",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{}}}],["boolean",{"_index":508,"title":{},"body":{"components/LessonComponent.html":{},"injectables/TaskService.html":{}}}],["bootstrap",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["border",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["bottom",{"_index":479,"title":{},"body":{"components/HeaderComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["bottom,#0e0a4c,#1e0d80",{"_index":478,"title":{},"body":{"components/HeaderComponent.html":{}}}],["box",{"_index":359,"title":{},"body":{"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{}}}],["break",{"_index":929,"title":{},"body":{"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["browse",{"_index":1381,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1316,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules.html":{}}}],["build",{"_index":974,"title":{},"body":{"components/TaskComponent.html":{},"index.html":{}}}],["buildthis",{"_index":1350,"title":{},"body":{"index.html":{}}}],["buld",{"_index":1039,"title":{},"body":{"components/TaskComponent.html":{}}}],["button",{"_index":1247,"title":{},"body":{"components/TasksComponent.html":{}}}],["c",{"_index":1281,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["c2c4e1",{"_index":649,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["c2c9e1",{"_index":639,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["c2cae1",{"_index":652,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["c3b3d1",{"_index":525,"title":{},"body":{"components/LessonComponent.html":{}}}],["called",{"_index":965,"title":{},"body":{"components/TaskComponent.html":{}}}],["canactivate",{"_index":1086,"title":{},"body":{"components/TaskComponent.html":{}}}],["cancel",{"_index":637,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["candeactivate",{"_index":1094,"title":{},"body":{"components/TaskComponent.html":{}}}],["candeactivatefn",{"_index":1394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canleaveeditpage",{"_index":1307,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["canload",{"_index":1098,"title":{},"body":{"components/TaskComponent.html":{}}}],["canmatch",{"_index":1080,"title":{},"body":{"components/TaskComponent.html":{}}}],["card",{"_index":355,"title":{},"body":{"components/CardComponent.html":{},"components/TaskComponent.html":{}}}],["card'},{'name",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{}}}],["card.component.html",{"_index":357,"title":{},"body":{"components/CardComponent.html":{}}}],["card.component.scss",{"_index":356,"title":{},"body":{"components/CardComponent.html":{}}}],["card__button",{"_index":522,"title":{},"body":{"components/LessonComponent.html":{}}}],["card__image",{"_index":532,"title":{},"body":{"components/LessonComponent.html":{}}}],["card__name",{"_index":535,"title":{},"body":{"components/LessonComponent.html":{}}}],["cardcomponent",{"_index":144,"title":{"components/CardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"modules/ComponentsModule.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["case",{"_index":925,"title":{},"body":{"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["catch",{"_index":336,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["cbac21",{"_index":863,"title":{},"body":{"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{}}}],["cdd5f2",{"_index":676,"title":{},"body":{"components/NotFoundComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{}}}],["cel",{"_index":1262,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["center",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/NewRequestComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesContainerComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["certain",{"_index":1092,"title":{},"body":{"components/TaskComponent.html":{}}}],["chache",{"_index":1270,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["change",{"_index":936,"title":{},"body":{"components/TaskComponent.html":{}}}],["changes",{"_index":1400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["characters",{"_index":833,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["child(even",{"_index":720,"title":{},"body":{"components/PlacesComponent.html":{}}}],["child(odd",{"_index":714,"title":{},"body":{"components/PlacesComponent.html":{}}}],["choose",{"_index":1371,"title":{},"body":{"index.html":{}}}],["class",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"modules/ComponentsModule.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"interceptors/RemoteA16Interceptor.html":{},"directives/SafeLinkDirective.html":{},"modules/SharedModule.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["classes",{"_index":1028,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["clearerror",{"_index":436,"title":{},"body":{"injectables/ErrorService.html":{}}}],["cli",{"_index":1327,"title":{},"body":{"index.html":{}}}],["click",{"_index":768,"title":{},"body":{"directives/SafeLinkDirective.html":{},"components/TaskComponent.html":{}}}],["click)=\"onclick",{"_index":948,"title":{},"body":{"components/TaskComponent.html":{}}}],["close",{"_index":578,"title":{},"body":{"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{}}}],["cluster_appmodule",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_componentsmodule",{"_index":365,"title":{},"body":{"modules/ComponentsModule.html":{},"overview.html":{}}}],["cluster_componentsmodule_declarations",{"_index":366,"title":{},"body":{"modules/ComponentsModule.html":{},"overview.html":{}}}],["cluster_componentsmodule_exports",{"_index":368,"title":{},"body":{"modules/ComponentsModule.html":{},"overview.html":{}}}],["cluster_componentsmodule_imports",{"_index":367,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["cluster_sharedmodule",{"_index":783,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":784,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":785,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["code",{"_index":1341,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["collection",{"_index":585,"title":{},"body":{"components/NewRequestComponent.html":{}}}],["color",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/LessonComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["column",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/PlacesComponent.html":{},"components/TasksComponent.html":{}}}],["columns",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/PlacesComponent.html":{}}}],["combine",{"_index":960,"title":{},"body":{"components/TaskComponent.html":{}}}],["come",{"_index":1370,"title":{},"body":{"index.html":{}}}],["command",{"_index":1366,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":788,"title":{},"body":{"modules/SharedModule.html":{}}}],["communicate",{"_index":1042,"title":{},"body":{"components/TaskComponent.html":{}}}],["comparisons",{"_index":1436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["compile",{"_index":1351,"title":{},"body":{"index.html":{}}}],["complements",{"_index":1442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["complete",{"_index":335,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/TaskComponent.html":{},"index.html":{}}}],["completed",{"_index":927,"title":{},"body":{"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["completely",{"_index":1066,"title":{},"body":{"components/TaskComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["component.entereddate.length",{"_index":1397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["component.enteredsummary.length",{"_index":1396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["component.enteredtitle.length",{"_index":1395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["component.ts",{"_index":1415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["component_template",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["components/components.module",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["components/header/header.component",{"_index":370,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["components/lesson/lesson.component",{"_index":371,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["components/new",{"_index":375,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["components/task/task.component",{"_index":374,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["components/task/task.model",{"_index":1147,"title":{},"body":{"injectables/TaskService.html":{}}}],["components/tasks/tasks.component",{"_index":372,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["componentsmodule",{"_index":208,"title":{"modules/ComponentsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"modules.html":{},"overview.html":{}}}],["concrete",{"_index":1027,"title":{},"body":{"components/TaskComponent.html":{}}}],["conditional",{"_index":1449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["conditions",{"_index":1100,"title":{},"body":{"components/TaskComponent.html":{}}}],["configuration",{"_index":971,"title":{},"body":{"components/TaskComponent.html":{}}}],["confirm('are",{"_index":1398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["conjunction",{"_index":1013,"title":{},"body":{"components/TaskComponent.html":{}}}],["console.error(error.message",{"_index":342,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["console.log('intercepted",{"_index":753,"title":{},"body":{"interceptors/RemoteA16Interceptor.html":{}}}],["console.log(email",{"_index":828,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["const",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/NewTaskComponent.html":{},"interceptors/RemoteA16Interceptor.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/NewTaskComponent.html":{},"directives/SafeLinkDirective.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["constructor(errorservice",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorModalComponent.html":{}}}],["constructor(hostelementref",{"_index":760,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["constructor(injector",{"_index":296,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["constructor(private",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/NewTaskComponent.html":{},"directives/SafeLinkDirective.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["constructor(taskservice",{"_index":610,"title":{},"body":{"components/NewTaskComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["constructor(tasksservice",{"_index":247,"title":{},"body":{"directives/AuthDirective.html":{}}}],["contain",{"_index":489,"title":{},"body":{"components/HeaderComponent.html":{},"components/LessonComponent.html":{}}}],["container",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{}}}],["container'},{'name",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{}}}],["container.component",{"_index":384,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["container.component.html",{"_index":730,"title":{},"body":{"components/PlacesContainerComponent.html":{},"components/TasksContainerComponent.html":{}}}],["container.component.scss",{"_index":729,"title":{},"body":{"components/PlacesContainerComponent.html":{},"components/TasksContainerComponent.html":{}}}],["container.component.ts",{"_index":728,"title":{},"body":{"components/PlacesContainerComponent.html":{},"components/TasksContainerComponent.html":{},"coverage.html":{}}}],["container.component.ts:9",{"_index":731,"title":{},"body":{"components/PlacesContainerComponent.html":{}}}],["container/places",{"_index":393,"title":{},"body":{"modules/ComponentsModule.html":{},"components/PlacesContainerComponent.html":{},"coverage.html":{}}}],["container/tasks",{"_index":383,"title":{},"body":{"modules/ComponentsModule.html":{},"components/TasksContainerComponent.html":{},"coverage.html":{}}}],["content",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorModalComponent.html":{},"components/HeaderComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["control",{"_index":990,"title":{},"body":{"components/TaskComponent.html":{}}}],["controls",{"_index":1011,"title":{},"body":{"components/TaskComponent.html":{}}}],["cover",{"_index":724,"title":{},"body":{"components/PlacesComponent.html":{}}}],["coverage",{"_index":1284,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":583,"title":{},"body":{"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["creates",{"_index":982,"title":{},"body":{"components/TaskComponent.html":{}}}],["cursor",{"_index":419,"title":{},"body":{"components/ErrorModalComponent.html":{},"components/LessonComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["custom",{"_index":911,"title":{},"body":{"components/TaskComponent.html":{}}}],["custominterval",{"_index":868,"title":{},"body":{"components/TaskComponent.html":{}}}],["customsubscription",{"_index":869,"title":{},"body":{"components/TaskComponent.html":{}}}],["d5c7bc",{"_index":553,"title":{},"body":{"components/ModalComponent.html":{}}}],["data",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["data.ts",{"_index":1293,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["data['lessonname",{"_index":1209,"title":{},"body":{"components/TasksComponent.html":{}}}],["database",{"_index":1053,"title":{},"body":{"components/TaskComponent.html":{}}}],["date",{"_index":629,"title":{},"body":{"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"interfaces/Task.html":{}}}],["date().gettime().tostring",{"_index":1155,"title":{},"body":{"injectables/TaskService.html":{}}}],["date:'fulldate",{"_index":938,"title":{},"body":{"components/TaskComponent.html":{}}}],["date:\\'fulldate",{"_index":1120,"title":{},"body":{"components/TaskComponent.html":{}}}],["datepipe",{"_index":968,"title":{},"body":{"components/TaskComponent.html":{}}}],["dc2626",{"_index":674,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["debouncetime",{"_index":810,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["decides",{"_index":1081,"title":{},"body":{"components/TaskComponent.html":{}}}],["declarations",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["declare",{"_index":1019,"title":{},"body":{"components/TaskComponent.html":{}}}],["declared",{"_index":976,"title":{},"body":{"components/TaskComponent.html":{}}}],["decoration",{"_index":679,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["decorator",{"_index":987,"title":{},"body":{"components/TaskComponent.html":{}}}],["decorators",{"_index":543,"title":{},"body":{"components/ModalComponent.html":{},"components/SimpleFormComponent.html":{}}}],["default",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"interceptors/RemoteA16Interceptor.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["delete",{"_index":1075,"title":{},"body":{"components/TaskComponent.html":{}}}],["deletes",{"_index":1076,"title":{},"body":{"components/TaskComponent.html":{}}}],["delivers",{"_index":984,"title":{},"body":{"components/TaskComponent.html":{}}}],["dependencies",{"_index":185,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"modules/SharedModule.html":{},"components/TaskComponent.html":{},"dependencies.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["dependency",{"_index":988,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["deps",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["desc",{"_index":1199,"title":{},"body":{"components/TasksComponent.html":{}}}],["descending",{"_index":1239,"title":{},"body":{"components/TasksComponent.html":{}}}],["design",{"_index":1428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detailed",{"_index":1375,"title":{},"body":{"index.html":{}}}],["determines",{"_index":1087,"title":{},"body":{"components/TaskComponent.html":{}}}],["development",{"_index":1330,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":550,"title":{},"body":{"components/ModalComponent.html":{},"components/NewTaskComponent.html":{}}}],["dialogel",{"_index":539,"title":{},"body":{"components/ModalComponent.html":{}}}],["direction",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/PlacesComponent.html":{},"components/TasksComponent.html":{}}}],["directive",{"_index":137,"title":{"directives/AuthDirective.html":{},"directives/SafeLinkDirective.html":{}},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{},"coverage.html":{}}}],["directives",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["directives/auth/auth.directive",{"_index":795,"title":{},"body":{"modules/SharedModule.html":{}}}],["directives/safe",{"_index":793,"title":{},"body":{"modules/SharedModule.html":{}}}],["directly",{"_index":1423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["directory",{"_index":1355,"title":{},"body":{"index.html":{}}}],["dirty",{"_index":856,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["display",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorModalComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["displayedtasks",{"_index":1168,"title":{},"body":{"components/TasksComponent.html":{}}}],["displaying",{"_index":1105,"title":{},"body":{"components/TaskComponent.html":{}}}],["dist",{"_index":1354,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1285,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["done",{"_index":662,"title":{},"body":{"interfaces/NewTaskData.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["down",{"_index":558,"title":{},"body":{"components/ModalComponent.html":{}}}],["due",{"_index":264,"title":{},"body":{"directives/AuthDirective.html":{},"components/NewTaskComponent.html":{}}}],["duedate",{"_index":663,"title":{},"body":{"interfaces/NewTaskData.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"miscellaneous/variables.html":{}}}],["dummy_lessons",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dummy_lessons.find(lesson",{"_index":1234,"title":{},"body":{"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["dummy_tasks",{"_index":1145,"title":{},"body":{"injectables/TaskService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dynamic",{"_index":1317,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1368,"title":{},"body":{"index.html":{}}}],["e2eangular",{"_index":1369,"title":{},"body":{"index.html":{}}}],["each",{"_index":1005,"title":{},"body":{"components/TaskComponent.html":{}}}],["ease",{"_index":561,"title":{},"body":{"components/ModalComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{}}}],["ede8f7",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["edit",{"_index":1304,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["effect",{"_index":256,"title":{},"body":{"directives/AuthDirective.html":{},"components/NewTaskComponent.html":{}}}],["element",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{}}}],["elementref",{"_index":542,"title":{},"body":{"components/ModalComponent.html":{},"directives/SafeLinkDirective.html":{}}}],["elements",{"_index":953,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["email",{"_index":821,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["end",{"_index":417,"title":{},"body":{"components/ErrorModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/TaskComponent.html":{},"index.html":{}}}],["ensures",{"_index":1104,"title":{},"body":{"components/TaskComponent.html":{}}}],["entereddate",{"_index":605,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["enteredsummary",{"_index":606,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["enteredtitle",{"_index":607,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["entire",{"_index":999,"title":{},"body":{"components/TaskComponent.html":{}}}],["error",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{}}}],["error.message",{"_index":334,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["error/components/error/error",{"_index":394,"title":{},"body":{"modules/ComponentsModule.html":{},"components/ErrorModalComponent.html":{},"coverage.html":{}}}],["error/components/modal/modal.component",{"_index":396,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["error/components/modal/modal.component.ts",{"_index":537,"title":{},"body":{"components/ModalComponent.html":{},"coverage.html":{}}}],["error/components/modal/modal.component.ts:10",{"_index":547,"title":{},"body":{"components/ModalComponent.html":{}}}],["error/components/modal/modal.component.ts:12",{"_index":541,"title":{},"body":{"components/ModalComponent.html":{}}}],["error/service/error.service",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["error/service/error.service.ts",{"_index":434,"title":{},"body":{"injectables/ErrorService.html":{},"coverage.html":{}}}],["error/service/error.service.ts:11",{"_index":440,"title":{},"body":{"injectables/ErrorService.html":{}}}],["error/service/error.service.ts:15",{"_index":438,"title":{},"body":{"injectables/ErrorService.html":{}}}],["error/service/error.service.ts:8",{"_index":442,"title":{},"body":{"injectables/ErrorService.html":{}}}],["error/service/error.service.ts:9",{"_index":445,"title":{},"body":{"injectables/ErrorService.html":{}}}],["errormodalcomponent",{"_index":146,"title":{"components/ErrorModalComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"modules/ComponentsModule.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errorservice",{"_index":33,"title":{"injectables/ErrorService.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"coverage.html":{}}}],["estructural",{"_index":260,"title":{},"body":{"directives/AuthDirective.html":{},"injectables/TaskService.html":{}}}],["etc",{"_index":1017,"title":{},"body":{"components/TaskComponent.html":{}}}],["evaluated",{"_index":1084,"title":{},"body":{"components/TaskComponent.html":{}}}],["even",{"_index":1000,"title":{},"body":{"components/TaskComponent.html":{}}}],["event",{"_index":766,"title":{},"body":{"directives/SafeLinkDirective.html":{},"components/TaskComponent.html":{}}}],["event.target",{"_index":779,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["event?.preventdefault",{"_index":782,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["eventemitter",{"_index":510,"title":{},"body":{"components/LessonComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{},"components/TaskComponent.html":{}}}],["events",{"_index":1034,"title":{},"body":{"components/TaskComponent.html":{}}}],["example",{"_index":964,"title":{},"body":{"components/TaskComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["examples",{"_index":1437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["execute",{"_index":1362,"title":{},"body":{"index.html":{}}}],["executions",{"_index":1273,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["existing",{"_index":1068,"title":{},"body":{"components/TaskComponent.html":{}}}],["exit",{"_index":1095,"title":{},"body":{"components/TaskComponent.html":{}}}],["export",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"modules/ComponentsModule.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Lesson.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"components/NotFoundComponent.html":{},"interfaces/Place.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"interceptors/RemoteA16Interceptor.html":{},"directives/SafeLinkDirective.html":{},"modules/SharedModule.html":{},"components/SimpleFormComponent.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["exports",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["exposedmodule",{"_index":326,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"miscellaneous/variables.html":{}}}],["expresion",{"_index":944,"title":{},"body":{"components/TaskComponent.html":{}}}],["external",{"_index":1043,"title":{},"body":{"components/TaskComponent.html":{}}}],["f",{"_index":1282,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["f4c7c7",{"_index":413,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["f84e2c",{"_index":858,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["factories",{"_index":1029,"title":{},"body":{"components/TaskComponent.html":{}}}],["fade",{"_index":559,"title":{},"body":{"components/ModalComponent.html":{},"components/PlacesComponent.html":{}}}],["fah",{"_index":1263,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["false",{"_index":304,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/ModalComponent.html":{},"components/NewTaskComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["family",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{}}}],["favorite",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{}}}],["favoriteplaces",{"_index":449,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["favoriteplacescomponent",{"_index":148,"title":{"components/FavoritePlacesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"modules/ComponentsModule.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["fbdcd6",{"_index":857,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["fede",{"_index":1164,"title":{},"body":{"injectables/TaskService.html":{}}}],["federation",{"_index":314,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["feeaa6",{"_index":1245,"title":{},"body":{"components/TasksComponent.html":{}}}],["feee86",{"_index":727,"title":{},"body":{"components/PlacesComponent.html":{}}}],["fefefe",{"_index":1114,"title":{},"body":{"components/TaskComponent.html":{}}}],["ffca99",{"_index":860,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["fff",{"_index":424,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["fields",{"_index":1074,"title":{},"body":{"components/TaskComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"modules/ComponentsModule.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Lesson.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"components/NotFoundComponent.html":{},"interfaces/Place.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"interceptors/RemoteA16Interceptor.html":{},"directives/SafeLinkDirective.html":{},"modules/SharedModule.html":{},"components/SimpleFormComponent.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{},"pipes/TemperaturePipe.html":{},"coverage.html":{}}}],["files",{"_index":1340,"title":{},"body":{"index.html":{}}}],["fill",{"_index":705,"title":{},"body":{"components/PlacesComponent.html":{}}}],["filter",{"_index":1187,"title":{},"body":{"components/TasksComponent.html":{}}}],["filtered",{"_index":1221,"title":{},"body":{"components/TasksComponent.html":{}}}],["filtered.sort((a",{"_index":1225,"title":{},"body":{"components/TasksComponent.html":{}}}],["fit",{"_index":488,"title":{},"body":{"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/PlacesComponent.html":{}}}],["fixed",{"_index":565,"title":{},"body":{"components/ModalComponent.html":{}}}],["flag",{"_index":811,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["flex",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorModalComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["focus",{"_index":426,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["following",{"_index":1365,"title":{},"body":{"index.html":{}}}],["font",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["form",{"_index":638,"title":{},"body":{"components/NewTaskComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["form'},{'name",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{}}}],["form.component",{"_index":379,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["form.component.html",{"_index":799,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["form.component.scss",{"_index":798,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["form.component.ts",{"_index":797,"title":{},"body":{"components/SimpleFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:10",{"_index":807,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["form.component.ts:11",{"_index":809,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["form.component.ts:12",{"_index":808,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["form.component.ts:14",{"_index":800,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["form.component.ts:25",{"_index":804,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["form.component.ts:32",{"_index":801,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["form/simple",{"_index":378,"title":{},"body":{"modules/ComponentsModule.html":{},"components/SimpleFormComponent.html":{},"coverage.html":{}}}],["form__group",{"_index":844,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["format",{"_index":1422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formdata",{"_index":805,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["formdata.invalid",{"_index":826,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["formdata.reset",{"_index":829,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["formdata.value",{"_index":827,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["forms",{"_index":1051,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["formsmodule",{"_index":790,"title":{},"body":{"modules/SharedModule.html":{}}}],["forwards",{"_index":562,"title":{},"body":{"components/ModalComponent.html":{},"components/PlacesComponent.html":{}}}],["found",{"_index":350,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/NotFoundComponent.html":{}}}],["found'},{'name",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{}}}],["found.component",{"_index":381,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["found.component.html",{"_index":667,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.scss",{"_index":666,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts",{"_index":665,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["found/not",{"_index":380,"title":{},"body":{"modules/ComponentsModule.html":{},"components/NotFoundComponent.html":{},"coverage.html":{}}}],["framework",{"_index":470,"title":{},"body":{"components/HeaderComponent.html":{},"index.html":{}}}],["function",{"_index":1433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gap",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorModalComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["generate",{"_index":1346,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1325,"title":{},"body":{"index.html":{}}}],["getimagepath",{"_index":513,"title":{},"body":{"components/LessonComponent.html":{}}}],["getlessontasks",{"_index":1126,"title":{},"body":{"injectables/TaskService.html":{}}}],["getlessontasks(lessonid",{"_index":1134,"title":{},"body":{"injectables/TaskService.html":{}}}],["getselectedlesson",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["gettaskstatus",{"_index":903,"title":{},"body":{"components/TaskComponent.html":{}}}],["getting",{"_index":1321,"title":{"index.html":{}},"body":{}}],["global",{"_index":994,"title":{},"body":{"components/TaskComponent.html":{}}}],["globally",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["gradient(180deg",{"_index":834,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["gradient(to",{"_index":477,"title":{},"body":{"components/HeaderComponent.html":{}}}],["great",{"_index":1032,"title":{},"body":{"components/TaskComponent.html":{}}}],["grid",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/PlacesComponent.html":{}}}],["guards",{"_index":1079,"title":{},"body":{"components/TaskComponent.html":{}}}],["guest",{"_index":1144,"title":{},"body":{"injectables/TaskService.html":{}}}],["having",{"_index":1434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["header",{"_index":463,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{}}}],["header.component.html",{"_index":465,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":464,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":150,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"modules/ComponentsModule.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["height",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/ModalComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["helpbuilding",{"_index":1349,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":364,"title":{},"body":{"components/CardComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{}}}],["history.replacestate",{"_index":1218,"title":{},"body":{"components/TasksComponent.html":{}}}],["host",{"_index":767,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["host/placesservice",{"_index":315,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["hostelementref",{"_index":762,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["hostservicemodule",{"_index":323,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["hostservicemodule.placesservice",{"_index":327,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["hover",{"_index":425,"title":{},"body":{"components/ErrorModalComponent.html":{},"components/LessonComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["html",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["htmlanchorelement).href",{"_index":780,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["http",{"_index":385,"title":{},"body":{"modules/ComponentsModule.html":{},"components/NewRequestComponent.html":{},"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1336,"title":{},"body":{"index.html":{}}}],["http://localhost:4200/remoteentry.js",{"_index":325,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:4202",{"_index":748,"title":{},"body":{"interceptors/RemoteA16Interceptor.html":{}}}],["http_interceptors",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":746,"title":{},"body":{"interceptors/RemoteA16Interceptor.html":{}}}],["httphandler",{"_index":742,"title":{},"body":{"interceptors/RemoteA16Interceptor.html":{}}}],["httpinterceptor",{"_index":745,"title":{},"body":{"interceptors/RemoteA16Interceptor.html":{}}}],["httprequest",{"_index":741,"title":{},"body":{"interceptors/RemoteA16Interceptor.html":{}}}],["id",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Lesson.html":{},"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"interfaces/Place.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1286,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":684,"title":{},"body":{"interfaces/Place.html":{}}}],["imagepath",{"_index":505,"title":{},"body":{"components/LessonComponent.html":{}}}],["images",{"_index":1078,"title":{},"body":{"components/TaskComponent.html":{}}}],["implementation",{"_index":1445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implements",{"_index":284,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/ModalComponent.html":{},"interceptors/RemoteA16Interceptor.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["import",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"modules/ComponentsModule.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"interceptors/RemoteA16Interceptor.html":{},"directives/SafeLinkDirective.html":{},"modules/SharedModule.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["imports",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"modules/SharedModule.html":{}}}],["in_progress",{"_index":661,"title":{},"body":{"interfaces/NewTaskData.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["inbuild",{"_index":967,"title":{},"body":{"components/TaskComponent.html":{}}}],["includes",{"_index":1343,"title":{},"body":{"index.html":{}}}],["including",{"_index":1374,"title":{},"body":{"index.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"interfaces/Lesson.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"interfaces/Place.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"interceptors/RemoteA16Interceptor.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"modules/ComponentsModule.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Lesson.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"components/NotFoundComponent.html":{},"interfaces/Place.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"interceptors/RemoteA16Interceptor.html":{},"directives/SafeLinkDirective.html":{},"modules/SharedModule.html":{},"components/SimpleFormComponent.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["information",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/TaskComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["inherit",{"_index":526,"title":{},"body":{"components/LessonComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["inject",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["inject(injector",{"_index":255,"title":{},"body":{"directives/AuthDirective.html":{}}}],["inject(placesserviceclass",{"_index":329,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["injectable",{"_index":432,"title":{"injectables/ErrorService.html":{},"injectables/TaskService.html":{}},"body":{"injectables/ErrorService.html":{},"interceptors/RemoteA16Interceptor.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["injectable({providedin",{"_index":1148,"title":{},"body":{"injectables/TaskService.html":{}}}],["injectables",{"_index":433,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/TaskService.html":{},"overview.html":{}}}],["injected",{"_index":992,"title":{},"body":{"components/TaskComponent.html":{}}}],["injecting",{"_index":1023,"title":{},"body":{"components/TaskComponent.html":{}}}],["injection",{"_index":981,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/TaskComponent.html":{}}}],["injector.create",{"_index":1021,"title":{},"body":{"components/TaskComponent.html":{}}}],["injector.get(placesserviceclass",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["inline",{"_index":681,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["input",{"_index":257,"title":{},"body":{"directives/AuthDirective.html":{},"components/ErrorModalComponent.html":{},"components/LessonComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["input('appauth",{"_index":262,"title":{},"body":{"directives/AuthDirective.html":{}}}],["input('appsafelink",{"_index":771,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["input({required",{"_index":517,"title":{},"body":{"components/LessonComponent.html":{},"components/NewTaskComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["inputs",{"_index":246,"title":{},"body":{"directives/AuthDirective.html":{},"components/ErrorModalComponent.html":{},"components/LessonComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["inputtype",{"_index":1261,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["instance",{"_index":993,"title":{},"body":{"components/TaskComponent.html":{}}}],["instances",{"_index":1430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instancetype",{"_index":308,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["instead",{"_index":270,"title":{},"body":{"directives/AuthDirective.html":{}}}],["intercept",{"_index":739,"title":{},"body":{"interceptors/RemoteA16Interceptor.html":{}}}],["intercept(req",{"_index":740,"title":{},"body":{"interceptors/RemoteA16Interceptor.html":{}}}],["interceptor",{"_index":735,"title":{"interceptors/RemoteA16Interceptor.html":{}},"body":{"coverage.html":{}}}],["interceptor/remote",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"interceptors/RemoteA16Interceptor.html":{},"coverage.html":{}}}],["interceptors",{"_index":736,"title":{},"body":{"interceptors/RemoteA16Interceptor.html":{}}}],["interceptors/remote",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["interface",{"_index":496,"title":{"interfaces/Lesson.html":{},"interfaces/NewTaskData.html":{},"interfaces/Place.html":{},"interfaces/Task.html":{}},"body":{"interfaces/Lesson.html":{},"interfaces/NewTaskData.html":{},"interfaces/Place.html":{},"interfaces/Task.html":{},"coverage.html":{}}}],["interfaces",{"_index":497,"title":{},"body":{"interfaces/Lesson.html":{},"interfaces/NewTaskData.html":{},"interfaces/Place.html":{},"interfaces/Task.html":{},"overview.html":{}}}],["interpolation",{"_index":942,"title":{},"body":{"components/TaskComponent.html":{}}}],["interval",{"_index":906,"title":{},"body":{"components/TaskComponent.html":{}}}],["interval(1000).pipe",{"_index":913,"title":{},"body":{"components/TaskComponent.html":{}}}],["invalid",{"_index":831,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["invalid.ng",{"_index":854,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["isaddingrequest",{"_index":870,"title":{},"body":{"components/TaskComponent.html":{}}}],["isaddingtask",{"_index":1169,"title":{},"body":{"components/TasksComponent.html":{}}}],["isfetching",{"_index":288,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["isolating",{"_index":1008,"title":{},"body":{"components/TaskComponent.html":{}}}],["istesting",{"_index":289,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/NewTaskComponent.html":{},"components/SimpleFormComponent.html":{}}}],["items",{"_index":473,"title":{},"body":{"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/NewRequestComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["json.parse(localstorage.getitem('saved",{"_index":816,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["json.parse(tasks",{"_index":1151,"title":{},"body":{"injectables/TaskService.html":{}}}],["json.stringify(this.tasks",{"_index":1162,"title":{},"body":{"injectables/TaskService.html":{}}}],["json.stringify(value.email",{"_index":825,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["justify",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorModalComponent.html":{},"components/HeaderComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["karma",{"_index":1363,"title":{},"body":{"index.html":{}}}],["keyframes",{"_index":567,"title":{},"body":{"components/ModalComponent.html":{}}}],["knowledge",{"_index":466,"title":{},"body":{"components/HeaderComponent.html":{}}}],["l1",{"_index":1401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l2",{"_index":1403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l3",{"_index":1404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l4",{"_index":1405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l5",{"_index":1406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l6",{"_index":1408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l7",{"_index":1409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l8",{"_index":1410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lat",{"_index":685,"title":{},"body":{"interfaces/Place.html":{}}}],["lazy",{"_index":1006,"title":{},"body":{"components/TaskComponent.html":{}}}],["learn",{"_index":1077,"title":{},"body":{"components/TaskComponent.html":{}}}],["leave",{"_index":776,"title":{},"body":{"directives/SafeLinkDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["left",{"_index":482,"title":{},"body":{"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{}}}],["legacy",{"_index":472,"title":{},"body":{"components/HeaderComponent.html":{}}}],["legend",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"modules/ComponentsModule.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"modules/SharedModule.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{},"overview.html":{}}}],["less",{"_index":467,"title":{},"body":{"components/HeaderComponent.html":{}}}],["lesson",{"_index":69,"title":{"interfaces/Lesson.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Lesson.html":{},"components/LessonComponent.html":{},"coverage.html":{}}}],["lesson'},{'name",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{}}}],["lesson.component.html",{"_index":502,"title":{},"body":{"components/LessonComponent.html":{}}}],["lesson.component.scss",{"_index":501,"title":{},"body":{"components/LessonComponent.html":{}}}],["lesson.id",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["lesson.model",{"_index":516,"title":{},"body":{"components/LessonComponent.html":{}}}],["lesson.name",{"_index":521,"title":{},"body":{"components/LessonComponent.html":{}}}],["lessoncomponent",{"_index":152,"title":{"components/LessonComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"modules/ComponentsModule.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["lessonid",{"_index":609,"title":{},"body":{"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["lessonid)?.name",{"_index":1235,"title":{},"body":{"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["lessonname",{"_index":1179,"title":{},"body":{"components/TasksComponent.html":{}}}],["lessons",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["level",{"_index":469,"title":{},"body":{"components/HeaderComponent.html":{},"components/TaskComponent.html":{}}}],["linear",{"_index":476,"title":{},"body":{"components/HeaderComponent.html":{},"components/SimpleFormComponent.html":{}}}],["link",{"_index":678,"title":{},"body":{"components/NotFoundComponent.html":{},"components/TaskComponent.html":{}}}],["link.directive",{"_index":794,"title":{},"body":{"modules/SharedModule.html":{}}}],["link.directive.ts",{"_index":757,"title":{},"body":{"directives/SafeLinkDirective.html":{},"coverage.html":{}}}],["link.directive.ts:13",{"_index":765,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["link.directive.ts:9",{"_index":761,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["link/safe",{"_index":756,"title":{},"body":{"directives/SafeLinkDirective.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["list",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/PlacesComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"index.html":{}}}],["list__fallback",{"_index":351,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["literal",{"_index":687,"title":{},"body":{"interfaces/Place.html":{}}}],["loaded",{"_index":337,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/TaskComponent.html":{}}}],["loading",{"_index":347,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/TaskComponent.html":{}}}],["loadplacesservice",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadremotemodule",{"_index":312,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"miscellaneous/variables.html":{}}}],["local",{"_index":1331,"title":{},"body":{"index.html":{}}}],["localerror",{"_index":290,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["localstorage.getitem('tasks",{"_index":1149,"title":{},"body":{"injectables/TaskService.html":{}}}],["localstorage.setitem('saved",{"_index":824,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["localstorage.setitem('tasks",{"_index":1161,"title":{},"body":{"injectables/TaskService.html":{}}}],["logic",{"_index":319,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/TaskComponent.html":{}}}],["login",{"_index":817,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["logo.png",{"_index":1402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lon",{"_index":686,"title":{},"body":{"interfaces/Place.html":{}}}],["looks",{"_index":980,"title":{},"body":{"components/TaskComponent.html":{}}}],["main",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/NotFoundComponent.html":{}}}],["making",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["manages",{"_index":975,"title":{},"body":{"components/TaskComponent.html":{}}}],["managind",{"_index":1037,"title":{},"body":{"components/TaskComponent.html":{}}}],["managing",{"_index":1033,"title":{},"body":{"components/TaskComponent.html":{}}}],["manual",{"_index":1022,"title":{},"body":{"components/TaskComponent.html":{}}}],["manually",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["many",{"_index":1272,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["map",{"_index":907,"title":{},"body":{"components/TaskComponent.html":{}}}],["map((val",{"_index":914,"title":{},"body":{"components/TaskComponent.html":{}}}],["margin",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["marked",{"_index":985,"title":{},"body":{"components/TaskComponent.html":{}}}],["matching",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"modules/ComponentsModule.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Lesson.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"components/NotFoundComponent.html":{},"interfaces/Place.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"interceptors/RemoteA16Interceptor.html":{},"directives/SafeLinkDirective.html":{},"modules/SharedModule.html":{},"components/SimpleFormComponent.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{},"pipes/TemperaturePipe.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":411,"title":{},"body":{"components/ErrorModalComponent.html":{},"components/HeaderComponent.html":{},"components/NewRequestComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TasksComponent.html":{}}}],["mecanism",{"_index":1271,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["mechanism",{"_index":1413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["media",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/NewTaskComponent.html":{},"components/TasksComponent.html":{}}}],["message",{"_index":403,"title":{},"body":{"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{}}}],["met",{"_index":1101,"title":{},"body":{"components/TaskComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["method",{"_index":274,"title":{},"body":{"directives/AuthDirective.html":{},"injectables/TaskService.html":{}}}],["methods",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{},"interceptors/RemoteA16Interceptor.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["mf",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["mfangular16",{"_index":1323,"title":{},"body":{"index.html":{}}}],["min",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewTaskComponent.html":{},"components/TasksComponent.html":{}}}],["minmax(18rem",{"_index":706,"title":{},"body":{"components/PlacesComponent.html":{}}}],["miscellaneous",{"_index":1386,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["modal",{"_index":399,"title":{},"body":{"components/ErrorModalComponent.html":{},"components/ModalComponent.html":{}}}],["modal'},{'name",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{}}}],["modal.component",{"_index":395,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["modal.component.html",{"_index":401,"title":{},"body":{"components/ErrorModalComponent.html":{},"components/ModalComponent.html":{}}}],["modal.component.scss",{"_index":400,"title":{},"body":{"components/ErrorModalComponent.html":{},"components/ModalComponent.html":{}}}],["modal.component.ts",{"_index":398,"title":{},"body":{"components/ErrorModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:10",{"_index":406,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["modal.component.ts:11",{"_index":405,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["modal.component.ts:15",{"_index":407,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["modalcomponent",{"_index":154,"title":{"components/ModalComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"modules/ComponentsModule.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["model",{"_index":311,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/PlacesComponent.html":{},"miscellaneous/variables.html":{}}}],["model.ts",{"_index":683,"title":{},"body":{"interfaces/Place.html":{},"coverage.html":{}}}],["modify",{"_index":952,"title":{},"body":{"components/TaskComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["modifying",{"_index":958,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":182,"title":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"components/AvailablePlacesComponent.html":{},"modules/ComponentsModule.html":{},"components/FavoritePlacesComponent.html":{},"modules/SharedModule.html":{},"components/TaskComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":184,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"modules/SharedModule.html":{},"components/TaskComponent.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"components/TaskComponent.html":{},"index.html":{}}}],["mouseevent",{"_index":764,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["multi",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["multiple",{"_index":1002,"title":{},"body":{"components/TaskComponent.html":{}}}],["name",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Lesson.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"interceptors/RemoteA16Interceptor.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{},"pipes/TemperaturePipe.html":{},"miscellaneous/variables.html":{}}}],["named",{"_index":969,"title":{},"body":{"components/TaskComponent.html":{}}}],["namefor",{"_index":1347,"title":{},"body":{"index.html":{}}}],["navigate",{"_index":1335,"title":{},"body":{"index.html":{}}}],["necessary",{"_index":983,"title":{},"body":{"components/TaskComponent.html":{}}}],["need",{"_index":1432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["needed",{"_index":908,"title":{},"body":{"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["needs",{"_index":978,"title":{},"body":{"components/TaskComponent.html":{},"index.html":{}}}],["new",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{},"coverage.html":{},"index.html":{}}}],["newreq",{"_index":749,"title":{},"body":{"interceptors/RemoteA16Interceptor.html":{}}}],["newrequestcomponent",{"_index":155,"title":{"components/NewRequestComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"modules/ComponentsModule.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["newstatus",{"_index":928,"title":{},"body":{"components/TaskComponent.html":{},"injectables/TaskService.html":{}}}],["newtaskcomponent",{"_index":158,"title":{"components/NewTaskComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"modules/ComponentsModule.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["newtaskdata",{"_index":658,"title":{"interfaces/NewTaskData.html":{}},"body":{"interfaces/NewTaskData.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["next",{"_index":331,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"interceptors/RemoteA16Interceptor.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{}}}],["next.handle(newreq",{"_index":754,"title":{},"body":{"interceptors/RemoteA16Interceptor.html":{}}}],["ng",{"_index":853,"title":{},"body":{"components/SimpleFormComponent.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":540,"title":{},"body":{"components/ModalComponent.html":{},"components/SimpleFormComponent.html":{}}}],["ngform",{"_index":803,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["ngmodel",{"_index":1447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngmodel)]=\"username",{"_index":951,"title":{},"body":{"components/TaskComponent.html":{}}}],["ngmodule",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"modules/SharedModule.html":{}}}],["ngondestroy",{"_index":294,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["ngoninit",{"_index":245,"title":{},"body":{"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["ngsubmit",{"_index":1446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["none",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorModalComponent.html":{},"components/LessonComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["normal",{"_index":536,"title":{},"body":{"components/LessonComponent.html":{},"components/PlacesComponent.html":{},"components/TaskComponent.html":{}}}],["notfoundcomponent",{"_index":160,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"modules/ComponentsModule.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["null",{"_index":818,"title":{},"body":{"components/SimpleFormComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["number",{"_index":688,"title":{},"body":{"interfaces/Place.html":{},"components/PlacesComponent.html":{},"components/TaskComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["object",{"_index":487,"title":{},"body":{"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/PlacesComponent.html":{},"components/TaskComponent.html":{}}}],["objects",{"_index":1431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":443,"title":{},"body":{"injectables/ErrorService.html":{},"interceptors/RemoteA16Interceptor.html":{},"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["observable((subscriber",{"_index":891,"title":{},"body":{"components/TaskComponent.html":{}}}],["observables",{"_index":1030,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["obtain",{"_index":1103,"title":{},"body":{"components/TaskComponent.html":{}}}],["obtains",{"_index":1056,"title":{},"body":{"components/TaskComponent.html":{}}}],["okay",{"_index":410,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["oncancel",{"_index":577,"title":{},"body":{"components/NewRequestComponent.html":{}}}],["onchangetasksfilter",{"_index":1173,"title":{},"body":{"components/TasksComponent.html":{}}}],["onchangetasksfilter(filter",{"_index":1185,"title":{},"body":{"components/TasksComponent.html":{}}}],["onchangetaskstatus",{"_index":875,"title":{},"body":{"components/TaskComponent.html":{}}}],["onchangetaskstatus(taskid",{"_index":885,"title":{},"body":{"components/TaskComponent.html":{}}}],["onclearerror",{"_index":402,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["oncloseaddrequest",{"_index":876,"title":{},"body":{"components/TaskComponent.html":{}}}],["oncloseaddtask",{"_index":1174,"title":{},"body":{"components/TasksComponent.html":{}}}],["oncompletetask",{"_index":877,"title":{},"body":{"components/TaskComponent.html":{}}}],["onconfirmleavepage",{"_index":758,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["onconfirmleavepage($event",{"_index":769,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["onconfirmleavepage(event",{"_index":763,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["ondestroy",{"_index":285,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{}}}],["one",{"_index":940,"title":{},"body":{"components/TaskComponent.html":{},"index.html":{}}}],["oninit",{"_index":867,"title":{},"body":{"components/TaskComponent.html":{}}}],["onremoveplace",{"_index":450,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["onremoveplace(selectedplace",{"_index":454,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["onselectlesson",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/LessonComponent.html":{}}}],["onselectlesson(id",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["onselectplace",{"_index":295,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/PlacesComponent.html":{}}}],["onselectplace(place",{"_index":696,"title":{},"body":{"components/PlacesComponent.html":{}}}],["onselectplace(selectedplace",{"_index":300,"title":{},"body":{"components/AvailablePlacesComponent.html":{}}}],["onsortchange",{"_index":1175,"title":{},"body":{"components/TasksComponent.html":{}}}],["onsortchange(sort",{"_index":1189,"title":{},"body":{"components/TasksComponent.html":{}}}],["onstartaddrequest",{"_index":878,"title":{},"body":{"components/TaskComponent.html":{}}}],["onstartaddtask",{"_index":1176,"title":{},"body":{"components/TasksComponent.html":{}}}],["onsubmit",{"_index":608,"title":{},"body":{"components/NewTaskComponent.html":{},"components/SimpleFormComponent.html":{}}}],["onsubmit(formdata",{"_index":802,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["ontaskchanged",{"_index":1177,"title":{},"body":{"components/TasksComponent.html":{}}}],["opacity",{"_index":568,"title":{},"body":{"components/ModalComponent.html":{},"components/SimpleFormComponent.html":{}}}],["open",{"_index":632,"title":{},"body":{"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["optimizes",{"_index":1357,"title":{},"body":{"index.html":{}}}],["optional",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{},"interceptors/RemoteA16Interceptor.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["original",{"_index":1426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["out",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"components/ModalComponent.html":{},"components/PlacesComponent.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["output",{"_index":515,"title":{},"body":{"components/LessonComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{},"components/TaskComponent.html":{}}}],["outputs",{"_index":504,"title":{},"body":{"components/LessonComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{},"components/TaskComponent.html":{}}}],["outputtemp",{"_index":1277,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["outputtemp.tofixed(2",{"_index":1283,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["outputtype",{"_index":1264,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["overflow",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/TasksComponent.html":{}}}],["overview",{"_index":1377,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":861,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["package",{"_index":1311,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["page",{"_index":669,"title":{},"body":{"components/NotFoundComponent.html":{},"components/TaskComponent.html":{},"index.html":{}}}],["page.guard.ts",{"_index":1306,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["page/can",{"_index":1305,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["parameters",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{},"interceptors/RemoteA16Interceptor.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["params.get('lessonid",{"_index":1206,"title":{},"body":{"components/TasksComponent.html":{}}}],["params['lessonid",{"_index":1212,"title":{},"body":{"components/TasksComponent.html":{}}}],["parentparams",{"_index":621,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["parentparams?.get('lessonid",{"_index":623,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["parsefloat(value",{"_index":1276,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["partially",{"_index":1072,"title":{},"body":{"components/TaskComponent.html":{}}}],["password",{"_index":822,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["patch",{"_index":1071,"title":{},"body":{"components/TaskComponent.html":{}}}],["pattern",{"_index":1429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["performance",{"_index":1358,"title":{},"body":{"index.html":{}}}],["permissions",{"_index":1093,"title":{},"body":{"components/TaskComponent.html":{}}}],["personal",{"_index":584,"title":{},"body":{"components/NewRequestComponent.html":{}}}],["picker",{"_index":588,"title":{},"body":{"components/NewRequestComponent.html":{}}}],["pipe",{"_index":909,"title":{"pipes/TemperaturePipe.html":{}},"body":{"components/TaskComponent.html":{},"pipes/TemperaturePipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipes",{"_index":1257,"title":{},"body":{"pipes/TemperaturePipe.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["pipes/temperature/temperature.pipe",{"_index":792,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipetransform",{"_index":1267,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["place",{"_index":301,"title":{"interfaces/Place.html":{}},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/NewRequestComponent.html":{},"interfaces/Place.html":{},"components/PlacesComponent.html":{},"coverage.html":{}}}],["place.id",{"_index":701,"title":{},"body":{"components/PlacesComponent.html":{}}}],["place.title",{"_index":702,"title":{},"body":{"components/PlacesComponent.html":{}}}],["placepicker",{"_index":582,"title":{},"body":{"components/NewRequestComponent.html":{}}}],["places",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{}}}],["places'},{'name",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{}}}],["places.component",{"_index":388,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["places.component.html",{"_index":287,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/PlacesComponent.html":{}}}],["places.component.scss",{"_index":286,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/PlacesComponent.html":{}}}],["places.component.ts",{"_index":283,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"coverage.html":{}}}],["places.component.ts:13",{"_index":310,"title":{},"body":{"components/AvailablePlacesComponent.html":{}}}],["places.component.ts:14",{"_index":305,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["places.component.ts:15",{"_index":307,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["places.component.ts:16",{"_index":306,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["places.component.ts:17",{"_index":456,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["places.component.ts:18",{"_index":309,"title":{},"body":{"components/AvailablePlacesComponent.html":{}}}],["places.component.ts:19",{"_index":297,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["places.component.ts:20",{"_index":451,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["places.component.ts:23",{"_index":299,"title":{},"body":{"components/AvailablePlacesComponent.html":{}}}],["places.component.ts:24",{"_index":453,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["places.component.ts:48",{"_index":298,"title":{},"body":{"components/AvailablePlacesComponent.html":{}}}],["places.component.ts:52",{"_index":302,"title":{},"body":{"components/AvailablePlacesComponent.html":{}}}],["places.component.ts:53",{"_index":452,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["places.component.ts:57",{"_index":455,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["places/available",{"_index":282,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"modules/ComponentsModule.html":{},"coverage.html":{}}}],["places/favorite",{"_index":390,"title":{},"body":{"modules/ComponentsModule.html":{},"components/FavoritePlacesComponent.html":{},"coverage.html":{}}}],["placescomponent",{"_index":162,"title":{"components/PlacesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"modules/ComponentsModule.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["placescontainercomponent",{"_index":163,"title":{"components/PlacesContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"modules/ComponentsModule.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["placesservice",{"_index":291,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"miscellaneous/variables.html":{}}}],["placesserviceclass",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["platform",{"_index":997,"title":{},"body":{"components/TaskComponent.html":{}}}],["please",{"_index":345,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/SimpleFormComponent.html":{}}}],["pointer",{"_index":420,"title":{},"body":{"components/ErrorModalComponent.html":{},"components/LessonComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["position",{"_index":564,"title":{},"body":{"components/ModalComponent.html":{},"components/PlacesComponent.html":{}}}],["post",{"_index":1060,"title":{},"body":{"components/TaskComponent.html":{}}}],["powerful",{"_index":1344,"title":{},"body":{"index.html":{}}}],["practical",{"_index":1444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prevents",{"_index":1099,"title":{},"body":{"components/TaskComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["private",{"_index":244,"title":{},"body":{"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/ModalComponent.html":{},"components/NewTaskComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["production",{"_index":1356,"title":{},"body":{"index.html":{}}}],["products",{"_index":1059,"title":{},"body":{"components/TaskComponent.html":{}}}],["progress",{"_index":930,"title":{},"body":{"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["project",{"_index":1324,"title":{},"body":{"index.html":{}}}],["properties",{"_index":22,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"interfaces/Lesson.html":{},"components/ModalComponent.html":{},"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"interfaces/Place.html":{},"components/SimpleFormComponent.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"properties.html":{}}}],["property",{"_index":945,"title":{},"body":{"components/TaskComponent.html":{}}}],["protecting",{"_index":1088,"title":{},"body":{"components/TaskComponent.html":{}}}],["provide",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":446,"title":{},"body":{"injectables/ErrorService.html":{},"components/TaskComponent.html":{}}}],["providers",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"modules/SharedModule.html":{},"components/TaskComponent.html":{},"overview.html":{}}}],["providers.if",{"_index":977,"title":{},"body":{"components/TaskComponent.html":{}}}],["providers.ts",{"_index":1290,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["pure",{"_index":1259,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["put",{"_index":1065,"title":{},"body":{"components/TaskComponent.html":{}}}],["qparams['sort",{"_index":1215,"title":{},"body":{"components/TasksComponent.html":{}}}],["queryparamssub",{"_index":1170,"title":{},"body":{"components/TasksComponent.html":{}}}],["radius",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["raleway",{"_index":352,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{}}}],["reactive",{"_index":1411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["read",{"_index":546,"title":{},"body":{"components/ModalComponent.html":{},"components/TaskComponent.html":{}}}],["receive",{"_index":1046,"title":{},"body":{"components/TaskComponent.html":{}}}],["reference",{"_index":1378,"title":{},"body":{"index.html":{}}}],["references",{"_index":1376,"title":{},"body":{"index.html":{}}}],["registering",{"_index":1063,"title":{},"body":{"components/TaskComponent.html":{}}}],["registers",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["regular",{"_index":910,"title":{},"body":{"components/TaskComponent.html":{}}}],["regularinterval",{"_index":871,"title":{},"body":{"components/TaskComponent.html":{}}}],["regularsubscription",{"_index":872,"title":{},"body":{"components/TaskComponent.html":{}}}],["relative",{"_index":708,"title":{},"body":{"components/PlacesComponent.html":{}}}],["relativeto",{"_index":634,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["reload",{"_index":1338,"title":{},"body":{"index.html":{}}}],["remote",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"miscellaneous/variables.html":{}}}],["remote.placesservice",{"_index":1451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["remotea16interceptor",{"_index":196,"title":{"interceptors/RemoteA16Interceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/RemoteA16Interceptor.html":{},"coverage.html":{},"overview.html":{}}}],["remoteentry",{"_index":324,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"miscellaneous/variables.html":{}}}],["removetask",{"_index":1127,"title":{},"body":{"injectables/TaskService.html":{}}}],["removetask(id",{"_index":1136,"title":{},"body":{"injectables/TaskService.html":{}}}],["removing",{"_index":461,"title":{},"body":{"components/FavoritePlacesComponent.html":{},"components/TaskComponent.html":{}}}],["rendercondition",{"_index":263,"title":{},"body":{"directives/AuthDirective.html":{}}}],["rendering",{"_index":1450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repeat(auto",{"_index":704,"title":{},"body":{"components/PlacesComponent.html":{}}}],["replaces",{"_index":1067,"title":{},"body":{"components/TaskComponent.html":{}}}],["req",{"_index":744,"title":{},"body":{"interceptors/RemoteA16Interceptor.html":{}}}],["req.clone",{"_index":751,"title":{},"body":{"interceptors/RemoteA16Interceptor.html":{}}}],["req.url",{"_index":752,"title":{},"body":{"interceptors/RemoteA16Interceptor.html":{}}}],["req.url.startswith('http",{"_index":750,"title":{},"body":{"interceptors/RemoteA16Interceptor.html":{}}}],["request",{"_index":574,"title":{},"body":{"components/NewRequestComponent.html":{},"components/TaskComponent.html":{}}}],["request'},{'name",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{}}}],["request.component",{"_index":387,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["request.component.html",{"_index":576,"title":{},"body":{"components/NewRequestComponent.html":{}}}],["request.component.scss",{"_index":575,"title":{},"body":{"components/NewRequestComponent.html":{}}}],["request.component.ts",{"_index":573,"title":{},"body":{"components/NewRequestComponent.html":{},"coverage.html":{}}}],["request.component.ts:11",{"_index":580,"title":{},"body":{"components/NewRequestComponent.html":{}}}],["request.component.ts:9",{"_index":579,"title":{},"body":{"components/NewRequestComponent.html":{}}}],["request/available",{"_index":281,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"modules/ComponentsModule.html":{},"coverage.html":{}}}],["request/favorite",{"_index":389,"title":{},"body":{"modules/ComponentsModule.html":{},"components/FavoritePlacesComponent.html":{},"coverage.html":{}}}],["request/new",{"_index":386,"title":{},"body":{"modules/ComponentsModule.html":{},"components/NewRequestComponent.html":{},"coverage.html":{}}}],["request/place",{"_index":682,"title":{},"body":{"interfaces/Place.html":{},"coverage.html":{}}}],["request/places",{"_index":392,"title":{},"body":{"modules/ComponentsModule.html":{},"components/PlacesContainerComponent.html":{},"coverage.html":{}}}],["request/places/places.component",{"_index":391,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["request/places/places.component.ts",{"_index":691,"title":{},"body":{"components/PlacesComponent.html":{},"coverage.html":{}}}],["request/places/places.component.ts:10",{"_index":694,"title":{},"body":{"components/PlacesComponent.html":{}}}],["request/places/places.component.ts:11",{"_index":695,"title":{},"body":{"components/PlacesComponent.html":{}}}],["request/places/places.component.ts:13",{"_index":697,"title":{},"body":{"components/PlacesComponent.html":{}}}],["request/places/places.component.ts:17",{"_index":699,"title":{},"body":{"components/PlacesComponent.html":{}}}],["requested",{"_index":671,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["requests",{"_index":1040,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["required",{"_index":506,"title":{},"body":{"components/LessonComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["resolve",{"_index":1012,"title":{},"body":{"components/TaskComponent.html":{}}}],["resolvefn",{"_index":1203,"title":{},"body":{"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["resolvelessonname",{"_index":1231,"title":{},"body":{"components/TasksComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resolvelessonname(activatedroute",{"_index":1237,"title":{},"body":{"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["resolvetitle",{"_index":1236,"title":{},"body":{"components/TasksComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resource",{"_index":1069,"title":{},"body":{"components/TaskComponent.html":{}}}],["resources",{"_index":1062,"title":{},"body":{"components/TaskComponent.html":{},"index.html":{}}}],["rest",{"_index":1048,"title":{},"body":{"components/TaskComponent.html":{}}}],["results",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"modules/ComponentsModule.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Lesson.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"components/NotFoundComponent.html":{},"interfaces/Place.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"interceptors/RemoteA16Interceptor.html":{},"directives/SafeLinkDirective.html":{},"modules/SharedModule.html":{},"components/SimpleFormComponent.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{},"pipes/TemperaturePipe.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieving",{"_index":1047,"title":{},"body":{"components/TaskComponent.html":{}}}],["return",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/LessonComponent.html":{},"components/PlacesComponent.html":{},"interceptors/RemoteA16Interceptor.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{},"interceptors/RemoteA16Interceptor.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["rgb(228",{"_index":839,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["rgba(0",{"_index":362,"title":{},"body":{"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{}}}],["rgba(255",{"_index":717,"title":{},"body":{"components/PlacesComponent.html":{}}}],["right",{"_index":480,"title":{},"body":{"components/HeaderComponent.html":{},"components/PlacesComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{}}}],["rotate",{"_index":721,"title":{},"body":{"components/PlacesComponent.html":{}}}],["rotate(5deg",{"_index":719,"title":{},"body":{"components/PlacesComponent.html":{}}}],["route",{"_index":611,"title":{},"body":{"components/NewTaskComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["routeparam",{"_index":772,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["router",{"_index":613,"title":{},"body":{"components/NewTaskComponent.html":{},"components/TaskComponent.html":{}}}],["routermodule",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["routermodule.forchild(routes",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["routerstate",{"_index":1232,"title":{},"body":{"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["routerstatesnapshot",{"_index":1204,"title":{},"body":{"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["routes",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["routing",{"_index":1440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["row",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{}}}],["run",{"_index":1332,"title":{},"body":{"index.html":{}}}],["runininjectioncontext",{"_index":258,"title":{},"body":{"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["runininjectioncontext(this.injector",{"_index":275,"title":{},"body":{"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["runner",{"_index":1364,"title":{},"body":{"index.html":{}}}],["running",{"_index":1334,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":316,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"interceptors/RemoteA16Interceptor.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["rxjs.png",{"_index":1407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["s",{"_index":1238,"title":{},"body":{"components/TasksComponent.html":{}}}],["safelinkdirective",{"_index":177,"title":{"directives/SafeLinkDirective.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"modules/SharedModule.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["same",{"_index":1004,"title":{},"body":{"components/TaskComponent.html":{}}}],["sans",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{}}}],["savedemail",{"_index":815,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["savetasks",{"_index":1128,"title":{},"body":{"injectables/TaskService.html":{}}}],["saving",{"_index":1052,"title":{},"body":{"components/TaskComponent.html":{}}}],["scaffolding",{"_index":1342,"title":{},"body":{"index.html":{}}}],["schematics",{"_index":1348,"title":{},"body":{"index.html":{}}}],["scope",{"_index":991,"title":{},"body":{"components/TaskComponent.html":{}}}],["section",{"_index":732,"title":{},"body":{"components/PlacesContainerComponent.html":{},"components/TasksComponent.html":{}}}],["section__menu",{"_index":1255,"title":{},"body":{"components/TasksComponent.html":{}}}],["section__title",{"_index":1254,"title":{},"body":{"components/TasksComponent.html":{}}}],["security",{"_index":1269,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["see",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["select",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/LessonComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["selected",{"_index":503,"title":{},"body":{"components/LessonComponent.html":{}}}],["selectedfilter",{"_index":1171,"title":{},"body":{"components/TasksComponent.html":{}}}],["selectedlesson",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["selectedlessonid",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["selectedplace",{"_index":303,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["selectedsort",{"_index":1172,"title":{},"body":{"components/TasksComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{}}}],["selectplace",{"_index":693,"title":{},"body":{"components/PlacesComponent.html":{}}}],["self",{"_index":261,"title":{},"body":{"directives/AuthDirective.html":{},"directives/SafeLinkDirective.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["send",{"_index":1045,"title":{},"body":{"components/TaskComponent.html":{}}}],["sends",{"_index":1061,"title":{},"body":{"components/TaskComponent.html":{}}}],["senior",{"_index":468,"title":{},"body":{"components/HeaderComponent.html":{}}}],["serif",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{}}}],["serveonce",{"_index":1333,"title":{},"body":{"index.html":{}}}],["server",{"_index":1057,"title":{},"body":{"components/TaskComponent.html":{},"index.html":{}}}],["servers",{"_index":1044,"title":{},"body":{"components/TaskComponent.html":{}}}],["service",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/TaskComponent.html":{}}}],["service/error.service",{"_index":408,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["services",{"_index":1009,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["services/tasks/tasks.service",{"_index":259,"title":{},"body":{"directives/AuthDirective.html":{},"components/NewTaskComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["setinterval",{"_index":892,"title":{},"body":{"components/TaskComponent.html":{}}}],["setvalue",{"_index":813,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["shadow",{"_index":360,"title":{},"body":{"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{}}}],["shared/card/card.component",{"_index":373,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["shared/modal",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"modules/ComponentsModule.html":{},"components/FavoritePlacesComponent.html":{}}}],["shared/shared.module",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{}}}],["sharedmodule",{"_index":195,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["showerror",{"_index":437,"title":{},"body":{"injectables/ErrorService.html":{}}}],["showerror(message",{"_index":439,"title":{},"body":{"injectables/ErrorService.html":{}}}],["signals",{"_index":1036,"title":{},"body":{"components/TaskComponent.html":{}}}],["simple",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{}}}],["simpleformcomponent",{"_index":166,"title":{"components/SimpleFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"modules/ComponentsModule.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["singleton",{"_index":995,"title":{},"body":{"components/TaskComponent.html":{}}}],["site",{"_index":966,"title":{},"body":{"components/TaskComponent.html":{}}}],["size",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["skipself",{"_index":1010,"title":{},"body":{"components/TaskComponent.html":{}}}],["slide",{"_index":557,"title":{},"body":{"components/ModalComponent.html":{},"components/PlacesComponent.html":{}}}],["slowcurstominterval",{"_index":873,"title":{},"body":{"components/TaskComponent.html":{}}}],["solid",{"_index":647,"title":{},"body":{"components/NewTaskComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{}}}],["sorry",{"_index":668,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["sort",{"_index":1191,"title":{},"body":{"components/TasksComponent.html":{}}}],["sort=${this.selectedsort",{"_index":1219,"title":{},"body":{"components/TasksComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"modules/ComponentsModule.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Lesson.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"components/NotFoundComponent.html":{},"interfaces/Place.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"interceptors/RemoteA16Interceptor.html":{},"directives/SafeLinkDirective.html":{},"modules/SharedModule.html":{},"components/SimpleFormComponent.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{},"pipes/TemperaturePipe.html":{},"index.html":{}}}],["space",{"_index":593,"title":{},"body":{"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["span",{"_index":1109,"title":{},"body":{"components/TaskComponent.html":{}}}],["special",{"_index":1420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["speed",{"_index":1359,"title":{},"body":{"index.html":{}}}],["src",{"_index":689,"title":{},"body":{"interfaces/Place.html":{}}}],["src/.../can",{"_index":1390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../dummy",{"_index":1391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../remote",{"_index":1392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../task.model.ts",{"_index":1388,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../tasks.component.ts",{"_index":1393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:10",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:11",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:12",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/remote",{"_index":1289,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/assets/dummy",{"_index":1292,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/components/components.module.ts",{"_index":369,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["src/components/header/header.component.ts",{"_index":462,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/components/http",{"_index":280,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/NewRequestComponent.html":{},"interfaces/Place.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"coverage.html":{}}}],["src/components/lesson/lesson.component.ts",{"_index":500,"title":{},"body":{"components/LessonComponent.html":{},"coverage.html":{}}}],["src/components/lesson/lesson.component.ts:11",{"_index":507,"title":{},"body":{"components/LessonComponent.html":{}}}],["src/components/lesson/lesson.component.ts:12",{"_index":509,"title":{},"body":{"components/LessonComponent.html":{}}}],["src/components/lesson/lesson.component.ts:13",{"_index":511,"title":{},"body":{"components/LessonComponent.html":{}}}],["src/components/lesson/lesson.component.ts:15",{"_index":514,"title":{},"body":{"components/LessonComponent.html":{}}}],["src/components/lesson/lesson.component.ts:19",{"_index":512,"title":{},"body":{"components/LessonComponent.html":{}}}],["src/components/lesson/lesson.model.ts",{"_index":498,"title":{},"body":{"interfaces/Lesson.html":{},"coverage.html":{}}}],["src/components/new",{"_index":600,"title":{},"body":{"components/NewTaskComponent.html":{},"coverage.html":{}}}],["src/components/not",{"_index":664,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["src/components/task/task.component.ts",{"_index":866,"title":{},"body":{"components/TaskComponent.html":{},"coverage.html":{}}}],["src/components/task/task.component.ts:11",{"_index":881,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:12",{"_index":882,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:14",{"_index":897,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:15",{"_index":902,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:18",{"_index":898,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:19",{"_index":899,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:21",{"_index":900,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:22",{"_index":896,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:23",{"_index":895,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:27",{"_index":880,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:31",{"_index":884,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:43",{"_index":883,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:48",{"_index":904,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:60",{"_index":886,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:80",{"_index":889,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:85",{"_index":890,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.component.ts:86",{"_index":888,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/components/task/task.model.ts",{"_index":659,"title":{},"body":{"interfaces/NewTaskData.html":{},"interfaces/Task.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/components/tasks/tasks",{"_index":1256,"title":{},"body":{"components/TasksContainerComponent.html":{},"coverage.html":{}}}],["src/components/tasks/tasks.component.ts",{"_index":1165,"title":{},"body":{"components/TasksComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/components/tasks/tasks.component.ts:13",{"_index":1181,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/components/tasks/tasks.component.ts:14",{"_index":1182,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/components/tasks/tasks.component.ts:16",{"_index":1196,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/components/tasks/tasks.component.ts:17",{"_index":1195,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/components/tasks/tasks.component.ts:18",{"_index":1197,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/components/tasks/tasks.component.ts:19",{"_index":1200,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/components/tasks/tasks.component.ts:20",{"_index":1180,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/components/tasks/tasks.component.ts:24",{"_index":1184,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/components/tasks/tasks.component.ts:41",{"_index":1186,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/components/tasks/tasks.component.ts:45",{"_index":1190,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/components/tasks/tasks.component.ts:50",{"_index":1193,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/components/tasks/tasks.component.ts:53",{"_index":1194,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/components/tasks/tasks.component.ts:75",{"_index":1183,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/components/tasks/tasks.component.ts:79",{"_index":1192,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/components/tasks/tasks.component.ts:82",{"_index":1188,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/components/template",{"_index":796,"title":{},"body":{"components/SimpleFormComponent.html":{},"coverage.html":{}}}],["src/directives/auth/auth.directive.ts",{"_index":242,"title":{},"body":{"directives/AuthDirective.html":{},"coverage.html":{}}}],["src/directives/auth/auth.directive.ts:13",{"_index":251,"title":{},"body":{"directives/AuthDirective.html":{}}}],["src/directives/auth/auth.directive.ts:20",{"_index":254,"title":{},"body":{"directives/AuthDirective.html":{}}}],["src/directives/auth/auth.directive.ts:9",{"_index":253,"title":{},"body":{"directives/AuthDirective.html":{}}}],["src/directives/safe",{"_index":755,"title":{},"body":{"directives/SafeLinkDirective.html":{},"coverage.html":{}}}],["src/guards/can",{"_index":1303,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/interceptors/remote",{"_index":737,"title":{},"body":{"interceptors/RemoteA16Interceptor.html":{},"coverage.html":{}}}],["src/pipes/temperature/temperature.pipe.ts",{"_index":1258,"title":{},"body":{"pipes/TemperaturePipe.html":{},"coverage.html":{}}}],["src/pipes/temperature/temperature.pipe.ts:8",{"_index":1265,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["src/services/tasks/tasks.service.ts",{"_index":1123,"title":{},"body":{"injectables/TaskService.html":{},"coverage.html":{}}}],["src/services/tasks/tasks.service.ts:18",{"_index":1135,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/services/tasks/tasks.service.ts:21",{"_index":1133,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/services/tasks/tasks.service.ts:32",{"_index":1137,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/services/tasks/tasks.service.ts:36",{"_index":1143,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/services/tasks/tasks.service.ts:41",{"_index":1138,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/services/tasks/tasks.service.ts:46",{"_index":1140,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/services/tasks/tasks.service.ts:6",{"_index":1146,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/services/tasks/tasks.service.ts:8",{"_index":1131,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/shared/card/card.component.ts",{"_index":354,"title":{},"body":{"components/CardComponent.html":{},"coverage.html":{}}}],["src/shared/modal",{"_index":397,"title":{},"body":{"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/ModalComponent.html":{},"coverage.html":{}}}],["src/shared/shared.module.ts",{"_index":787,"title":{},"body":{"modules/SharedModule.html":{}}}],["src]=\"imageurl",{"_index":947,"title":{},"body":{"components/TaskComponent.html":{}}}],["start",{"_index":843,"title":{},"body":{"components/SimpleFormComponent.html":{},"index.html":{}}}],["started",{"_index":1322,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1287,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":545,"title":{},"body":{"components/ModalComponent.html":{},"components/TaskComponent.html":{}}}],["status",{"_index":631,"title":{},"body":{"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":1352,"title":{},"body":{"index.html":{}}}],["stream",{"_index":1031,"title":{},"body":{"components/TaskComponent.html":{}}}],["streamed",{"_index":1035,"title":{},"body":{"components/TaskComponent.html":{}}}],["string",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"interfaces/Lesson.html":{},"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"interfaces/Place.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["structural",{"_index":266,"title":{},"body":{"directives/AuthDirective.html":{},"components/TaskComponent.html":{}}}],["structure",{"_index":265,"title":{},"body":{"directives/AuthDirective.html":{},"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/PlacesComponent.html":{},"components/TasksComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{}}}],["styleurls",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{}}}],["sub",{"_index":340,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["submit",{"_index":653,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["submitting",{"_index":1050,"title":{},"body":{"components/TaskComponent.html":{}}}],["subscribe",{"_index":916,"title":{},"body":{"components/TaskComponent.html":{}}}],["subscriber.next({message",{"_index":893,"title":{},"body":{"components/TaskComponent.html":{}}}],["subscription",{"_index":292,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["such",{"_index":957,"title":{},"body":{"components/TaskComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["suits",{"_index":1372,"title":{},"body":{"index.html":{}}}],["summary",{"_index":627,"title":{},"body":{"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":1379,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":1399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["svg",{"_index":1380,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":923,"title":{},"body":{"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["symbol",{"_index":1280,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["synchronizing",{"_index":1414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t.status",{"_index":1223,"title":{},"body":{"components/TasksComponent.html":{}}}],["t1",{"_index":1412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t2",{"_index":1419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t3",{"_index":1421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t4",{"_index":1427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t5",{"_index":1435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t6",{"_index":1438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t7",{"_index":1439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t8",{"_index":1443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":1310,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1309,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":602,"title":{"interfaces/Task.html":{}},"body":{"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["task'},{'name",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{}}}],["task.component",{"_index":377,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["task.component.html",{"_index":604,"title":{},"body":{"components/NewTaskComponent.html":{},"components/TaskComponent.html":{}}}],["task.component.scss",{"_index":603,"title":{},"body":{"components/NewTaskComponent.html":{},"components/TaskComponent.html":{}}}],["task.component.ts",{"_index":601,"title":{},"body":{"components/NewTaskComponent.html":{},"coverage.html":{}}}],["task.component.ts:10",{"_index":615,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["task.component.ts:11",{"_index":616,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["task.component.ts:12",{"_index":620,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["task.component.ts:13",{"_index":619,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["task.component.ts:14",{"_index":618,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["task.component.ts:15",{"_index":614,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["task.component.ts:27",{"_index":617,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["task.date",{"_index":1156,"title":{},"body":{"injectables/TaskService.html":{}}}],["task.duedate",{"_index":937,"title":{},"body":{"components/TaskComponent.html":{}}}],["task.id",{"_index":1159,"title":{},"body":{"injectables/TaskService.html":{}}}],["task.lessonid",{"_index":1153,"title":{},"body":{"injectables/TaskService.html":{}}}],["task.model",{"_index":905,"title":{},"body":{"components/TaskComponent.html":{}}}],["task.status",{"_index":1157,"title":{},"body":{"injectables/TaskService.html":{}}}],["task.summary",{"_index":939,"title":{},"body":{"components/TaskComponent.html":{},"injectables/TaskService.html":{}}}],["task.title",{"_index":935,"title":{},"body":{"components/TaskComponent.html":{},"injectables/TaskService.html":{}}}],["task/new",{"_index":376,"title":{},"body":{"modules/ComponentsModule.html":{},"components/NewTaskComponent.html":{},"coverage.html":{}}}],["task/task.model",{"_index":1201,"title":{},"body":{"components/TasksComponent.html":{}}}],["taskauthentication",{"_index":1129,"title":{},"body":{"injectables/TaskService.html":{}}}],["taskauthentication(taskcode",{"_index":1139,"title":{},"body":{"injectables/TaskService.html":{}}}],["taskcode",{"_index":1141,"title":{},"body":{"injectables/TaskService.html":{}}}],["taskcomponent",{"_index":169,"title":{"components/TaskComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"modules/ComponentsModule.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["taskid",{"_index":887,"title":{},"body":{"components/TaskComponent.html":{},"injectables/TaskService.html":{}}}],["tasks",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["tasks'},{'name",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{}}}],["tasks.component.html",{"_index":1167,"title":{},"body":{"components/TasksComponent.html":{}}}],["tasks.component.scss",{"_index":1166,"title":{},"body":{"components/TasksComponent.html":{}}}],["tasks.filter(t",{"_index":1222,"title":{},"body":{"components/TasksComponent.html":{}}}],["tasks/tasks",{"_index":382,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["taskscomponent",{"_index":170,"title":{"components/TasksComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"modules/ComponentsModule.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["taskscontainercomponent",{"_index":172,"title":{"components/TasksContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"modules/ComponentsModule.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["taskservice",{"_index":248,"title":{"injectables/TaskService.html":{}},"body":{"directives/AuthDirective.html":{},"components/NewTaskComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["tasksservice",{"_index":252,"title":{},"body":{"directives/AuthDirective.html":{}}}],["taskstatus",{"_index":660,"title":{},"body":{"interfaces/NewTaskData.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["taskupdated",{"_index":879,"title":{},"body":{"components/TaskComponent.html":{}}}],["temperature",{"_index":874,"title":{},"body":{"components/TaskComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["temperature:'cel':'fah",{"_index":972,"title":{},"body":{"components/TaskComponent.html":{}}}],["temperature:'fah':'cel",{"_index":973,"title":{},"body":{"components/TaskComponent.html":{}}}],["temperature:\\'cel\\':\\'fah",{"_index":1121,"title":{},"body":{"components/TaskComponent.html":{}}}],["temperature:\\'fah\\':\\'cel",{"_index":1122,"title":{},"body":{"components/TaskComponent.html":{}}}],["temperaturepipe",{"_index":786,"title":{"pipes/TemperaturePipe.html":{}},"body":{"modules/SharedModule.html":{},"pipes/TemperaturePipe.html":{},"coverage.html":{},"overview.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"modules/ComponentsModule.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{}}}],["template.html",{"_index":1416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["templateref",{"_index":249,"title":{},"body":{"directives/AuthDirective.html":{}}}],["templates",{"_index":1424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{}}}],["test",{"_index":320,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"index.html":{}}}],["testing",{"_index":814,"title":{},"body":{"components/SimpleFormComponent.html":{},"index.html":{}}}],["testrunning",{"_index":1367,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1361,"title":{},"body":{"index.html":{}}}],["text",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["theme",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["theme__fallback",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["theme__users",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["this._error.asobservable",{"_index":444,"title":{},"body":{"injectables/ErrorService.html":{}}}],["this._error.next",{"_index":448,"title":{},"body":{"injectables/ErrorService.html":{}}}],["this._error.next(message",{"_index":447,"title":{},"body":{"injectables/ErrorService.html":{}}}],["this.activepermission",{"_index":1163,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.appauth",{"_index":277,"title":{},"body":{"directives/AuthDirective.html":{}}}],["this.close.emit",{"_index":581,"title":{},"body":{"components/NewRequestComponent.html":{}}}],["this.custominterval$.subscribe",{"_index":919,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.customsubscription",{"_index":918,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.customsubscription.unsubscribe",{"_index":922,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.dialogel.nativeelement.showmodal",{"_index":549,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.displayedtasks",{"_index":1224,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.entereddate",{"_index":630,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["this.enteredsummary",{"_index":628,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["this.enteredtitle",{"_index":626,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["this.error",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["this.errorservice.clearerror",{"_index":409,"title":{},"body":{"components/ErrorModalComponent.html":{}}}],["this.errorservice.error$.subscribe(error",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["this.errorservice.showerror('problem",{"_index":343,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["this.favoriteplaces",{"_index":457,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["this.form",{"_index":819,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["this.form.setvalue",{"_index":820,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["this.form.valuechanges?.pipe(debouncetime(500)).subscribe",{"_index":823,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["this.hostelementref.nativeelement.href",{"_index":778,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["this.isaddingrequest",{"_index":934,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.isaddingtask",{"_index":1230,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.isfetching",{"_index":321,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["this.istesting",{"_index":317,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/NewTaskComponent.html":{},"components/SimpleFormComponent.html":{}}}],["this.lesson.avatar",{"_index":519,"title":{},"body":{"components/LessonComponent.html":{}}}],["this.lessonid",{"_index":624,"title":{},"body":{"components/NewTaskComponent.html":{},"components/TasksComponent.html":{}}}],["this.lessonname",{"_index":1208,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.lessons.find((lesson",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["this.localerror",{"_index":333,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["this.placesservice",{"_index":328,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["this.placesservice.addplacetouserplaces(selectedplace).subscribe",{"_index":341,"title":{},"body":{"components/AvailablePlacesComponent.html":{}}}],["this.placesservice.loadavailableplaces().subscribe",{"_index":330,"title":{},"body":{"components/AvailablePlacesComponent.html":{}}}],["this.placesservice.loadeduserplaces$.subscribe",{"_index":458,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["this.placesservice.loaduserplaces().subscribe",{"_index":459,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["this.placesservice.removeuserplace(selectedplace).subscribe",{"_index":460,"title":{},"body":{"components/FavoritePlacesComponent.html":{}}}],["this.queryparamssub",{"_index":1210,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.queryparamssub?.unsubscribe",{"_index":1229,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.regularinterval",{"_index":917,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.regularsubscription",{"_index":912,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.regularsubscription.unsubscribe",{"_index":921,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.route",{"_index":635,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["this.route.data.subscribe(data",{"_index":1207,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.route.parammap.subscribe(params",{"_index":1205,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.route.params.subscribe(params",{"_index":1211,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.route.parent?.snapshot.parammap",{"_index":622,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["this.route.queryparams.subscribe(qparams",{"_index":1213,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.routeparam",{"_index":781,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["this.router.navigate",{"_index":633,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["this.savetasks",{"_index":1158,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.select.emit(this.lesson.id",{"_index":520,"title":{},"body":{"components/LessonComponent.html":{}}}],["this.selectedfilter",{"_index":1217,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.selectedlessonid",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["this.selectedsort",{"_index":1214,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.selectplace.emit(place",{"_index":700,"title":{},"body":{"components/PlacesComponent.html":{}}}],["this.slowcurstominterval",{"_index":920,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.subscription",{"_index":338,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/SimpleFormComponent.html":{}}}],["this.subscription.unsubscribe",{"_index":339,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["this.subscription?.unsubscribe",{"_index":830,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["this.task.status",{"_index":924,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.tasks",{"_index":1150,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.tasks.filter((task",{"_index":1152,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.tasks.map((task",{"_index":1160,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.tasks.push",{"_index":1154,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.taskservice.addtask",{"_index":625,"title":{},"body":{"components/NewTaskComponent.html":{}}}],["this.taskservice.getlessontasks(this.lessonid",{"_index":1220,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.taskservice.removetask(this.task.id",{"_index":933,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.taskservice.updatetaskstatus(taskid",{"_index":931,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.tasksservice.activepermission",{"_index":276,"title":{},"body":{"directives/AuthDirective.html":{}}}],["this.tasksservice.taskauthentication(true",{"_index":272,"title":{},"body":{"directives/AuthDirective.html":{}}}],["this.taskupdated.emit",{"_index":932,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.updatedisplayedtasks",{"_index":1216,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.userplaces",{"_index":332,"title":{},"body":{"components/AvailablePlacesComponent.html":{}}}],["this.viewcontainerref.clear",{"_index":279,"title":{},"body":{"directives/AuthDirective.html":{}}}],["this.viewcontainerref.createembeddedview(this.templateref",{"_index":278,"title":{},"body":{"directives/AuthDirective.html":{}}}],["those",{"_index":1091,"title":{},"body":{"components/TaskComponent.html":{}}}],["throughout",{"_index":996,"title":{},"body":{"components/TaskComponent.html":{}}}],["title",{"_index":404,"title":{},"body":{"components/ErrorModalComponent.html":{},"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"interfaces/Place.html":{},"components/PlacesContainerComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"miscellaneous/variables.html":{}}}],["tokens",{"_index":1024,"title":{},"body":{"components/TaskComponent.html":{}}}],["tools",{"_index":1345,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["top",{"_index":416,"title":{},"body":{"components/ErrorModalComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NotFoundComponent.html":{}}}],["touched.ng",{"_index":855,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["trackbyid",{"_index":692,"title":{},"body":{"components/PlacesComponent.html":{}}}],["trackbyid(index",{"_index":698,"title":{},"body":{"components/PlacesComponent.html":{}}}],["transform",{"_index":569,"title":{},"body":{"components/ModalComponent.html":{},"components/PlacesComponent.html":{},"components/SimpleFormComponent.html":{},"pipes/TemperaturePipe.html":{},"miscellaneous/variables.html":{}}}],["transform(value",{"_index":1260,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["transition",{"_index":656,"title":{},"body":{"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{}}}],["translatey",{"_index":570,"title":{},"body":{"components/ModalComponent.html":{}}}],["translatey(0",{"_index":572,"title":{},"body":{"components/ModalComponent.html":{}}}],["transparent",{"_index":650,"title":{},"body":{"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{}}}],["true",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/LessonComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":322,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/SimpleFormComponent.html":{}}}],["turns",{"_index":1268,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["two",{"_index":949,"title":{},"body":{"components/TaskComponent.html":{}}}],["type",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"interfaces/Lesson.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"interfaces/NewTaskData.html":{},"interfaces/Place.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"interceptors/RemoteA16Interceptor.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"interfaces/Task.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1387,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1275,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["types",{"_index":1055,"title":{},"body":{"components/TaskComponent.html":{}}}],["typical",{"_index":1096,"title":{},"body":{"components/TaskComponent.html":{}}}],["undefined",{"_index":1274,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["unfortunately",{"_index":349,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["unit",{"_index":1360,"title":{},"body":{"index.html":{}}}],["unsaved",{"_index":1097,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["up",{"_index":711,"title":{},"body":{"components/PlacesComponent.html":{},"components/TaskComponent.html":{}}}],["update",{"_index":1070,"title":{},"body":{"components/TaskComponent.html":{}}}],["updatedisplayedtasks",{"_index":1178,"title":{},"body":{"components/TasksComponent.html":{}}}],["updates",{"_index":1073,"title":{},"body":{"components/TaskComponent.html":{}}}],["updatetaskstatus",{"_index":1130,"title":{},"body":{"injectables/TaskService.html":{}}}],["updatetaskstatus(taskid",{"_index":1142,"title":{},"body":{"injectables/TaskService.html":{}}}],["uppercase",{"_index":848,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["url",{"_index":670,"title":{},"body":{"components/NotFoundComponent.html":{},"interceptors/RemoteA16Interceptor.html":{}}}],["use",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"components/TaskComponent.html":{},"index.html":{}}}],["useclass",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"components/TaskComponent.html":{}}}],["used",{"_index":268,"title":{},"body":{"directives/AuthDirective.html":{},"components/TaskComponent.html":{}}}],["usefactory",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"components/TaskComponent.html":{}}}],["useful",{"_index":1007,"title":{},"body":{"components/TaskComponent.html":{}}}],["user",{"_index":1064,"title":{},"body":{"components/TaskComponent.html":{}}}],["userplaces",{"_index":293,"title":{},"body":{"components/AvailablePlacesComponent.html":{}}}],["users",{"_index":1058,"title":{},"body":{"components/TaskComponent.html":{}}}],["uses",{"_index":943,"title":{},"body":{"components/TaskComponent.html":{}}}],["usevalue",{"_index":1026,"title":{},"body":{"components/TaskComponent.html":{}}}],["using",{"_index":1326,"title":{},"body":{"index.html":{}}}],["val",{"_index":915,"title":{},"body":{"components/TaskComponent.html":{},"pipes/TemperaturePipe.html":{}}}],["value",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/TemperaturePipe.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1025,"title":{},"body":{"components/TaskComponent.html":{}}}],["var",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/AvailablePlacesComponent.html":{},"components/CardComponent.html":{},"components/ErrorModalComponent.html":{},"components/FavoritePlacesComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/NotFoundComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{},"components/TasksContainerComponent.html":{}}}],["variable",{"_index":271,"title":{},"body":{"directives/AuthDirective.html":{},"components/TaskComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1389,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":1020,"title":{},"body":{"components/TaskComponent.html":{}}}],["version",{"_index":1328,"title":{},"body":{"index.html":{},"properties.html":{}}}],["versions",{"_index":471,"title":{},"body":{"components/HeaderComponent.html":{}}}],["view",{"_index":961,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["viewchild",{"_index":548,"title":{},"body":{"components/ModalComponent.html":{},"components/SimpleFormComponent.html":{}}}],["viewchild('dialog",{"_index":544,"title":{},"body":{"components/ModalComponent.html":{}}}],["viewchild('form",{"_index":806,"title":{},"body":{"components/SimpleFormComponent.html":{}}}],["viewcontainerref",{"_index":250,"title":{},"body":{"directives/AuthDirective.html":{}}}],["visit",{"_index":586,"title":{},"body":{"components/NewRequestComponent.html":{},"index.html":{}}}],["visited",{"_index":587,"title":{},"body":{"components/NewRequestComponent.html":{}}}],["void",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthDirective.html":{},"components/AvailablePlacesComponent.html":{},"components/ErrorModalComponent.html":{},"injectables/ErrorService.html":{},"components/FavoritePlacesComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{},"directives/SafeLinkDirective.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["wait",{"_index":348,"title":{},"body":{"components/AvailablePlacesComponent.html":{},"components/FavoritePlacesComponent.html":{}}}],["want",{"_index":775,"title":{},"body":{"directives/SafeLinkDirective.html":{},"components/TaskComponent.html":{}}}],["wantstoleave",{"_index":773,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["way",{"_index":941,"title":{},"body":{"components/TaskComponent.html":{}}}],["weight",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/LessonComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{}}}],["whenever",{"_index":1339,"title":{},"body":{"index.html":{}}}],["whether",{"_index":1082,"title":{},"body":{"components/TaskComponent.html":{}}}],["width",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorModalComponent.html":{},"components/HeaderComponent.html":{},"components/LessonComponent.html":{},"components/ModalComponent.html":{},"components/NewRequestComponent.html":{},"components/NewTaskComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesContainerComponent.html":{},"components/SimpleFormComponent.html":{},"components/TaskComponent.html":{},"components/TasksComponent.html":{}}}],["window.confirm('do",{"_index":774,"title":{},"body":{"directives/SafeLinkDirective.html":{}}}],["within",{"_index":269,"title":{},"body":{"directives/AuthDirective.html":{}}}],["without",{"_index":1425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["working",{"_index":926,"title":{},"body":{"components/TaskComponent.html":{}}}],["wrap",{"_index":492,"title":{},"body":{"components/HeaderComponent.html":{},"components/SimpleFormComponent.html":{},"components/TasksComponent.html":{}}}],["xxxx=\"ngmodel",{"_index":1448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":1266,"title":{},"body":{"pipes/TemperaturePipe.html":{}}}],["z",{"_index":552,"title":{},"body":{"components/ModalComponent.html":{}}}],["zone.js",{"_index":1319,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root-angular-16\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                lessons\n                            \n                            \n                                    Optional\n                                selectedLessonId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSelectLesson\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    selectedLesson\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(errorService: ErrorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorService\n                                                  \n                                                        \n                                                                        ErrorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSelectLesson\n                        \n                    \n                \n            \n            \n                \nonSelectLesson(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lessons\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DUMMY_LESSONS\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        selectedLessonId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedLesson\n                    \n                \n\n                \n                    \n                        getselectedLesson()\n                    \n                \n                            \n                                \n                                    Defined in src/app/app.component.ts:18\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { DUMMY_LESSONS } from \"../assets/dummy-data\"\nimport { ErrorService } from '../shared/modal-error/service/error.service';\n@Component({\n  selector: 'app-root-angular-16',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  lessons = DUMMY_LESSONS;\n  selectedLessonId?: string;\n  error = '';\n\n  constructor(private errorService: ErrorService) {\n    this.errorService.error$.subscribe(error => this.error = error);\n  }\n\n  get selectedLesson() {return this.lessons.find((lesson) => lesson.id === this.selectedLessonId)!};\n\n  onSelectLesson(id: string) {this.selectedLessonId = id};\n}\n\n    \n\n    \n        \n\n\n  \n  \n    Select a lesson to see their information\n    \n      \n        \n      \n    \n\n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .mf-angular-16-remote-theme {\n  font-family: sans-serif;\n  margin: 0;\n  background-color: #1e1d20;\n  color: #ede8f7;\n  min-height: 90vh;\n  padding: 1rem;\n\n  &__lessons-tasks {\n    margin: 2% 12%;\n    background-color: #2c3354;\n    border-radius: 15px;\n  }\n  &__users {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    list-style: none;\n    margin: 0;\n    padding: 0;\n    gap: 0.5rem;\n    overflow: auto;\n  }\n  &__fallback {\n    font-weight: bold;\n    font-size: 1.15rem;\n    margin: 0;\n    padding: 1% 1% 2% 1%;\n    text-align: center;\n  }\n}\n\n@media (min-width: 768px) {\n  main {\n    margin: 4rem auto;\n    grid-template-columns: 1fr 3fr;\n  }\n\n  .mf-angular-16-remote-theme__users {\n    flex-direction: row;\n  }\n\n  .mf-angular-16-remote-theme__fallback {\n    font-size: 1.5rem;\n    text-align: center;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Select a lesson to see their information                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-16'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TasksContainerComponent', 'selector': 'app-tasks-container'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nRemoteA16Interceptor\n\nRemoteA16Interceptor\n\nAppModule -->\n\nRemoteA16Interceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            RemoteA16Interceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { RouterModule } from '@angular/router';\nimport { routes } from \"./app.routes\";\nimport { ComponentsModule } from '../components/components.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { RemoteA16Interceptor } from '../interceptors/remote-a16-interceptor/remote-a16.interceptor';\n/*(A  For Angular 15 and more use the \"inject\" approach.\nimport { APP_INITIALIZER, Injector } from '@angular/core';\nimport { loadPlacesService } from './remote-providers';\n*/\n@NgModule({\n  declarations: [ AppComponent ],\n  imports: [ SharedModule, ComponentsModule, RouterModule.forChild(routes) ],\n  providers: [\n    {provide: HTTP_INTERCEPTORS, useClass: RemoteA16Interceptor, multi: true}\n    /*(A  Manually registers the remote module making the service available globally.\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (injector: Injector) => {\n        return async () => {\n          const PlacesServiceClass = await loadPlacesService();\n          injector.get(PlacesServiceClass);\n        };\n      },\n      deps: [Injector],\n      multi: true\n    }*/\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AuthDirective.html":{"url":"directives/AuthDirective.html","title":"directive - AuthDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  AuthDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/directives/auth/auth.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appAuth]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                injector\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                appAuth\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tasksService: TaskService, templateRef: TemplateRef, viewContainerRef: ViewContainerRef)\n                    \n                \n                        \n                            \n                                Defined in src/directives/auth/auth.directive.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tasksService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        templateRef\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        appAuth\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/directives/auth/auth.directive.ts:9\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/directives/auth/auth.directive.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        injector\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Injector)\n                    \n                \n                    \n                        \n                                Defined in src/directives/auth/auth.directive.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, effect, inject, Injector, Input, runInInjectionContext, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { TaskService } from '../../services/tasks/tasks.service';\n\n@Directive({\n  selector: '[appAuth]',\n})\nexport class AuthDirective { // Estructural self directive\n  // @Input('appAuth') renderCondition!: string;\n  @Input() appAuth!: string;\n  /* Due to the structure of the structural directive, aliases cannot be used within the input; instead, the variable must be used as is,\n     as the name of the directive.\n  */\n  private injector = inject(Injector);\n\n\n  constructor(private tasksService: TaskService, private templateRef: TemplateRef, private viewContainerRef: ViewContainerRef) {\n    this.tasksService.taskAuthentication(true); // Simple auth method\n  }\n\n  ngOnInit(): void {\n    runInInjectionContext(this.injector, () => {\n      effect(() => {\n        if (this.tasksService.activePermission === this.appAuth) {\n          this.viewContainerRef.createEmbeddedView(this.templateRef);\n        } else {\n          this.viewContainerRef.clear();\n        }\n      });\n    });\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AvailablePlacesComponent.html":{"url":"components/AvailablePlacesComponent.html","title":"component - AvailablePlacesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AvailablePlacesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/http-request/available-places/available-places.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-available-places\n            \n\n\n\n            \n                styleUrls\n                ./available-places.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./available-places.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isFetching\n                            \n                            \n                                isTesting\n                            \n                            \n                                localError\n                            \n                            \n                                    Private\n                                placesService\n                            \n                            \n                                    Private\n                                subscription\n                            \n                            \n                                userPlaces\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onSelectPlace\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector, errorService: ErrorService)\n                    \n                \n                        \n                            \n                                Defined in src/components/http-request/available-places/available-places.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorService\n                                                  \n                                                        \n                                                                        ErrorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/http-request/available-places/available-places.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/http-request/available-places/available-places.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelectPlace\n                        \n                    \n                \n            \n            \n                \nonSelectPlace(selectedPlace: Place)\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/http-request/available-places/available-places.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                selectedPlace\n                                            \n                                                            Place\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isFetching\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/available-places/available-places.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTesting\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/available-places/available-places.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        localError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/available-places/available-places.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        placesService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InstanceType<>\n\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/available-places/available-places.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/available-places/available-places.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userPlaces\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Place[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/available-places/available-places.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, Injector, OnDestroy, runInInjectionContext } from '@angular/core';\nimport { Place } from '../place-model';\nimport { loadRemoteModule } from '@angular-architects/module-federation';\nimport { PlacesService } from 'host/PlacesService';\nimport { Subscription } from 'rxjs';\nimport { ErrorService } from '../../../shared/modal-error/service/error.service';\n@Component({\n  selector: 'app-available-places',\n  templateUrl: './available-places.component.html',\n  styleUrls: ['./available-places.component.scss']\n})\nexport class AvailablePlacesComponent implements OnDestroy {\n  userPlaces: Place[] = [];\n  isFetching = false;\n  localError = '';\n  isTesting = false;\n\n  private subscription!: Subscription;\n  private placesService!: InstanceType;\n\n  constructor(private injector: Injector, private errorService: ErrorService) { }\n\n  async ngOnInit() {\n    if (this.isTesting) return; // avoids the async logic on the test\n    this.isFetching = true;\n    try {\n      const hostServiceModule = await loadRemoteModule({\n        type: 'module',\n        remoteEntry: 'http://localhost:4200/remoteEntry.js',\n        exposedModule: './PlacesService',\n      });\n\n      const PlacesServiceClass = hostServiceModule.PlacesService;\n      // (A >= 15) -> \"inject\" is available.\n      runInInjectionContext(this.injector, () => {this.placesService = inject(PlacesServiceClass)});\n\n      this.placesService.loadAvailablePlaces().subscribe({\n        next: (places: Place[]) => this.userPlaces = places,\n        error: (error: Error) => { this.localError = error.message },\n        complete: () => this.isFetching = false\n      });\n    } catch (error) {\n      this.localError = 'The remote service could not be loaded.';\n      this.isFetching = false;\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {this.subscription.unsubscribe()};\n  }\n\n  onSelectPlace(selectedPlace: Place) {\n    const sub = this.placesService.addPlaceToUserPlaces(selectedPlace).subscribe({\n      error: (error: Error) => {\n        console.error(error.message);\n        this.errorService.showError('Problem adding place, please try again.')\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  {{ localError }}\n\n  \n    Loading the available places, please wait.\n  \n\n   0\" />\n\n  \n    Unfortunately, no places could be found.\n  \n\n\n    \n\n    \n                \n                    ./available-places.component.scss\n                \n                .places-list__fallback {\n  font-family: \"Raleway\", sans-serif;\n  font-size: 1.5rem;\n  margin: 0 0 1rem 0;\n  padding: 0;\n  color: #adc9ff;\n  text-align: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ localError }}      Loading the available places, please wait.     0\" />      Unfortunately, no places could be found.  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-16'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TasksContainerComponent', 'selector': 'app-tasks-container'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'AvailablePlacesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardComponent.html":{"url":"components/CardComponent.html","title":"component - CardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/shared/card/card.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card\n            \n\n\n\n            \n                styleUrls\n                ./card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss']\n})\n\nexport class CardComponent {}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./card.component.scss\n                \n                .card {\n  border-radius: 6px;\n  box-shadow: 0 1px 6px rgba(0, 0, 0, 0.1);\n  overflow: hidden;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-16'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TasksContainerComponent', 'selector': 'app-tasks-container'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ComponentsModule.html":{"url":"modules/ComponentsModule.html","title":"module - ComponentsModule","body":"\n                   \n\n\n\n\n    Modules\n    ComponentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ComponentsModule\n\n\n\ncluster_ComponentsModule_declarations\n\n\n\ncluster_ComponentsModule_imports\n\n\n\ncluster_ComponentsModule_exports\n\n\n\n\nAvailablePlacesComponent\n\nAvailablePlacesComponent\n\n\n\nComponentsModule\n\nComponentsModule\n\nComponentsModule -->\n\nAvailablePlacesComponent->ComponentsModule\n\n\n\n\n\nCardComponent\n\nCardComponent\n\nComponentsModule -->\n\nCardComponent->ComponentsModule\n\n\n\n\n\nErrorModalComponent\n\nErrorModalComponent\n\nComponentsModule -->\n\nErrorModalComponent->ComponentsModule\n\n\n\n\n\nFavoritePlacesComponent\n\nFavoritePlacesComponent\n\nComponentsModule -->\n\nFavoritePlacesComponent->ComponentsModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nComponentsModule -->\n\nHeaderComponent->ComponentsModule\n\n\n\n\n\nLessonComponent\n\nLessonComponent\n\nComponentsModule -->\n\nLessonComponent->ComponentsModule\n\n\n\n\n\nModalComponent\n\nModalComponent\n\nComponentsModule -->\n\nModalComponent->ComponentsModule\n\n\n\n\n\nNewRequestComponent\n\nNewRequestComponent\n\nComponentsModule -->\n\nNewRequestComponent->ComponentsModule\n\n\n\n\n\nNewTaskComponent\n\nNewTaskComponent\n\nComponentsModule -->\n\nNewTaskComponent->ComponentsModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nComponentsModule -->\n\nNotFoundComponent->ComponentsModule\n\n\n\n\n\nPlacesComponent\n\nPlacesComponent\n\nComponentsModule -->\n\nPlacesComponent->ComponentsModule\n\n\n\n\n\nPlacesContainerComponent\n\nPlacesContainerComponent\n\nComponentsModule -->\n\nPlacesContainerComponent->ComponentsModule\n\n\n\n\n\nSimpleFormComponent\n\nSimpleFormComponent\n\nComponentsModule -->\n\nSimpleFormComponent->ComponentsModule\n\n\n\n\n\nTaskComponent\n\nTaskComponent\n\nComponentsModule -->\n\nTaskComponent->ComponentsModule\n\n\n\n\n\nTasksComponent\n\nTasksComponent\n\nComponentsModule -->\n\nTasksComponent->ComponentsModule\n\n\n\n\n\nTasksContainerComponent\n\nTasksContainerComponent\n\nComponentsModule -->\n\nTasksContainerComponent->ComponentsModule\n\n\n\n\n\nAvailablePlacesComponent \n\nAvailablePlacesComponent \n\nAvailablePlacesComponent  -->\n\nComponentsModule->AvailablePlacesComponent \n\n\n\n\n\nCardComponent \n\nCardComponent \n\nCardComponent  -->\n\nComponentsModule->CardComponent \n\n\n\n\n\nErrorModalComponent \n\nErrorModalComponent \n\nErrorModalComponent  -->\n\nComponentsModule->ErrorModalComponent \n\n\n\n\n\nFavoritePlacesComponent \n\nFavoritePlacesComponent \n\nFavoritePlacesComponent  -->\n\nComponentsModule->FavoritePlacesComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nComponentsModule->HeaderComponent \n\n\n\n\n\nLessonComponent \n\nLessonComponent \n\nLessonComponent  -->\n\nComponentsModule->LessonComponent \n\n\n\n\n\nNewRequestComponent \n\nNewRequestComponent \n\nNewRequestComponent  -->\n\nComponentsModule->NewRequestComponent \n\n\n\n\n\nNewTaskComponent \n\nNewTaskComponent \n\nNewTaskComponent  -->\n\nComponentsModule->NewTaskComponent \n\n\n\n\n\nNotFoundComponent \n\nNotFoundComponent \n\nNotFoundComponent  -->\n\nComponentsModule->NotFoundComponent \n\n\n\n\n\nPlacesComponent \n\nPlacesComponent \n\nPlacesComponent  -->\n\nComponentsModule->PlacesComponent \n\n\n\n\n\nPlacesContainerComponent \n\nPlacesContainerComponent \n\nPlacesContainerComponent  -->\n\nComponentsModule->PlacesContainerComponent \n\n\n\n\n\nTaskComponent \n\nTaskComponent \n\nTaskComponent  -->\n\nComponentsModule->TaskComponent \n\n\n\n\n\nTasksComponent \n\nTasksComponent \n\nTasksComponent  -->\n\nComponentsModule->TasksComponent \n\n\n\n\n\nTasksContainerComponent \n\nTasksContainerComponent \n\nTasksContainerComponent  -->\n\nComponentsModule->TasksContainerComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nComponentsModule -->\n\nSharedModule->ComponentsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/components/components.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AvailablePlacesComponent\n                        \n                        \n                            CardComponent\n                        \n                        \n                            ErrorModalComponent\n                        \n                        \n                            FavoritePlacesComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            LessonComponent\n                        \n                        \n                            ModalComponent\n                        \n                        \n                            NewRequestComponent\n                        \n                        \n                            NewTaskComponent\n                        \n                        \n                            NotFoundComponent\n                        \n                        \n                            PlacesComponent\n                        \n                        \n                            PlacesContainerComponent\n                        \n                        \n                            SimpleFormComponent\n                        \n                        \n                            TaskComponent\n                        \n                        \n                            TasksComponent\n                        \n                        \n                            TasksContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AvailablePlacesComponent\n                        \n                        \n                            CardComponent\n                        \n                        \n                            ErrorModalComponent\n                        \n                        \n                            FavoritePlacesComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            LessonComponent\n                        \n                        \n                            NewRequestComponent\n                        \n                        \n                            NewTaskComponent\n                        \n                        \n                            NotFoundComponent\n                        \n                        \n                            PlacesComponent\n                        \n                        \n                            PlacesContainerComponent\n                        \n                        \n                            TaskComponent\n                        \n                        \n                            TasksComponent\n                        \n                        \n                            TasksContainerComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { SharedModule } from \"../shared/shared.module\";\n\nimport { HeaderComponent } from '../components/header/header.component';\nimport { LessonComponent } from '../components/lesson/lesson.component';\nimport { TasksComponent } from '../components/tasks/tasks.component';\nimport { CardComponent } from \"../shared/card/card.component\";\nimport { TaskComponent } from \"../components/task/task.component\";\nimport { NewTaskComponent } from \"../components/new-task/new-task.component\";\nimport { SimpleFormComponent } from './template-form/simple-form/simple-form.component';\nimport { NotFoundComponent } from \"./not-found/not-found.component\";\nimport { TasksContainerComponent } from './tasks/tasks-container/tasks-container.component';\nimport { NewRequestComponent } from './http-request/new-request/new-request.component';\nimport { AvailablePlacesComponent } from './http-request/available-places/available-places.component';\nimport { FavoritePlacesComponent } from './http-request/favorite-places/favorite-places.component';\nimport { PlacesComponent } from './http-request/places/places.component';\nimport { PlacesContainerComponent } from './http-request/places-container/places-container.component';\nimport { ErrorModalComponent } from \"../shared/modal-error/components/error/error-modal.component\";\nimport { ModalComponent } from \"../shared/modal-error/components/modal/modal.component\";\n\n@NgModule({\n  declarations: [\n    HeaderComponent, LessonComponent, TasksComponent, CardComponent, TaskComponent, NewTaskComponent, SimpleFormComponent,\n    NotFoundComponent, TasksContainerComponent, NewRequestComponent, AvailablePlacesComponent, FavoritePlacesComponent,\n    PlacesComponent, PlacesContainerComponent, ErrorModalComponent, ModalComponent\n  ],\n  imports: [ SharedModule ],\n  exports: [\n    HeaderComponent, LessonComponent, TasksComponent, CardComponent, TaskComponent, NewTaskComponent, NotFoundComponent,\n    TasksContainerComponent, NewRequestComponent, AvailablePlacesComponent, FavoritePlacesComponent, PlacesComponent,\n    PlacesContainerComponent, ErrorModalComponent\n  ]\n})\nexport class ComponentsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorModalComponent.html":{"url":"components/ErrorModalComponent.html","title":"component - ErrorModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ErrorModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/shared/modal-error/components/error/error-modal.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error-modal\n            \n\n\n\n            \n                styleUrls\n                ./error-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./error-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onClearError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(errorService: ErrorService)\n                    \n                \n                        \n                            \n                                Defined in src/shared/modal-error/components/error/error-modal.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorService\n                                                  \n                                                        \n                                                                        ErrorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/shared/modal-error/components/error/error-modal.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/shared/modal-error/components/error/error-modal.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onClearError\n                        \n                    \n                \n            \n            \n                \nonClearError()\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/modal-error/components/error/error-modal.component.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ErrorService } from '../../service/error.service';\n\n@Component({\n    selector: 'app-error-modal',\n    templateUrl: './error-modal.component.html',\n    styleUrls: ['./error-modal.component.scss'],\n})\nexport class ErrorModalComponent {\n  @Input() title = '';\n  @Input() message = '';\n\n  constructor(private errorService: ErrorService) {}\n\n  onClearError() {this.errorService.clearError()};\n}\n\n    \n\n    \n        \n  \n    {{ title }}\n    {{ message }}\n\n    \n      Okay\n    \n  \n\n\n    \n\n    \n                \n                    ./error-modal.component.scss\n                \n                .modal-error {\n  max-width: 40rem;\n  margin: auto;\n  padding: 1rem;\n  background-color: #f4c7c7;\n  color: #3e0505;\n\n  &__actions {\n    margin-top: 1rem;\n    display: flex;\n    justify-content: flex-end;\n    gap: 1rem;\n  }\n  &__button {\n    cursor: pointer;\n    font-family: \"Raleway\", sans-serif;\n    font-size: 1rem;\n    padding: 0.5rem 1.5rem;\n    border: none;\n    border-radius: 4px;\n    background-color: #5d0909;\n    box-shadow: 0 1px 4px rgba(0, 0, 0, 0.4);\n    color: #fff;\n\n    &:hover,\n    &:focus {\n      background-color: #3e0505;\n    }\n  }\n  &__title {\n    font-family: \"Raleway\", sans-serif;\n    font-size: 1.5rem;\n    color: #3e0808;\n    text-align: center;\n  }\n  &__message {\n    font-family: \"Raleway\", sans-serif;\n    font-size: 1.25rem;\n    color: #850f0f;\n    text-align: center;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ title }}    {{ message }}          Okay      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-16'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TasksContainerComponent', 'selector': 'app-tasks-container'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'ErrorModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorService.html":{"url":"injectables/ErrorService.html","title":"injectable - ErrorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ErrorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/modal-error/service/error.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _error\n                            \n                            \n                                error$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearError\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearError\n                        \n                    \n                \n            \n            \n                \nclearError()\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/modal-error/service/error.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n            \n                \nshowError(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/modal-error/service/error.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _error\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('')\n                    \n                \n                    \n                        \n                                Defined in src/shared/modal-error/service/error.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this._error.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/shared/modal-error/service/error.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorService {\n  private _error = new BehaviorSubject('');\n  error$: Observable = this._error.asObservable();\n\n  showError(message: string): void {\n    this._error.next(message);\n  }\n\n  clearError(): void {\n    this._error.next('');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FavoritePlacesComponent.html":{"url":"components/FavoritePlacesComponent.html","title":"component - FavoritePlacesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FavoritePlacesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/http-request/favorite-places/favorite-places.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-favorite-places\n            \n\n\n\n            \n                styleUrls\n                ./favorite-places.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./favorite-places.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                favoritePlaces\n                            \n                            \n                                isFetching\n                            \n                            \n                                isTesting\n                            \n                            \n                                localError\n                            \n                            \n                                    Private\n                                placesService\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onRemovePlace\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector, errorService: ErrorService)\n                    \n                \n                        \n                            \n                                Defined in src/components/http-request/favorite-places/favorite-places.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorService\n                                                  \n                                                        \n                                                                        ErrorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/http-request/favorite-places/favorite-places.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/http-request/favorite-places/favorite-places.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRemovePlace\n                        \n                    \n                \n            \n            \n                \nonRemovePlace(selectedPlace: Place)\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/http-request/favorite-places/favorite-places.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                selectedPlace\n                                            \n                                                            Place\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        favoritePlaces\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Place[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/favorite-places/favorite-places.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFetching\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/favorite-places/favorite-places.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTesting\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/favorite-places/favorite-places.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        localError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/favorite-places/favorite-places.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        placesService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InstanceType<>\n\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/favorite-places/favorite-places.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/components/http-request/favorite-places/favorite-places.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, Injector, OnDestroy, runInInjectionContext } from '@angular/core';\nimport { Place } from '../place-model';\nimport { Subscription } from 'rxjs';\nimport { PlacesService } from 'host/PlacesService';\nimport { loadRemoteModule } from '@angular-architects/module-federation';\nimport { ErrorService } from '../../../shared/modal-error/service/error.service';\n\n@Component({\n  selector: 'app-favorite-places',\n  templateUrl: './favorite-places.component.html',\n  styleUrls: ['./favorite-places.component.scss']\n})\nexport class FavoritePlacesComponent implements OnDestroy {\n  favoritePlaces: Place[] = [];\n  isFetching = false;\n  localError = '';\n  isTesting = false;\n\n  private subscription!: Subscription;\n  private placesService!: InstanceType;\n\n  constructor(private injector: Injector, private errorService: ErrorService) {}\n\n  async ngOnInit() {\n    if (this.isTesting) return; // avoids the async logic on the test\n\n    this.isFetching = true;\n    try {\n      const hostServiceModule = await loadRemoteModule({\n        type: 'module',\n        remoteEntry: 'http://localhost:4200/remoteEntry.js',\n        exposedModule: './PlacesService',\n      });\n\n      const PlacesServiceClass = hostServiceModule.PlacesService;\n      // (A >= 15) -> \"inject\" is available.\n      runInInjectionContext(this.injector, () => {this.placesService = inject(PlacesServiceClass)});\n\n      this.favoritePlaces = this.placesService.loadedUserPlaces$.subscribe({\n        next: (places: Place[]) => {this.favoritePlaces = places},\n      })\n\n      this.placesService.loadUserPlaces().subscribe({\n        error: (error: Error) => { this.localError = error.message },\n        complete: () => this.isFetching = false\n      });\n    } catch (error) {\n      this.localError = 'The remote service could not be loaded.';\n      this.isFetching = false;\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {this.subscription.unsubscribe()};\n  }\n\n  onRemovePlace(selectedPlace: Place) {\n    const sub = this.placesService.removeUserPlace(selectedPlace).subscribe({\n      error: (error: Error) => {\n        console.error(error.message);\n        this.errorService.showError('Problem removing place, please try again.')\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  {{ localError }}\n\n  \n    Loading your favorite places, please wait.\n  \n\n   0\" />\n\n  \n    Unfortunately, no places could be found.\n  \n\n\n    \n\n    \n                \n                    ./favorite-places.component.scss\n                \n                .places-list__fallback {\n  font-family: \"Raleway\", sans-serif;\n  font-size: 1.5rem;\n  margin: 0 0 1rem 0;\n  padding: 0;\n  color: #adc9ff;\n  text-align: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ localError }}      Loading your favorite places, please wait.     0\" />      Unfortunately, no places could be found.  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-16'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TasksContainerComponent', 'selector': 'app-tasks-container'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'FavoritePlacesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/header/header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n\n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\n\nexport class HeaderComponent {}\n\n    \n\n    \n        \n  \n  \n    Knowledge of Angular 16 and less\n    \n      Senior-level knowledge with the Angular framework and versions 16 and less\n    \n  \n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                .legacy-header {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  gap: 1rem;\n  width: 90%;\n  max-width: 50rem;\n  margin: 0 auto 1rem auto;\n  text-align: center;\n  background: linear-gradient(to bottom,#0e0a4c,#1e0d80);\n  padding: 1rem;\n  border-bottom-right-radius: 12px;\n  border-bottom-left-radius: 12px;\n  box-shadow: 0 1px 8px rgba(0, 0, 0, 0.6);\n\n  &__logo {\n    width: 3.5rem;\n    object-fit: contain;\n  }\n  &__title {\n    font-size: 1.25rem;\n    margin: 0;\n    padding: 0;\n  }\n  &__description {\n    margin: 0;\n    font-size: 0.8rem;\n    text-wrap: balance;\n  }\n}\n\n@media (min-width: 768px) {\n  .legacy-header {\n    padding: 2rem;\n\n    &__logo {width: 4.5rem};\n    &__title {\n      font-size: 1.5rem;\n      margin: 0;\n      padding: 0;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Knowledge of Angular 16 and less          Senior-level knowledge with the Angular framework and versions 16 and less      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-16'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TasksContainerComponent', 'selector': 'app-tasks-container'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Lesson.html":{"url":"interfaces/Lesson.html","title":"interface - Lesson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Lesson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/lesson/lesson.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Lesson {\n  id: string;\n  avatar: string;\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LessonComponent.html":{"url":"components/LessonComponent.html","title":"component - LessonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LessonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/lesson/lesson.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-lesson\n            \n\n\n\n            \n                styleUrls\n                ./lesson.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./lesson.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSelectLesson\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                lesson\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                select\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    imagePath\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        lesson\n                    \n                \n                \n                    \n                        Type :         Lesson\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/components/lesson/lesson.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/components/lesson/lesson.component.ts:12\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        select\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/components/lesson/lesson.component.ts:13\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSelectLesson\n                        \n                    \n                \n            \n            \n                \nonSelectLesson()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/lesson/lesson.component.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        imagePath\n                    \n                \n\n                \n                    \n                        getimagePath()\n                    \n                \n                            \n                                \n                                    Defined in src/components/lesson/lesson.component.ts:15\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { type Lesson } from \"./lesson.model\";\n\n@Component({\n  selector: 'app-lesson',\n  templateUrl: './lesson.component.html',\n  styleUrls: ['./lesson.component.scss']\n})\n\nexport class LessonComponent {\n  @Input({required: true}) lesson!: Lesson;\n  @Input({required: true}) selected!: boolean;\n  @Output() select = new EventEmitter();\n\n  get imagePath() {\n    return 'assets/mf-angular-16/' + this.lesson.avatar;\n  }\n\n  onSelectLesson() {\n    this.select.emit(this.lesson.id);\n  }\n}\n\n    \n\n    \n        \n  \n    \n    {{ lesson.name }}\n  \n\n\n    \n\n    \n                \n                    ./lesson.component.scss\n                \n                .lesson-card__button {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.35rem 0.5rem;\n  background-color: #333552;\n  color: #c3b3d1;\n  border: none;\n  font: inherit;\n  cursor: pointer;\n  width: 100%;\n  min-width: 10rem;\n  text-align: left;\n\n  &:hover,\n  &:active,\n  &--active {\n    background-color: #6577dd;\n    color: #070b22;\n  }\n}\n\n.lesson-card__image {\n  width: 2rem;\n  object-fit: contain;\n  border-radius: 50%;\n  box-shadow: 0 1px 8px rgba(0, 0, 0, 0.3);\n}\n\n.lesson-card__name {\n  margin: 0;\n  padding: 0;\n  font-size: 0.8rem;\n  font-weight: normal;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ lesson.name }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-16'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TasksContainerComponent', 'selector': 'app-tasks-container'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'LessonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalComponent.html":{"url":"components/ModalComponent.html","title":"component - ModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/shared/modal-error/components/modal/modal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-modal\n            \n\n\n\n            \n                styleUrls\n                ./modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Private\n                                dialogEl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/modal-error/components/modal/modal.component.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        dialogEl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('dialog', {static: false, read: ElementRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/modal-error/components/modal/modal.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.scss']\n})\nexport class ModalComponent implements AfterViewInit {\n  @ViewChild('dialog', { static: false, read: ElementRef })\n  private dialogEl!: ElementRef;\n\n  ngAfterViewInit(): void {this.dialogEl.nativeElement.showModal()};\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./modal.component.scss\n                \n                .modal-dialog {\n  min-width: 30rem;\n  padding: 0;\n  z-index: 2;\n  background: #d5c7bc;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.26);\n  animation: slide-down-fade-in 0.3s ease-out forwards;\n\n  &::backdrop {\n    position: fixed;\n    top: 0;\n    left: 0;\n    z-index: 1;\n    width: 100%;\n    height: 100vh;\n    background: rgba(0, 0, 0, 0.6);\n  }\n}\n\n@keyframes slide-down-fade-in {\n  from {\n    opacity: 0;\n    transform: translateY(-3rem);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-16'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TasksContainerComponent', 'selector': 'app-tasks-container'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'ModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NewRequestComponent.html":{"url":"components/NewRequestComponent.html","title":"component - NewRequestComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NewRequestComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/http-request/new-request/new-request.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-new-request\n            \n\n\n\n            \n                styleUrls\n                ./new-request.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./new-request.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onCancel\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/components/http-request/new-request/new-request.component.ts:9\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/http-request/new-request/new-request.component.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-new-request',\n  templateUrl: './new-request.component.html',\n  styleUrls: ['./new-request.component.scss']\n})\nexport class NewRequestComponent {\n  @Output() close = new EventEmitter();\n\n  onCancel() { this.close.emit() };\n}\n\n    \n\n    \n        \n  \n    PlacePicker\n    \n      Close HTTP request\n    \n  \n  \n    Create your personal collection of places you would like to visit or you have visited.\n  \n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./new-request.component.scss\n                \n                .place-picker {\n  width: 90%;\n  max-width: 65rem;\n  background-color: #000937;\n  border-radius: 6px;\n  border: none;\n  box-shadow: 0 1px 6px rgba(0, 0, 0, 0.4);\n  overflow: hidden;\n  padding: 1rem;\n  top: 5rem;\n\n  &__header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n  &__title {\n    font-weight: bold;\n    color: #adc9ff;\n  }\n  &__description {\n    font-weight: bold;\n    color: #adc9ff;\n  }\n  &__actions {\n    display: flex;\n    justify-content: flex-end;\n    gap: 0.25rem;\n  }\n  &__button {\n    font: inherit;\n    cursor: pointer;\n    border: none;\n    padding: 0.75rem 1.25rem;\n    border-radius: 4px;\n    background-color: #071474;\n    color: #a4b3ff;\n\n    &:hover,\n    &:active {\n      background-color: #334893;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      PlacePicker          Close HTTP request            Create your personal collection of places you would like to visit or you have visited.              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-16'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TasksContainerComponent', 'selector': 'app-tasks-container'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'NewRequestComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NewTaskComponent.html":{"url":"components/NewTaskComponent.html","title":"component - NewTaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NewTaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/new-task/new-task.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-new-task\n            \n\n\n\n            \n                styleUrls\n                ./new-task.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./new-task.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                enteredDate\n                            \n                            \n                                enteredSummary\n                            \n                            \n                                enteredTitle\n                            \n                            \n                                isTesting\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                lessonId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(taskService: TaskService, route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/components/new-task/new-task.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        lessonId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/components/new-task/new-task.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/components/new-task/new-task.component.ts:11\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/new-task/new-task.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        enteredDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/components/new-task/new-task.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enteredSummary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/components/new-task/new-task.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enteredTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/components/new-task/new-task.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTesting\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/components/new-task/new-task.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, effect, EventEmitter, Input, Output } from '@angular/core';\nimport { TaskService } from '../../services/tasks/tasks.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n@Component({\n  selector: 'app-new-task',\n  templateUrl: './new-task.component.html',\n  styleUrls: ['./new-task.component.scss']\n})\nexport class NewTaskComponent {\n  @Input({required: true}) lessonId!: string;\n  @Output() close = new EventEmitter();\n  enteredTitle = '';\n  enteredSummary = '';\n  enteredDate = '';\n  isTesting = false;\n\n  constructor(private taskService: TaskService, private route: ActivatedRoute, private router: Router) {\n    if (!this.isTesting) {\n      effect(() => {\n        const parentParams = this.route.parent?.snapshot.paramMap;\n        const id = parentParams?.get('lessonId');\n        if (id) this.lessonId = id;\n      });\n    }\n  }\n\n  onSubmit() {\n    this.taskService.addTask({ title: this.enteredTitle, summary: this.enteredSummary, date: this.enteredDate, status: 'OPEN' }, this.lessonId );\n    this.router.navigate(['../'], {relativeTo: this.route});\n  };\n}\n\n    \n\n    \n        \n  Add Task\n  \n    Cancel\n    Create\n  \n\n\n\n  \n    Title\n    \n  \n  \n    Summary\n    \n  \n  \n    Due Date\n    \n  \n\n\n    \n\n    \n                \n                    ./new-task.component.scss\n                \n                .add-task-form {\n  padding: 0% 2% 2% 2%;\n\n  &__header {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 1rem;\n    padding: 2% 2% 0 2%;\n  }\n  &__title {\n    margin: 0;\n    margin-bottom: 1rem;\n    color: #c2c9e1;\n  }\n  &__group {\n    margin-bottom: 1rem;\n  }\n  &__label {\n    display: block;\n    font-weight: bold;\n    font-size: 0.85rem;\n    color: #9aa5c0;\n    margin-bottom: 0.25rem;\n  }\n  &__control {\n    width: 100%;\n    font: inherit;\n    padding: 0.15rem 0.25rem;\n    border-radius: 4px;\n    border: 1px solid #9aa4c0;\n    background-color: #c2c4e1;\n    margin-bottom: 0.5rem;\n  }\n  &__actions {\n    margin-bottom: 1rem;\n    display: flex;\n    justify-content: flex-end;\n    gap: 0.25rem;\n  }\n  &__button {\n    font: inherit;\n    cursor: pointer;\n    border: none;\n    padding: 0.35rem 1.25rem;\n    border-radius: 4px;\n    background-color: transparent;\n\n    &--cancel {\n      color: #adb3cf;\n      &:hover,\n      &:active {\n        color: #c2cae1;\n      }\n    }\n    &--submit {\n      background-color: #737fca;\n      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);\n      transition: all 0.3s ease;\n      &:hover,\n      &:active {\n        background-color: #5c80ce;\n        box-shadow: 0 1px 6px rgba(0, 0, 0, 0.3);\n      }\n    }\n  }\n}\n\n@media (min-width: 768px) {\n  dialog {\n    padding: 2rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Add Task      Cancel    Create        Title            Summary            Due Date      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-16'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TasksContainerComponent', 'selector': 'app-tasks-container'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'NewTaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NewTaskData.html":{"url":"interfaces/NewTaskData.html","title":"interface - NewTaskData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NewTaskData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/task/task.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            summary\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        summary\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        summary:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type TaskStatus = 'OPEN' | 'IN_PROGRESS' | 'DONE';\nexport interface Task {\n  id: string;\n  lessonId: string;\n  title: string;\n  summary: string;\n  dueDate: string;\n  status: string;\n}\nexport interface NewTaskData {\n  title: string;\n  summary: string;\n  date: string,\n  status: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/not-found/not-found.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n\n\n            \n                styleUrls\n                ./not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent {\n\n}\n\n    \n\n    \n        \n  Sorry! Page not found\n  The URL you requested could not be found.\n  Back to main page\n\n\n    \n\n    \n                \n                    ./not-found.component.scss\n                \n                .not-found {\n  text-align: center;\n  padding-top: 5rem;\n  height: 46.5rem;\n  background-color: #1e1d20;\n\n  &__title {\n    font-size: 3rem;\n    color: #dc2626;\n  }\n\n  &__description {\n    font-size: 1.2rem;\n    margin-bottom: 2rem;\n    color: #cdd5f2;\n  }\n\n  &__back-link {\n    padding: 0.5rem 1rem;\n    background-color: #071474;\n    color: #cdd5f2;\n    text-decoration: none;\n    border-radius: 0.375rem;\n    display: inline-block;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Sorry! Page not found  The URL you requested could not be found.  Back to main page'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-16'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TasksContainerComponent', 'selector': 'app-tasks-container'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Place.html":{"url":"interfaces/Place.html","title":"interface - Place","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Place\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/http-request/place-model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            lat\n                                        \n                                \n                                \n                                        \n                                            lon\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lon:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Place {\n  id: string;\n  title: string;\n  image: {\n    src: string;\n    alt: string;\n  };\n  lat: number;\n  lon: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlacesComponent.html":{"url":"components/PlacesComponent.html","title":"component - PlacesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlacesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/http-request/places/places.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-places\n            \n\n\n\n            \n                styleUrls\n                ./places.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./places.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSelectPlace\n                            \n                            \n                                trackById\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                places\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectPlace\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        places\n                    \n                \n                \n                    \n                        Type :         Place[]\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/components/http-request/places/places.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectPlace\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/components/http-request/places/places.component.ts:11\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSelectPlace\n                        \n                    \n                \n            \n            \n                \nonSelectPlace(place: Place)\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/http-request/places/places.component.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                place\n                                            \n                                                            Place\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackById\n                        \n                    \n                \n            \n            \n                \ntrackById(index: number, place: Place)\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/http-request/places/places.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                place\n                                            \n                                                            Place\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { type Place } from '../place-model';\n\n@Component({\n  selector: 'app-places',\n  templateUrl: './places.component.html',\n  styleUrls: ['./places.component.scss']\n})\nexport class PlacesComponent {\n  @Input({ required: true }) places: Place[] = [];\n  @Output() selectPlace = new EventEmitter();\n\n  onSelectPlace(place: Place) {\n    this.selectPlace.emit(place);\n  }\n\n  trackById(index: number, place: Place): string {\n    return place.id;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      {{ place.title }}\n    \n  \n\n\n    \n\n    \n                \n                    ./places.component.scss\n                \n                .places-list {\n  max-width: 80rem;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(18rem, 1fr));\n  grid-gap: 2rem;\n  margin: 2rem auto;\n  padding: 0;\n  list-style: none;\n\n  &__item {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    border-radius: 8px;\n    background: #1f1c2c;\n    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);\n    animation: slide-up-fade-in 0.3s ease-out forwards;\n  }\n\n  &__button {\n    background: transparent;\n    border: none;\n    padding: 0;\n    transition: all 0.2s ease-in-out;\n  }\n\n  &__item:nth-child(odd) &__button:hover,\n  &__item:nth-child(odd) &__button:focus {\n    box-shadow: 0 0 8px 4px rgba(255, 217, 0, 0.6);\n    border-radius: 8px;\n    transform: rotate(5deg);\n  }\n\n  &__item:nth-child(even) &__button:hover,\n  &__item:nth-child(even) &__button:focus {\n    box-shadow: 0 0 8px 4px rgba(255, 217, 0, 0.6);\n    border-radius: 8px;\n    transform: rotate(-5deg);\n  }\n\n  &__image {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    border-radius: 0.5rem;\n  }\n\n  &__title {\n    font-family: \"Raleway\", sans-serif;\n    font-weight: normal;\n    font-size: 0.9rem;\n    position: absolute;\n    bottom: 0;\n    right: 1rem;\n    margin: 1rem auto;\n    background-color: #feee86;\n    border-radius: 4px;\n    padding: 0.15rem 0.35rem;\n    box-shadow: 0 1px 4px rgba(0, 0, 0, 0.4);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ place.title }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-16'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TasksContainerComponent', 'selector': 'app-tasks-container'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlacesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlacesContainerComponent.html":{"url":"components/PlacesContainerComponent.html","title":"component - PlacesContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlacesContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/http-request/places-container/places-container.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-places-container\n            \n\n\n\n            \n                styleUrls\n                ./places-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./places-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/components/http-request/places-container/places-container.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-places-container',\n  templateUrl: './places-container.component.html',\n  styleUrls: ['./places-container.component.scss']\n})\nexport class PlacesContainerComponent {\n  @Input({ required: true }) title = '';\n}\n\n    \n\n    \n        \n  {{ title }}\n  \n\n\n    \n\n    \n                \n                    ./places-container.component.scss\n                \n                .content-section {\n  max-width: 85rem;\n  margin: 2rem auto;\n  padding: 1rem;\n  border: 2px solid #0d373e;\n  border-radius: 8px;\n\n  &__title {\n    font-family: \"Raleway\", sans-serif;\n    font-size: 1.5rem;\n    margin: 0 0 1rem 0;\n    padding: 0;\n    color: #adc9ff;\n    text-align: center;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ title }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-16'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TasksContainerComponent', 'selector': 'app-tasks-container'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlacesContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/RemoteA16Interceptor.html":{"url":"interceptors/RemoteA16Interceptor.html","title":"interceptor - RemoteA16Interceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  RemoteA16Interceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptors/remote-a16-interceptor/remote-a16.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/interceptors/remote-a16-interceptor/remote-a16.interceptor.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class RemoteA16Interceptor implements HttpInterceptor {\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const apiHost = 'http://localhost:4202';\n    let newReq = req;\n    if (!req.url.startsWith('http')) {\n      newReq = req.clone({ url: apiHost + req.url });\n    }\n    console.log('Intercepted by RemoteA16Interceptor');\n    return next.handle(newReq);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SafeLinkDirective.html":{"url":"directives/SafeLinkDirective.html","title":"directive - SafeLinkDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  SafeLinkDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/directives/safe-link/safe-link.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        a[appSafeLink]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onConfirmLeavePage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                appSafeLink\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(hostElementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/directives/safe-link/safe-link.directive.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        hostElementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        appSafeLink\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/directives/safe-link/safe-link.directive.ts:9\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onConfirmLeavePage\n                        \n                    \n                \n            \n            \n                \nonConfirmLeavePage(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/directives/safe-link/safe-link.directive.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, Input } from '@angular/core';\n@Directive({\n  selector: 'a[appSafeLink]',\n  host: {\n    '(click)': 'onConfirmLeavePage($event)'\n  }\n})\nexport class SafeLinkDirective { // Atribute self directive\n  @Input('appSafeLink') routeParam: string = '';\n\n  constructor(private hostElementRef: ElementRef) {}\n\n  onConfirmLeavePage(event: MouseEvent) {\n    const wantsToLeave = window.confirm('Do you want to leave the app?');\n\n    if (wantsToLeave) {\n      const address = this.hostElementRef.nativeElement.href;\n      // const address = (event.target as HTMLAnchorElement).href;\n      this.hostElementRef.nativeElement.href = address + this.routeParam;\n      // (event.target as HTMLAnchorElement).href = address + this.routeParam();\n      return;\n    }\n\n    event?.preventDefault();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAuthDirective\n\nAuthDirective\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nAuthDirective->SharedModule\n\n\n\n\n\nSafeLinkDirective\n\nSafeLinkDirective\n\nSharedModule -->\n\nSafeLinkDirective->SharedModule\n\n\n\n\n\nTemperaturePipe\n\nTemperaturePipe\n\nSharedModule -->\n\nTemperaturePipe->SharedModule\n\n\n\n\n\nAuthDirective \n\nAuthDirective \n\nAuthDirective  -->\n\nSharedModule->AuthDirective \n\n\n\n\n\nSafeLinkDirective \n\nSafeLinkDirective \n\nSafeLinkDirective  -->\n\nSharedModule->SafeLinkDirective \n\n\n\n\n\nTemperaturePipe \n\nTemperaturePipe \n\nTemperaturePipe  -->\n\nSharedModule->TemperaturePipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AuthDirective\n                        \n                        \n                            SafeLinkDirective\n                        \n                        \n                            TemperaturePipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthDirective\n                        \n                        \n                            SafeLinkDirective\n                        \n                        \n                            TemperaturePipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { TemperaturePipe } from \"../pipes/temperature/temperature.pipe\";\nimport { SafeLinkDirective } from \"../directives/safe-link/safe-link.directive\";\n\nimport { AuthDirective } from \"../directives/auth/auth.directive\";\nimport { RouterModule } from \"@angular/router\";\n\n@NgModule({\n  declarations: [ TemperaturePipe, SafeLinkDirective, AuthDirective ],\n  imports: [ CommonModule, FormsModule, RouterModule ],\n  exports: [ CommonModule, FormsModule, RouterModule, TemperaturePipe, SafeLinkDirective, AuthDirective ]\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SimpleFormComponent.html":{"url":"components/SimpleFormComponent.html","title":"component - SimpleFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SimpleFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/template-form/simple-form/simple-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-simple-form\n            \n\n\n\n            \n                styleUrls\n                ./simple-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./simple-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                form\n                            \n                            \n                                isTesting\n                            \n                            \n                                    Private\n                                    Optional\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/template-form/simple-form/simple-form.component.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/template-form/simple-form/simple-form.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit(formData: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/template-form/simple-form/simple-form.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                formData\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgForm\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('form')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/components/template-form/simple-form/simple-form.component.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTesting\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/components/template-form/simple-form/simple-form.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/components/template-form/simple-form/simple-form.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, OnDestroy, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { debounceTime, Subscription } from 'rxjs';\n@Component({\n  selector: 'app-simple-form',\n  templateUrl: './simple-form.component.html',\n  styleUrls: ['./simple-form.component.scss']\n})\nexport class SimpleFormComponent implements AfterViewInit, OnDestroy {\n  @ViewChild('form') form!: NgForm;\n  private subscription?: Subscription;\n  isTesting = false; // Flag to avoid setValue in Testing\n\n  ngAfterViewInit(): void {\n    const savedEmail = JSON.parse(localStorage.getItem('saved-login-form') || 'null');\n    if (savedEmail && this.form && !this.isTesting) {\n      this.form.setValue({ email: savedEmail, password: '' });\n    }\n    this.subscription = this.form.valueChanges?.pipe(debounceTime(500)).subscribe({\n      next: (value) =>\n        localStorage.setItem('saved-login-form', JSON.stringify(value.email))\n    });\n  }\n\n  onSubmit(formData: NgForm) {\n    if (formData.invalid) { return; }\n    const { email, password } = formData.value;\n    console.log(email, password);\n    formData.reset();\n  }\n\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  Login\n  \n    \n      Email\n      \n    \n\n    \n      Password\n      \n    \n\n    Login\n  \n\n  \n    Invalid email. Please try again\n  \n\n  \n    Invalid password, it must be at least 6 characters. Please try again\n  \n\n\n    \n\n    \n                \n                    ./simple-form.component.scss\n                \n                .login-form {\n  max-width: 40rem;\n  padding: 1rem;\n  background: linear-gradient(180deg, #070b3d, #23263b);\n  border-radius: 8px;\n  box-shadow: 0 0 16px 1px rgba(0, 0, 0, 0.5);\n\n  &__title {\n    margin: 0;\n    color: rgb(228, 233, 250);\n  }\n  &__row {\n    margin: 0.5rem 0;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n    gap: 0.5rem;\n\n    .login-form__group {\n      flex: 1;\n    }\n  }\n  &__group {\n    margin: 0.5rem 0;\n\n    &--no-margin {\n      margin-right: 5%;\n      margin-bottom: 0;\n    }\n  }\n  &__label {\n    display: block;\n    font-size: 0.8rem;\n    margin-bottom: 0.2rem;\n    color: #9bafaf;\n    text-transform: uppercase;\n    font-weight: bold;\n  }\n  &__control {\n    display: block;\n    width: 100%;\n    max-width: 15rem;\n    padding: 0.5rem;\n    font-size: 1rem;\n    border-radius: 4px;\n    border: 1px solid #758a8a;\n    background-color: #89a3ff;\n    color: #142020;\n\n    &.ng-invalid.ng-touched.ng-dirty {\n      background-color: #fbdcd6;\n      border-color: #f84e2c;\n    }\n  }\n  &__error {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 0.5rem;\n    color: #ffca99;\n    padding: 0.25rem 0 0 0;\n    height: 1.5rem;\n    margin-bottom: 1rem;\n\n    p {\n      margin: 0;\n      font-weight: bold;\n      color: rgb(228, 233, 250);\n    }\n  }\n  &__button {\n    font: inherit;\n    font-size: 0.9rem;\n    cursor: pointer;\n    background-color: #594b0e;\n    color: #cdd5f2;\n    border-radius: 4px;\n    padding: 0.5rem 1.5rem;\n    border: none;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);\n    transition: all 0.3s ease;\n\n    &:hover,\n    &:active {\n      background-color: #cbac21;\n      box-shadow: 0 1px 6px rgba(0, 0, 0, 0.3);\n    }\n  }\n  &__button:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n}\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Login            Email                    Password              Login        Invalid email. Please try again        Invalid password, it must be at least 6 characters. Please try again  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-16'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TasksContainerComponent', 'selector': 'app-tasks-container'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'SimpleFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/task/task.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            dueDate\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lessonId\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            summary\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dueDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dueDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lessonId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lessonId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        summary\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        summary:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type TaskStatus = 'OPEN' | 'IN_PROGRESS' | 'DONE';\nexport interface Task {\n  id: string;\n  lessonId: string;\n  title: string;\n  summary: string;\n  dueDate: string;\n  status: string;\n}\nexport interface NewTaskData {\n  title: string;\n  summary: string;\n  date: string,\n  status: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskComponent.html":{"url":"components/TaskComponent.html","title":"component - TaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/task/task.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task\n            \n\n\n\n            \n                styleUrls\n                ./task.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./task.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                customInterval$\n                            \n                            \n                                    Private\n                                customSubscription\n                            \n                            \n                                isAddingRequest\n                            \n                            \n                                regularInterval\n                            \n                            \n                                    Private\n                                regularSubscription\n                            \n                            \n                                slowCurstomInterval\n                            \n                            \n                                temperature\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChangeTaskStatus\n                            \n                            \n                                onCloseAddRequest\n                            \n                            \n                                onCompleteTask\n                            \n                            \n                                onStartAddRequest\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                task\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                taskUpdated\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    taskStatus\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(taskService: TaskService)\n                    \n                \n                        \n                            \n                                Defined in src/components/task/task.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        task\n                    \n                \n                \n                    \n                        Type :         Task\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/components/task/task.component.ts:11\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        taskUpdated\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/components/task/task.component.ts:12\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/task/task.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/task/task.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChangeTaskStatus\n                        \n                    \n                \n            \n            \n                \nonChangeTaskStatus(taskId: string, status: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/task/task.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                taskId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCloseAddRequest\n                        \n                    \n                \n            \n            \n                \nonCloseAddRequest()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/task/task.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCompleteTask\n                        \n                    \n                \n            \n            \n                \nonCompleteTask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/task/task.component.ts:80\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onStartAddRequest\n                        \n                    \n                \n            \n            \n                \nonStartAddRequest()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/task/task.component.ts:85\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        customInterval$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Observable((subscriber) => {\n    setInterval(() => {\n      subscriber.next({message: 'New Value', value: 1})\n    }, 2000);\n  })\n                    \n                \n                    \n                        \n                                Defined in src/components/task/task.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        customSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/components/task/task.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAddingRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/components/task/task.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        regularInterval\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/components/task/task.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        regularSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/components/task/task.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slowCurstomInterval\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/components/task/task.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        temperature\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 39\n                    \n                \n                    \n                        \n                                Defined in src/components/task/task.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        taskStatus\n                    \n                \n\n                \n                    \n                        gettaskStatus()\n                    \n                \n                            \n                                \n                                    Defined in src/components/task/task.component.ts:48\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { TaskStatus, type Task } from \"./task.model\";\nimport { TaskService } from '../../services/tasks/tasks.service';\nimport { interval, map, Observable, Subscription } from 'rxjs';\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.scss']\n})\nexport class TaskComponent implements OnInit, OnDestroy{\n  @Input({required: true}) task!: Task;\n  @Output() taskUpdated = new EventEmitter();\n\n  isAddingRequest = false // Variable needed for the HTTP request component.\n  temperature: number = 39; // Variable needed for the temperature Pipe.\n\n  // Regular Observable\n  regularInterval = 0;\n  private regularSubscription!: Subscription;\n  // Custom Observable\n  slowCurstomInterval = 0;\n  private customSubscription!: Subscription;\n  customInterval$ = new Observable((subscriber) => {\n    setInterval(() => {\n      subscriber.next({message: 'New Value', value: 1})\n    }, 2000);\n  });\n\n  constructor(private taskService: TaskService) {}\n\n  ngOnInit(): void {\n    this.regularSubscription = interval(1000).pipe( // Normal interval observable\n      map((val) => val * 2)\n    ).subscribe({\n      next: (val) => this.regularInterval = val\n    });\n\n    this.customSubscription = this.customInterval$.subscribe({\n      next: (val) => this.slowCurstomInterval = this.slowCurstomInterval + 1\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.regularSubscription.unsubscribe();\n    this.customSubscription.unsubscribe();\n  }\n\n  get taskStatus(): string {\n    switch (this.task.status) {\n      case 'OPEN':\n        return 'Open';\n      case 'IN_PROGRESS':\n        return 'Working on it';\n      case 'DONE':\n        return 'Completed';\n      default:\n        return 'Open';\n    }\n  }\n  onChangeTaskStatus(taskId: string, status: string) {\n    let newStatus: TaskStatus = 'OPEN';\n\n    switch (status) {\n      case 'open':\n        newStatus = 'OPEN';\n        break;\n      case 'in-progress':\n        newStatus = 'IN_PROGRESS';\n        break;\n      case 'done':\n        newStatus = 'DONE';\n        break;\n      default:\n        break;\n    }\n\n    this.taskService.updateTaskStatus(taskId, newStatus);\n    this.taskUpdated.emit();\n  }\n  onCompleteTask() {\n    this.taskService.removeTask(this.task.id);\n    this.taskUpdated.emit();\n  }\n\n  onStartAddRequest() { this.isAddingRequest = true };\n  onCloseAddRequest() { this.isAddingRequest = false };\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ task.title }}\n        {{ taskStatus }}\n      \n      \n        \n          Open\n          \n            In-Progress\n          \n          \n            Completed\n          \n        \n        \n          Change Status\n        \n      \n      \n        Complete\n      \n    \n    {{ task.dueDate | date:'fullDate'}}\n    {{ task.summary }}\n\n    \n      \n        One-way: Interpolation uses: {{ expresion }}\n        One-way: Property binding uses: [src]=\"imageUrl\"\n        One-way: Event binding uses: (click)=\"onClick()\"\n        Two-way: Biding uses: [(ngModel)]=\"username\" \n      \n    \n    \n      \n        Structural directives: Modify the structure of the DOM, adding or removing elements.\n        Attribute directives: Change the appearance or behavior of an element, such as modifying styles or attributes.\n        Components: These are directives with their own template, that is, they combine logic and view, and are the basis of any Angular application.\n        \n          \n            \n              Example of a structural directive called \"*appAuth\" and an attribute directive called \"appSafeLink\":\n              Link to Angular site!\n            \n          \n        \n      \n    \n    \n      \n        Example of the inbuild \"DatePipe\" and a custom pipe named \"temperature\" that can accept up to two configuration attributes:\n        \n          Custom pipe: {{ temperature | temperature:'cel':'fah' }}  {{ temperature | temperature:'fah':'cel' }}\n          In build pipe: {{ task.dueDate | date:'fullDate'}}\n        \n      \n    \n    \n      \n        Angular has an Injector that manages dependencies declared as providers.If a component or service needs another class, Angular\n         looks for that class in the injection tree, creates it (if necessary), and delivers it.\n         Any class marked with the &#64;Injectable() decorator can be a dependency.\n         \n          Angular allows you to control the scope of the injected instance:\n          \n            providedIn: 'root': Global singleton, available throughout the application and Only one instance.\n            providedIn: 'platform' (Advanced): Available across the entire platform, even beyond multiple Angular apps on the same page.\n            providedIn: 'any': A new instance for each lazy-loaded module and useful for isolating services between modules.\n            providedIn: 'self' / SkipSelf (advanced): Controls which level of the Angular injector to resolve the dependency and used in\n              conjunction with &#64;Optional, &#64;Self, &#64;SkipSelf, etc.\n          \n        \n         In addition to providedIn, Angular also allows you to declare providers in various places: &#64;Injectable( providedIn: 'root' ),\n           providers: [] in a component, providers: [] in a module and Injector.create()\n          Manual or advanced injection: Injecting custom tokens, injecting values ​​(useValue), Injecting concrete classes (useClass) and\n        Injecting factories (useFactory)\n      \n    \n    \n      \n        Observables are values on a stream of data and are great for managing events or streamed data.\n        Signals are values on a container and are great for managind the applicationstate. \n        This is the example of an buld in observable: {{regularInterval}}\n      \n    \n    \n      \n        \n          HTTP Requests in Angular allow your application to communicate with external servers to send or receive data, such as:\n          \n            Retrieving information from a REST API, Submitting forms, Saving data to a database, Authentication, etc. \n          \n        \n        \n          Types of HTTP Requests:\n          \n            GET: Obtains data from the server. Used to read information, such as a list of users or products.\n            POST: Sends data to the server. Used to create new resources (for example, registering a user).\n            PUT: Completely replaces an existing resource. Used when you want to update an entire object.\n            PATCH: Partially updates a resource. Use it when you only want to change some fields of the object.\n            DELETE: Deletes a resource from the server.\n          \n        \n      \n\n      \n      \n        Click on me to learn more about HTTP requests with images!\n      \n    \n    \n      \n        \n          Guards types\n          \n            CanMatch: Decides whether a route can be used by the router before it is even evaluated whether it can be activated or loaded.\n            CanActivate: Determines whether a route can be activated. This is useful for protecting routes that should only be accessible to authenticated users or those with certain permissions.\n            CanDeactivate: Controls whether a user can exit a route. The most typical example is unsaved data.\n            CanLoad: Prevents a lazy-loaded module from loading if certain conditions are not met.\n          \n        \n        \n          Data types in the guards\n          \n            data: Allows you to associate custom static information with a route.\n            resolve: Allows you to obtain necessary data before a route is activated. Ensures that the information is available before displaying the associated component.\n          \n        \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./task.component.scss\n                \n                .task-card {\n  padding: 1rem;\n  color: #11193d;\n  background-color: #9ea4e5;\n\n  &__header {\n    display: flex;\n    justify-content: space-between;\n    gap: 0.5rem;\n    align-items: center;\n    margin-bottom: 0.5rem;\n\n    span {\n      display: flex;\n      width: 65%;\n    }\n  }\n  &__title {\n    color: #594b0e;\n    margin: 0;\n    margin-right: 2%;\n  }\n  &__status {\n    margin: 0;\n    font-size: 0.75rem;\n    font-weight: bold;\n    padding: 0.15rem 0.25rem;\n    background-color: #594b0e;\n    color: #cdd5f2;\n    border-radius: 4px;\n  }\n  &__status-form {\n    text-align: right;\n    display: flex;\n    gap: 1rem;\n    justify-content: flex-end;\n    align-items: center;\n    height: 35px;\n  }\n  &__status-select {\n    font: inherit;\n    padding: 0.15rem;\n    border: none;\n    background-color: #575754;\n    color: #fefefe;\n    border-radius: 0.25rem;\n    font-size: 0.75rem;\n  }\n  &__actions {\n    text-align: right;\n    margin: 0;\n  }\n  &__button {\n    font: inherit;\n    font-size: 0.9rem;\n    cursor: pointer;\n    background-color: #594b0e;\n    color: #cdd5f2;\n    border-radius: 4px;\n    padding: 0.5rem 1.5rem;\n    border: none;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);\n    transition: all 0.3s ease;\n\n    &:hover,\n    &:active {\n      background-color: #cbac21;\n      box-shadow: 0 1px 6px rgba(0, 0, 0, 0.3);\n    }\n  }\n  &__date {\n    color: #2c3150;\n    font-weight: bold;\n  }\n  &__summary {\n    color: #04207f;\n    font-weight: bold;\n  }\n  &__form-container {\n    display: flex;\n    justify-content: center;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ task.title }}        {{ taskStatus }}                              Open                      In-Progress                                Completed                                    Change Status                            Complete              {{ task.dueDate | date:\\'fullDate\\'}}    {{ task.summary }}                  One-way: Interpolation uses: {{ expresion }}        One-way: Property binding uses: [src]=\"imageUrl\"        One-way: Event binding uses: (click)=\"onClick()\"        Two-way: Biding uses: [(ngModel)]=\"username\"                             Structural directives: Modify the structure of the DOM, adding or removing elements.        Attribute directives: Change the appearance or behavior of an element, such as modifying styles or attributes.        Components: These are directives with their own template, that is, they combine logic and view, and are the basis of any Angular application.                                            Example of a structural directive called \"*appAuth\" and an attribute directive called \"appSafeLink\":              Link to Angular site!                                                          Example of the inbuild \"DatePipe\" and a custom pipe named \"temperature\" that can accept up to two configuration attributes:                  Custom pipe: {{ temperature | temperature:\\'cel\\':\\'fah\\' }}  {{ temperature | temperature:\\'fah\\':\\'cel\\' }}          In build pipe: {{ task.dueDate | date:\\'fullDate\\'}}                                    Angular has an Injector that manages dependencies declared as providers.If a component or service needs another class, Angular         looks for that class in the injection tree, creates it (if necessary), and delivers it.         Any class marked with the @Injectable() decorator can be a dependency.                   Angular allows you to control the scope of the injected instance:                      providedIn: \\'root\\': Global singleton, available throughout the application and Only one instance.            providedIn: \\'platform\\' (Advanced): Available across the entire platform, even beyond multiple Angular apps on the same page.            providedIn: \\'any\\': A new instance for each lazy-loaded module and useful for isolating services between modules.            providedIn: \\'self\\' / SkipSelf (advanced): Controls which level of the Angular injector to resolve the dependency and used in              conjunction with @Optional, @Self, @SkipSelf, etc.                           In addition to providedIn, Angular also allows you to declare providers in various places: @Injectable( providedIn: \\'root\\' ),           providers: [] in a component, providers: [] in a module and Injector.create()          Manual or advanced injection: Injecting custom tokens, injecting values ​​(useValue), Injecting concrete classes (useClass) and        Injecting factories (useFactory)                            Observables are values on a stream of data and are great for managing events or streamed data.        Signals are values on a container and are great for managind the applicationstate.         This is the example of an buld in observable: {{regularInterval}}                                      HTTP Requests in Angular allow your application to communicate with external servers to send or receive data, such as:                      Retrieving information from a REST API, Submitting forms, Saving data to a database, Authentication, etc.                                     Types of HTTP Requests:                      GET: Obtains data from the server. Used to read information, such as a list of users or products.            POST: Sends data to the server. Used to create new resources (for example, registering a user).            PUT: Completely replaces an existing resource. Used when you want to update an entire object.            PATCH: Partially updates a resource. Use it when you only want to change some fields of the object.            DELETE: Deletes a resource from the server.                                            Click on me to learn more about HTTP requests with images!                                      Guards types                      CanMatch: Decides whether a route can be used by the router before it is even evaluated whether it can be activated or loaded.            CanActivate: Determines whether a route can be activated. This is useful for protecting routes that should only be accessible to authenticated users or those with certain permissions.            CanDeactivate: Controls whether a user can exit a route. The most typical example is unsaved data.            CanLoad: Prevents a lazy-loaded module from loading if certain conditions are not met.                                    Data types in the guards                      data: Allows you to associate custom static information with a route.            resolve: Allows you to obtain necessary data before a route is activated. Ensures that the information is available before displaying the associated component.                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-16'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TasksContainerComponent', 'selector': 'app-tasks-container'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'TaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskService.html":{"url":"injectables/TaskService.html","title":"injectable - TaskService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/tasks/tasks.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activePermission\n                            \n                            \n                                    Private\n                                tasks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTask\n                            \n                            \n                                getLessonTasks\n                            \n                            \n                                removeTask\n                            \n                            \n                                    Private\n                                saveTasks\n                            \n                            \n                                taskAuthentication\n                            \n                            \n                                updateTaskStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/services/tasks/tasks.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTask\n                        \n                    \n                \n            \n            \n                \naddTask(task: NewTaskData, lessonId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/tasks/tasks.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task\n                                            \n                                                            NewTaskData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lessonId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLessonTasks\n                        \n                    \n                \n            \n            \n                \ngetLessonTasks(lessonId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/tasks/tasks.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                lessonId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeTask\n                        \n                    \n                \n            \n            \n                \nremoveTask(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/tasks/tasks.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        saveTasks\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveTasks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/tasks/tasks.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskAuthentication\n                        \n                    \n                \n            \n            \n                \ntaskAuthentication(taskCode: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/tasks/tasks.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                taskCode\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTaskStatus\n                        \n                    \n                \n            \n            \n                \nupdateTaskStatus(taskId: string, newStatus: TaskStatus)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/tasks/tasks.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                taskId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newStatus\n                                            \n                                                            TaskStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activePermission\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'guest'\n                    \n                \n                    \n                        \n                                Defined in src/services/tasks/tasks.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tasks\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DUMMY_TASKS\n                    \n                \n                    \n                        \n                                Defined in src/services/tasks/tasks.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { NewTaskData, TaskStatus, Task } from \"../../components/task/task.model\";\nimport { DUMMY_TASKS } from \"../../assets/dummy-data\";\n@Injectable({providedIn: 'root'})\nexport class TaskService {\n  private tasks = DUMMY_TASKS;\n\n  activePermission: string = 'guest';\n\n  constructor() {\n    const tasks = localStorage.getItem('tasks');\n\n    if (tasks) {\n      this.tasks = JSON.parse(tasks);\n    }\n  }\n\n  getLessonTasks(lessonId: string) {\n    return this.tasks.filter((task: Task) => task.lessonId === lessonId);\n  }\n  addTask(task: NewTaskData, lessonId: string) {\n    this.tasks.push({\n      id: new Date().getTime().toString(),\n      lessonId: lessonId,\n      title: task.title,\n      summary: task.summary,\n      dueDate: task.date,\n      status: task.status\n    });\n    this.saveTasks();\n  }\n  removeTask(id: string) {\n    this.tasks = this.tasks.filter((task: Task) => task.id !== id);\n    this.saveTasks();\n  }\n  updateTaskStatus(taskId: string, newStatus: TaskStatus) {\n    this.tasks = this.tasks.map((task) => task.id === taskId ? { ...task, status: newStatus } : task);\n    this.saveTasks();\n  }\n\n  private saveTasks() {\n    localStorage.setItem('tasks', JSON.stringify(this.tasks));\n  }\n\n  // Estructural directive method\n  taskAuthentication(taskCode: boolean) {\n    if (taskCode) {\n      this.activePermission = 'fede';\n    } else {\n      this.activePermission = 'guest';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TasksComponent.html":{"url":"components/TasksComponent.html","title":"component - TasksComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TasksComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/tasks/tasks.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tasks\n            \n\n\n\n            \n                styleUrls\n                ./tasks.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tasks.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayedTasks\n                            \n                            \n                                isAddingTask\n                            \n                            \n                                    Private\n                                    Optional\n                                queryParamsSub\n                            \n                            \n                                selectedFilter\n                            \n                            \n                                selectedSort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChangeTasksFilter\n                            \n                            \n                                onCloseAddTask\n                            \n                            \n                                onSortChange\n                            \n                            \n                                onStartAddTask\n                            \n                            \n                                onTaskChanged\n                            \n                            \n                                updateDisplayedTasks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                lessonId\n                            \n                            \n                                lessonName\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(taskService: TaskService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/components/tasks/tasks.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        lessonId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/components/tasks/tasks.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        lessonName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/components/tasks/tasks.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/tasks/tasks.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/tasks/tasks.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChangeTasksFilter\n                        \n                    \n                \n            \n            \n                \nonChangeTasksFilter(filter: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/tasks/tasks.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCloseAddTask\n                        \n                    \n                \n            \n            \n                \nonCloseAddTask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/tasks/tasks.component.ts:82\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSortChange\n                        \n                    \n                \n            \n            \n                \nonSortChange(sort: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/tasks/tasks.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sort\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onStartAddTask\n                        \n                    \n                \n            \n            \n                \nonStartAddTask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/tasks/tasks.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTaskChanged\n                        \n                    \n                \n            \n            \n                \nonTaskChanged()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/tasks/tasks.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateDisplayedTasks\n                        \n                    \n                \n            \n            \n                \nupdateDisplayedTasks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/tasks/tasks.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayedTasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/components/tasks/tasks.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAddingTask\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/components/tasks/tasks.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        queryParamsSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/components/tasks/tasks.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedFilter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'all'\n                    \n                \n                    \n                        \n                                Defined in src/components/tasks/tasks.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedSort\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"asc\" | \"desc\"\n\n                    \n                \n                \n                    \n                        Default value : 'asc'\n                    \n                \n                    \n                        \n                                Defined in src/components/tasks/tasks.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { TaskService } from '../../services/tasks/tasks.service';\nimport { Task } from '../task/task.model';\nimport { ActivatedRoute, ActivatedRouteSnapshot, ResolveFn, RouterStateSnapshot } from '@angular/router';\nimport { DUMMY_LESSONS } from \"../../assets/dummy-data\";\nimport { Subscription } from 'rxjs';\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.scss']\n})\nexport class TasksComponent {\n  @Input({required: true}) lessonId!: string;\n  @Input({required: true}) lessonName!: string;\n\n  isAddingTask = false;\n  displayedTasks: Task[] = [];\n  selectedFilter = 'all';\n  selectedSort: 'asc' | 'desc' = 'asc';\n  private queryParamsSub?: Subscription;\n\n  constructor(private taskService: TaskService, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(params => {\n      this.lessonId = params.get('lessonId') || '';\n    });\n    this.route.data.subscribe(data => {\n      this.lessonName = data['lessonName'];\n    });\n\n    this.queryParamsSub = this.route.params.subscribe(params => {\n      this.lessonId = params['lessonId'];\n      this.route.queryParams.subscribe(qParams => {\n        this.selectedSort = qParams['sort'] === 'desc' ? 'desc' : 'asc';\n        this.updateDisplayedTasks();\n      });\n    });\n  }\n\n  onChangeTasksFilter(filter: string) {\n    this.selectedFilter = filter;\n    this.updateDisplayedTasks();\n  }\n  onSortChange(sort: string): void {\n    this.selectedSort = sort === 'desc' ? 'desc' : 'asc';\n    history.replaceState({}, '', `?sort=${this.selectedSort}`);\n    this.updateDisplayedTasks();\n  }\n  onTaskChanged() {\n    this.updateDisplayedTasks();\n  }\n  updateDisplayedTasks(): void {\n    const tasks = this.taskService.getLessonTasks(this.lessonId);\n\n    let filtered = tasks;\n    switch (this.selectedFilter) {\n      case 'open':\n        filtered = tasks.filter(t => t.status === 'OPEN');\n        break;\n      case 'in-progress':\n        filtered = tasks.filter(t => t.status === 'IN_PROGRESS');\n        break;\n      case 'done':\n        filtered = tasks.filter(t => t.status === 'DONE');\n        break;\n    }\n\n    this.displayedTasks = filtered.sort((a, b) =>\n      this.selectedSort === 'asc'\n        ? a.id.localeCompare(b.id)\n        : b.id.localeCompare(a.id)\n    );\n  }\n  ngOnDestroy(): void {\n    this.queryParamsSub?.unsubscribe();\n  }\n\n  onStartAddTask() {\n    this.isAddingTask = true;\n  }\n  onCloseAddTask() {\n    this.isAddingTask = false;\n  }\n}\n\n// No subscription needed on ActivatedRouteSnapshot because of route it self.\nexport const resolveLessonName: ResolveFn = (activatedRoute: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) => {\n  const lessonId = activatedRoute.paramMap.get('lessonId');\n  return DUMMY_LESSONS.find(lesson => lesson.id === lessonId)?.name || '';\n};\n\nexport const resolveTitle: ResolveFn = (activatedRoute: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) => {\n  return resolveLessonName(activatedRoute, routerState) + ' tasks';\n};\n\n    \n\n    \n        \n  \n    {{ lessonName }}'s Tasks\n    \n      \n        All\n        Open\n        In-Progress\n        Completed\n      \n    \n    \n      \n        Sort {{ selectedSort === 'asc' ? 'descending' : 'ascending' }}\n      \n      Add Task\n    \n  \n\n  \n    \n        \n    \n  \n\n\n    \n\n    \n                \n                    ./tasks.component.scss\n                \n                .tasks-section {\n  padding: 1rem;\n  border-radius: 8px;\n  max-height: 65vh;\n  overflow: auto;\n  background-color: #2c3354;\n\n  &__header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 1rem;\n    gap: 1rem;\n    height: 35px;\n  }\n  &__title {\n    margin: 0;\n    font-size: 0.9rem;\n    width: 60%;\n    text-wrap: balance;\n  }\n  &__filter-select {\n    font: inherit;\n    padding: 0.5rem;\n    border: none;\n    background-color: #262521;\n    color: #feeaa6;\n    border-radius: 0.25rem;\n    font-size: 0.9rem;\n  }\n  &__menu {\n    display: flex;\n    margin: 0;\n    padding: 0;\n    width: auto;\n  }\n  &__menu-button {\n    font: inherit;\n    cursor: pointer;\n    background-color: #021235;\n    border-radius: 4px;\n    border: none;\n    padding: 0.35rem 0.8rem;\n    font-size: 0.9rem;\n    color: antiquewhite;\n    margin: 5px;\n\n    &:hover,\n    &:active {\n      background-color: #3b6fde;\n    }\n  }\n  &__list {\n    list-style: none;\n    margin: 1rem 0;\n    padding: 0;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    max-height: 50vh;\n    overflow: auto;\n  }\n}\n\n@media (min-width: 768px) {\n  .tasks-section__title {font-size: 1.25rem};\n  .tasks-section__menu {width: auto};\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ lessonName }}\\'s Tasks                  All        Open        In-Progress        Completed                            Sort {{ selectedSort === \\'asc\\' ? \\'descending\\' : \\'ascending\\' }}            Add Task                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-16'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TasksContainerComponent', 'selector': 'app-tasks-container'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'TasksComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TasksContainerComponent.html":{"url":"components/TasksContainerComponent.html","title":"component - TasksContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TasksContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/tasks/tasks-container/tasks-container.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tasks-container\n            \n\n\n\n            \n                styleUrls\n                ./tasks-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tasks-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-tasks-container',\n  templateUrl: './tasks-container.component.html',\n  styleUrls: ['./tasks-container.component.scss']\n})\n\nexport class TasksContainerComponent {}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./tasks-container.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root-angular-16'},{'name': 'AvailablePlacesComponent', 'selector': 'app-available-places'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ErrorModalComponent', 'selector': 'app-error-modal'},{'name': 'FavoritePlacesComponent', 'selector': 'app-favorite-places'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LessonComponent', 'selector': 'app-lesson'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'NewRequestComponent', 'selector': 'app-new-request'},{'name': 'NewTaskComponent', 'selector': 'app-new-task'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PlacesComponent', 'selector': 'app-places'},{'name': 'PlacesContainerComponent', 'selector': 'app-places-container'},{'name': 'SimpleFormComponent', 'selector': 'app-simple-form'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TasksContainerComponent', 'selector': 'app-tasks-container'}];\n    var DIRECTIVES = [{'name': 'AuthDirective', 'selector': '[appAuth]'},{'name': 'SafeLinkDirective', 'selector': 'a[appSafeLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'TasksContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TemperaturePipe.html":{"url":"pipes/TemperaturePipe.html","title":"pipe - TemperaturePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TemperaturePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/pipes/temperature/temperature.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        temperature\n                    \n                    \n                        Pure\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string | number | null, inputType: \"cel\" | \"fah\", outputType?: \"cel\" | \"fah\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/pipes/temperature/temperature.pipe.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                inputType\n                                            \n                                                        \"cel\" | \"fah\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                outputType\n                                            \n                                                        \"cel\" | \"fah\"\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n@Pipe({\n  name: 'temperature',\n  pure: true // When pure is false, turns off the default security chache mecanism, which prevents too many pipe executions.\n})\nexport class TemperaturePipe implements PipeTransform {\n\n  transform(value: string | number | null, inputType: 'cel' | 'fah', outputType?: 'cel' | 'fah') {\n    if (value === null || value === undefined) { return value; }\n    if (value === '') { return value; }\n\n    let val: number;\n\n    if (typeof value === 'string') { val = parseFloat(value) } else { val = value };\n\n    let outputTemp: number;\n\n    if (inputType === 'cel' && outputType === 'fah') {\n      outputTemp = val * (9 / 5) + 32;\n    } else if (inputType === 'fah' && outputType === 'cel') {\n      outputTemp = (val - 32) * (5 / 9);\n    } else {\n      outputTemp = val;\n    }\n\n    let symbol: 'ºC' | 'ºF';\n\n    if (!outputType) { symbol = inputType === 'cel' ? 'ºC' : 'ºF' } else { symbol = outputType === 'cel' ? 'ºC' : 'ºF' };\n\n    return `${outputTemp.toFixed(2)} ${symbol}`;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/app/remote-providers.ts\n            \n            variable\n            loadPlacesService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/assets/dummy-data.ts\n            \n            variable\n            DUMMY_LESSONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/assets/dummy-data.ts\n            \n            variable\n            DUMMY_TASKS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/http-request/available-places/available-places.component.ts\n            \n            component\n            AvailablePlacesComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/components/http-request/favorite-places/favorite-places.component.ts\n            \n            component\n            FavoritePlacesComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/components/http-request/new-request/new-request.component.ts\n            \n            component\n            NewRequestComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/components/http-request/place-model.ts\n            \n            interface\n            Place\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/components/http-request/places-container/places-container.component.ts\n            \n            component\n            PlacesContainerComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/components/http-request/places/places.component.ts\n            \n            component\n            PlacesComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/components/lesson/lesson.component.ts\n            \n            component\n            LessonComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/components/lesson/lesson.model.ts\n            \n            interface\n            Lesson\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/components/new-task/new-task.component.ts\n            \n            component\n            NewTaskComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/components/not-found/not-found.component.ts\n            \n            component\n            NotFoundComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/task/task.component.ts\n            \n            component\n            TaskComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/components/task/task.model.ts\n            \n            interface\n            NewTaskData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/components/task/task.model.ts\n            \n            interface\n            Task\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/components/task/task.model.ts\n            \n            type alias\n            TaskStatus\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/tasks/tasks-container/tasks-container.component.ts\n            \n            component\n            TasksContainerComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/tasks/tasks.component.ts\n            \n            component\n            TasksComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                        src/components/tasks/tasks.component.ts\n            \n            variable\n            resolveLessonName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/components/tasks/tasks.component.ts\n            \n            variable\n            resolveTitle\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/template-form/simple-form/simple-form.component.ts\n            \n            component\n            SimpleFormComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/directives/auth/auth.directive.ts\n            \n            directive\n            AuthDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/directives/safe-link/safe-link.directive.ts\n            \n            directive\n            SafeLinkDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/guards/can-leave-edit-page/can-leave-edit-page.guard.ts\n            \n            variable\n            canLeaveEditPage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/interceptors/remote-a16-interceptor/remote-a16.interceptor.ts\n            \n            interceptor\n            RemoteA16Interceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/pipes/temperature/temperature.pipe.ts\n            \n            pipe\n            TemperaturePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/tasks/tasks.service.ts\n            \n            injectable\n            TaskService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/shared/card/card.component.ts\n            \n            component\n            CardComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/modal-error/components/error/error-modal.component.ts\n            \n            component\n            ErrorModalComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/modal-error/components/modal/modal.component.ts\n            \n            component\n            ModalComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/modal-error/service/error.service.ts\n            \n            injectable\n            ErrorService\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^16.2.0\n        \n            @angular/common : ^16.2.0\n        \n            @angular/compiler : ^16.2.0\n        \n            @angular/core : ^16.2.0\n        \n            @angular/forms : ^16.2.0\n        \n            @angular/platform-browser : ^16.2.0\n        \n            @angular/platform-browser-dynamic : ^16.2.0\n        \n            @angular/router : ^16.2.0\n        \n            rxjs : ~7.8.0\n        \n            zone.js : ~0.13.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMfAngular16\nThis project was generated using Angular CLI version 19.2.8.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ComponentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ComponentsModule\n\n\n\ncluster_ComponentsModule_declarations\n\n\n\ncluster_ComponentsModule_exports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nComponentsModule\n\nComponentsModule\n\nComponentsModule -->\n\nSharedModule->ComponentsModule\n\n\n\n\n\nAuthDirective \n\nAuthDirective \n\nAuthDirective  -->\n\nSharedModule->AuthDirective \n\n\n\n\n\nSafeLinkDirective \n\nSafeLinkDirective \n\nSafeLinkDirective  -->\n\nSharedModule->SafeLinkDirective \n\n\n\n\n\nTemperaturePipe \n\nTemperaturePipe \n\nTemperaturePipe  -->\n\nSharedModule->TemperaturePipe \n\n\n\n\n\nRemoteA16Interceptor\n\nRemoteA16Interceptor\n\nAppModule -->\n\nRemoteA16Interceptor->AppModule\n\n\n\n\n\nAvailablePlacesComponent\n\nAvailablePlacesComponent\n\nComponentsModule -->\n\nAvailablePlacesComponent->ComponentsModule\n\n\n\n\n\nCardComponent\n\nCardComponent\n\nComponentsModule -->\n\nCardComponent->ComponentsModule\n\n\n\n\n\nErrorModalComponent\n\nErrorModalComponent\n\nComponentsModule -->\n\nErrorModalComponent->ComponentsModule\n\n\n\n\n\nFavoritePlacesComponent\n\nFavoritePlacesComponent\n\nComponentsModule -->\n\nFavoritePlacesComponent->ComponentsModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nComponentsModule -->\n\nHeaderComponent->ComponentsModule\n\n\n\n\n\nLessonComponent\n\nLessonComponent\n\nComponentsModule -->\n\nLessonComponent->ComponentsModule\n\n\n\n\n\nModalComponent\n\nModalComponent\n\nComponentsModule -->\n\nModalComponent->ComponentsModule\n\n\n\n\n\nNewRequestComponent\n\nNewRequestComponent\n\nComponentsModule -->\n\nNewRequestComponent->ComponentsModule\n\n\n\n\n\nNewTaskComponent\n\nNewTaskComponent\n\nComponentsModule -->\n\nNewTaskComponent->ComponentsModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nComponentsModule -->\n\nNotFoundComponent->ComponentsModule\n\n\n\n\n\nPlacesComponent\n\nPlacesComponent\n\nComponentsModule -->\n\nPlacesComponent->ComponentsModule\n\n\n\n\n\nPlacesContainerComponent\n\nPlacesContainerComponent\n\nComponentsModule -->\n\nPlacesContainerComponent->ComponentsModule\n\n\n\n\n\nSimpleFormComponent\n\nSimpleFormComponent\n\nComponentsModule -->\n\nSimpleFormComponent->ComponentsModule\n\n\n\n\n\nTaskComponent\n\nTaskComponent\n\nComponentsModule -->\n\nTaskComponent->ComponentsModule\n\n\n\n\n\nTasksComponent\n\nTasksComponent\n\nComponentsModule -->\n\nTasksComponent->ComponentsModule\n\n\n\n\n\nTasksContainerComponent\n\nTasksContainerComponent\n\nComponentsModule -->\n\nTasksContainerComponent->ComponentsModule\n\n\n\n\n\nAvailablePlacesComponent \n\nAvailablePlacesComponent \n\nAvailablePlacesComponent  -->\n\nComponentsModule->AvailablePlacesComponent \n\n\n\n\n\nCardComponent \n\nCardComponent \n\nCardComponent  -->\n\nComponentsModule->CardComponent \n\n\n\n\n\nErrorModalComponent \n\nErrorModalComponent \n\nErrorModalComponent  -->\n\nComponentsModule->ErrorModalComponent \n\n\n\n\n\nFavoritePlacesComponent \n\nFavoritePlacesComponent \n\nFavoritePlacesComponent  -->\n\nComponentsModule->FavoritePlacesComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nComponentsModule->HeaderComponent \n\n\n\n\n\nLessonComponent \n\nLessonComponent \n\nLessonComponent  -->\n\nComponentsModule->LessonComponent \n\n\n\n\n\nNewRequestComponent \n\nNewRequestComponent \n\nNewRequestComponent  -->\n\nComponentsModule->NewRequestComponent \n\n\n\n\n\nNewTaskComponent \n\nNewTaskComponent \n\nNewTaskComponent  -->\n\nComponentsModule->NewTaskComponent \n\n\n\n\n\nNotFoundComponent \n\nNotFoundComponent \n\nNotFoundComponent  -->\n\nComponentsModule->NotFoundComponent \n\n\n\n\n\nPlacesComponent \n\nPlacesComponent \n\nPlacesComponent  -->\n\nComponentsModule->PlacesComponent \n\n\n\n\n\nPlacesContainerComponent \n\nPlacesContainerComponent \n\nPlacesContainerComponent  -->\n\nComponentsModule->PlacesContainerComponent \n\n\n\n\n\nTaskComponent \n\nTaskComponent \n\nTaskComponent  -->\n\nComponentsModule->TaskComponent \n\n\n\n\n\nTasksComponent \n\nTasksComponent \n\nTasksComponent  -->\n\nComponentsModule->TasksComponent \n\n\n\n\n\nTasksContainerComponent \n\nTasksContainerComponent \n\nTasksContainerComponent  -->\n\nComponentsModule->TasksContainerComponent \n\n\n\n\n\nAuthDirective\n\nAuthDirective\n\nSharedModule -->\n\nAuthDirective->SharedModule\n\n\n\n\n\nSafeLinkDirective\n\nSafeLinkDirective\n\nSharedModule -->\n\nSafeLinkDirective->SharedModule\n\n\n\n\n\nTemperaturePipe\n\nTemperaturePipe\n\nSharedModule -->\n\nTemperaturePipe->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    17 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TaskStatus   (src/.../task.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/components/task/task.model.ts\n    \n    \n        \n            \n                \n                    \n                    TaskStatus\n                \n            \n            \n                \n                        \"OPEN\" | \"IN_PROGRESS\" | \"DONE\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            canLeaveEditPage   (src/.../can-leave-edit-page.guard.ts)\n                        \n                        \n                            DUMMY_LESSONS   (src/.../dummy-data.ts)\n                        \n                        \n                            DUMMY_TASKS   (src/.../dummy-data.ts)\n                        \n                        \n                            loadPlacesService   (src/.../remote-providers.ts)\n                        \n                        \n                            resolveLessonName   (src/.../tasks.component.ts)\n                        \n                        \n                            resolveTitle   (src/.../tasks.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/guards/can-leave-edit-page/can-leave-edit-page.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        canLeaveEditPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CanDeactivateFn\n\n                    \n                \n                \n                    \n                        Default value : (\n  component: NewTaskComponent\n) => {\n  if (\n    component.enteredTitle.length > 0 ||\n    component.enteredSummary.length > 0 ||\n    component.enteredDate.length > 0\n  ) {\n    return confirm('Are you sure to leave with unsaved changes?');\n  }\n  return true;\n}\n                    \n                \n\n\n        \n    \n\n    src/assets/dummy-data.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DUMMY_LESSONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    id: 'l1',\n    name: 'Data biding',\n    avatar: 'angular-logo.png',\n  },\n  {\n    id: 'l2',\n    name: 'Directives',\n    avatar: 'angular-logo.png',\n  },\n  {\n    id: 'l3',\n    name: 'Pipes',\n    avatar: 'angular-logo.png',\n  },\n  {\n    id: 'l4',\n    name: 'Dependency Injection',\n    avatar: 'angular-logo.png',\n  },\n  {\n    id: 'l5',\n    name: 'Observables - RxJS',\n    avatar: 'rxjs.png',\n  },\n  {\n    id: 'l6',\n    name: 'HTTP Requests',\n    avatar: 'angular-logo.png',\n  },\n  {\n    id: 'l7',\n    name: 'Routes',\n    avatar: 'angular-logo.png',\n  },\n  {\n    id: 'l8',\n    name: 'Reactive Forms',\n    avatar: 'angular-logo.png',\n  },\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DUMMY_TASKS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    id: 't1',\n    lessonId: 'l1',\n    title: 'Data biding',\n    summary: 'It is the mechanism that allows synchronizing data between the model (component.ts) and the view (template.html):',\n    dueDate: '2025-12-31',\n    status: 'OPEN'\n  },\n  {\n    id: 't2',\n    lessonId: 'l2',\n    title: 'Directives',\n    summary: 'Special classes that allow you to modify the behavior, appearance or structure of the elements in the DOM of an application.',\n    dueDate: '2025-12-31',\n    status: 'DONE'\n  },\n  {\n    id: 't3',\n    lessonId: 'l3',\n    title: 'Pipes',\n    summary: 'Tools that allow you to transform and format data directly in HTML templates, without modifying the original value in the component.',\n    dueDate: '2025-12-31',\n    status: 'IN_PROGRESS'\n  },\n  {\n    id: 't4',\n    lessonId: 'l4',\n    title: 'Dependency Injection',\n    summary: 'It is a design pattern that allows you to automatically provide instances of classes (dependencies) that other objects (such as components or services) need to function, without having to create them directly.',\n    dueDate: '2025-12-31',\n    status: 'OPEN'\n  },\n  {\n    id: 't5',\n    lessonId: 'l5',\n    title: 'RxJS',\n    summary: 'Information, comparisons and examples of RxJS, observable pattern:',\n    dueDate: '2025-12-31',\n    status: 'OPEN'\n  },\n  {\n    id: 't6',\n    lessonId: 'l6',\n    title: 'HTTP Requests',\n    summary: 'Information and examples of HTTP requests, also with observable pattern:',\n    dueDate: '2025-12-31',\n    status: 'OPEN'\n  },\n  {\n    id: 't7',\n    lessonId: 'l7',\n    title: 'Routes',\n    summary: 'Information and examples in code of routing ans its complements:',\n    dueDate: '2025-12-31',\n    status: 'OPEN'\n  },\n    {\n    id: 't8',\n    lessonId: 'l8',\n    title: 'Reactive Forms',\n    summary: 'Practical example of a form with the implementation of: ngSubmit, ngModel, required, #XXXX=\"ngModel\", conditional rendering and conditional classes:',\n    dueDate: '2025-12-31',\n    status: 'OPEN'\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/app/remote-providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        loadPlacesService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async () => {\n  const remote = await loadRemoteModule({\n    type: 'module',\n    remoteEntry: 'http://localhost:4200/remoteEntry.js',\n    exposedModule: './PlacesService',\n  });\n\n  return remote.PlacesService;\n}\n                    \n                \n\n\n        \n    \n\n    src/components/tasks/tasks.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        resolveLessonName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ResolveFn\n\n                    \n                \n                \n                    \n                        Default value : (activatedRoute: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) => {\n  const lessonId = activatedRoute.paramMap.get('lessonId');\n  return DUMMY_LESSONS.find(lesson => lesson.id === lessonId)?.name || '';\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolveTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ResolveFn\n\n                    \n                \n                \n                    \n                        Default value : (activatedRoute: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) => {\n  return resolveLessonName(activatedRoute, routerState) + ' tasks';\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
